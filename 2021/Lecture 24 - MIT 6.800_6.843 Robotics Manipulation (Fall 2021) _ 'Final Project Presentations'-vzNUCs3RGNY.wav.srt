1
00:00:00,000 --> 00:00:08,680
 I guess I didn't take off all the relative advertising things, but we'll have some funny

2
00:00:08,680 --> 00:00:09,680
 background.

3
00:00:09,680 --> 00:00:10,680
 Okay, good.

4
00:00:10,680 --> 00:00:11,680
 Hey, welcome everybody.

5
00:00:11,680 --> 00:00:12,680
 Thank you for coming.

6
00:00:12,680 --> 00:00:19,680
 Some of you I haven't seen, but I'm glad you're here.

7
00:00:19,680 --> 00:00:22,000
 Yes, so this is how it's going to roll.

8
00:00:22,000 --> 00:00:24,160
 I'm going to just mostly rifle through.

9
00:00:24,160 --> 00:00:27,760
 I think that'll keep us, I mean, we have a lot of great presentations to see.

10
00:00:27,760 --> 00:00:30,320
 It'll take us about the hour and a half, maybe a little bit over.

11
00:00:30,320 --> 00:00:32,520
 We have the room until five if we need it.

12
00:00:32,520 --> 00:00:37,760
 I want to leave space for questions, especially if you're here and you want to stand up real

13
00:00:37,760 --> 00:00:41,800
 quick if your video starts playing and people know that there's a chance to ask questions

14
00:00:41,800 --> 00:00:44,800
 right afterwards, we can do that.

15
00:00:44,800 --> 00:00:48,480
 But mostly I'm just going to sit and enjoy it with you.

16
00:00:48,480 --> 00:00:52,840
 So they're going to go right down the order from the spreadsheet, only the public ones,

17
00:00:52,840 --> 00:00:53,840
 as we said.

18
00:00:53,840 --> 00:00:57,760
 Please let me know if there's any audio or technical difficulties.

19
00:00:57,760 --> 00:01:01,880
 And remember to fill out your subject evaluation.

20
00:01:01,880 --> 00:01:03,880
 So okay, here we go.

21
00:01:03,880 --> 00:01:06,880
 Let the show begin.

22
00:01:06,880 --> 00:01:11,000
 Hi, everyone.

23
00:01:11,000 --> 00:01:16,400
 For my final project, I made a robot that can handwrite letters.

24
00:01:16,400 --> 00:01:20,840
 I chose this problem because handwriting is a universal skill, but it's something a lot

25
00:01:20,840 --> 00:01:23,300
 of people take for granted.

26
00:01:23,300 --> 00:01:28,760
 But having a robot that can handwrite actually increases accessibility.

27
00:01:28,760 --> 00:01:33,720
 It can save time and it can even be used in an educational setting, as we see on the right

28
00:01:33,720 --> 00:01:34,720
 here.

29
00:01:34,720 --> 00:01:39,320
 This image comes from a really interesting paper from the Georgia Institute of Technology

30
00:01:39,320 --> 00:01:44,440
 showing the usefulness of learning from demonstration.

31
00:01:44,440 --> 00:01:49,920
 For my specific implementation of this handwriting robot, I'm using the Ewa robot and the Shunk

32
00:01:49,920 --> 00:01:52,720
 Gripper hand to represent a pencil.

33
00:01:52,720 --> 00:01:58,020
 I have a cylinder in the image on the right, that's the object in yellow, and the writing

34
00:01:58,020 --> 00:02:02,640
 surface is going to be this big purple wall.

35
00:02:02,640 --> 00:02:09,000
 The pencil is actually welded to the robot's hand to simplify the problem a little bit.

36
00:02:09,000 --> 00:02:13,480
 Given this setup, the robot is presented with a string and then its task is to write that

37
00:02:13,480 --> 00:02:15,640
 string on the wall.

38
00:02:15,640 --> 00:02:19,720
 Here we have a couple pictures of the starting position.

39
00:02:19,720 --> 00:02:26,440
 The bulk of my project came with the motion planning, creating a trajectory for the robot

40
00:02:26,440 --> 00:02:28,360
 to undertake given the string.

41
00:02:28,360 --> 00:02:33,840
 I'll let this video, one example of the robot writing a string play while I talk about my

42
00:02:33,840 --> 00:02:34,840
 implementation.

43
00:02:34,840 --> 00:02:44,000
 So I actually created a list of key poses for each English letter, spaces and periods

44
00:02:44,000 --> 00:02:49,960
 that rely on the position of the previous character to determine the poses of the new

45
00:02:49,960 --> 00:02:50,960
 character.

46
00:02:50,960 --> 00:02:58,000
 I then used Drake's linear interpolation tool to create a trajectory based on these key

47
00:02:58,000 --> 00:02:59,000
 poses.

48
00:02:59,000 --> 00:03:05,360
 It might seem like curves are hard given that I'm using linear interpolation, so I actually

49
00:03:05,360 --> 00:03:13,800
 used a parametric ellipse equation and took sections of that to be able to create curves.

50
00:03:13,800 --> 00:03:18,960
 To render this text after it's written on the wall, I used matplotlib, which has a nice

51
00:03:18,960 --> 00:03:22,440
 collection of lines functions.

52
00:03:22,440 --> 00:03:28,160
 So I can check whether or not to render a line by seeing if one pose and the next pose

53
00:03:28,160 --> 00:03:33,400
 are both in sufficient contact with the wall, knowing that if they are, linear interpolation

54
00:03:33,400 --> 00:03:37,900
 would mean that the line connecting them should be rendered.

55
00:03:37,900 --> 00:03:43,960
 I can then use that to choose what to render and get these nice images on the right.

56
00:03:43,960 --> 00:03:49,820
 The bottom text is actually what the robot wrote in the video we just watched.

57
00:03:49,820 --> 00:03:55,740
 For future work, I could possibly extend my robot to be explicitly used in education,

58
00:03:55,740 --> 00:04:01,620
 perhaps waiting for a student to write a character after it demos it.

59
00:04:01,620 --> 00:04:07,340
 I could also use machine learning to switch from a static implementation of characters

60
00:04:07,340 --> 00:04:13,300
 to a new framework where the robot is able to teach itself characters.

61
00:04:13,300 --> 00:04:14,300
 Thanks for a great semester.

62
00:04:14,300 --> 00:04:15,300
 Awesome.

63
00:04:15,300 --> 00:04:26,180
 I don't see Isabella here, but I learned that I need to make it easier for you guys to get

64
00:04:26,180 --> 00:04:27,180
 rid of those stupid bins.

65
00:04:27,180 --> 00:04:28,180
 I apologize for that.

66
00:04:28,180 --> 00:04:33,060
 Everybody's got these bins that are completely irrelevant to their task and their simulation.

67
00:04:33,060 --> 00:04:36,060
 Sorry for that.

68
00:04:36,060 --> 00:04:37,060
 Yeah.

69
00:04:37,060 --> 00:04:38,060
 Yeah.

70
00:04:38,060 --> 00:04:47,260
 So, I mean, a little bit more, but it won't be as much as you think.

71
00:04:47,260 --> 00:04:48,260
 Right?

72
00:04:48,260 --> 00:04:51,260
 That's how slides.com rolls.

73
00:04:51,260 --> 00:04:52,260
 Yeah.

74
00:04:52,260 --> 00:04:53,260
 Good question.

75
00:04:53,260 --> 00:04:54,260
 Okay.

76
00:04:54,260 --> 00:04:55,260
 Here we go.

77
00:04:55,260 --> 00:04:59,540
 And somehow my auto-play is not...

78
00:04:59,540 --> 00:05:00,540
 Hi everyone.

79
00:05:00,540 --> 00:05:01,540
 My name is Sung Ho Yeon.

80
00:05:01,540 --> 00:05:04,620
 My final project is about playing piano with a robotic hand.

81
00:05:04,620 --> 00:05:06,720
 I hope you enjoy the presentation.

82
00:05:06,720 --> 00:05:10,160
 As an introduction, I want to present my result of the project first.

83
00:05:10,160 --> 00:05:14,540
 In this demonstration, the robot is playing the classic piano song, "Salute to Amour."

84
00:05:14,540 --> 00:05:21,540
 [music]

85
00:05:22,540 --> 00:05:29,540
 [music]

86
00:05:30,540 --> 00:05:37,540
 [music]

87
00:05:37,540 --> 00:05:46,540
 [music]

88
00:05:46,540 --> 00:05:50,540
 [music]

89
00:05:50,540 --> 00:05:55,420
 For the rest of the presentation, I will give you a very brief overview about the project.

90
00:05:55,420 --> 00:05:59,540
 The goal of this project is to manipulate the robot to play the piano based on the music

91
00:05:59,540 --> 00:06:00,940
 sheet input.

92
00:06:00,940 --> 00:06:05,060
 It is roughly consists of three major blocks, offline planning, dynamic simulation, and

93
00:06:05,060 --> 00:06:06,580
 sound generation.

94
00:06:06,580 --> 00:06:11,820
 While all three blocks are developed and implemented, this project has a strong emphasis on exploring

95
00:06:11,820 --> 00:06:15,100
 practical offline motion planning strategy.

96
00:06:15,100 --> 00:06:18,740
 Instead of covering all the details, I will highlight a few interesting points in this

97
00:06:18,740 --> 00:06:20,340
 project.

98
00:06:20,340 --> 00:06:25,820
 In constructing robot arm on Drake for simulation, I attached Allegro robot hand on Kuka Iwa

99
00:06:25,820 --> 00:06:27,560
 arm on Drake.

100
00:06:27,560 --> 00:06:32,100
 As a result, I got 23 degree of freedom robot arm shown in the center.

101
00:06:32,100 --> 00:06:36,180
 The virtual piano model is also constructed with a door hinge type of rotational joint

102
00:06:36,180 --> 00:06:37,900
 on Drake.

103
00:06:37,900 --> 00:06:41,680
 This is a brief summary of the offline trajectory planner.

104
00:06:41,680 --> 00:06:45,480
 Given the music sheet input, the trajectory planner generates time domain joint space

105
00:06:45,480 --> 00:06:49,940
 trajectories through finger key correspondence matching and inverse kinematics.

106
00:06:49,940 --> 00:06:54,220
 In order to find finger key correspondence, I formulate a simple heuristic optimization

107
00:06:54,220 --> 00:06:58,900
 algorithm where the correspondence is chosen by minimizing the sum of corresponding finger

108
00:06:58,900 --> 00:07:00,600
 key distance.

109
00:07:00,600 --> 00:07:04,620
 This approach is largely inspired from the point cloud key point registration approach

110
00:07:04,620 --> 00:07:06,980
 in ICP algorithm.

111
00:07:06,980 --> 00:07:11,980
 With chosen finger key correspondence, I formulated the inverse kinematics problem to find feasible

112
00:07:11,980 --> 00:07:18,340
 trajectories of the robot for pressing desired keys and moving from a chord to another chord.

113
00:07:18,340 --> 00:07:22,820
 The slide shows a simplified formulation of these inverse kinematics problems.

114
00:07:22,820 --> 00:07:28,060
 To describe an important formulation in pressing keys, I used fingers positions and orientations

115
00:07:28,060 --> 00:07:33,020
 as constraint for desired key contacts as well as palms clearance from piano for avoiding

116
00:07:33,020 --> 00:07:34,820
 undesired collision.

117
00:07:34,820 --> 00:07:39,420
 For contact mode switching, I used a simple heuristic such that I planned the contact

118
00:07:39,420 --> 00:07:43,820
 mode of each finger in offline planning phase and used that information to control the torque

119
00:07:43,820 --> 00:07:47,500
 gain of each finger depends on the desired contact state of them.

120
00:07:47,500 --> 00:07:51,340
 Through this project, what I really want to show is that even with very basic building

121
00:07:51,340 --> 00:07:55,780
 blocks of robotics, proper integration of these blocks would enable the robot to do

122
00:07:55,780 --> 00:07:57,460
 many wonderful things.

123
00:07:57,460 --> 00:07:58,460
 Thank you.

124
00:07:58,460 --> 00:08:07,220
 I don't mean to single you out, but he's right here if you want to, everybody wants to throw

125
00:08:07,220 --> 00:08:08,220
 a question at him.

126
00:08:08,220 --> 00:08:09,220
 Yeah.

127
00:08:09,220 --> 00:08:38,220
 [inaudible]

128
00:08:38,220 --> 00:09:03,180
 I'm the microphone, so I have to pass my...

129
00:09:03,180 --> 00:09:31,380
 It picks up for me when I walk, so I'm going to have to pass myself around.

130
00:09:31,380 --> 00:09:37,420
 Robust stacking of convex polytopes.

131
00:09:37,420 --> 00:09:41,420
 Robust object stacking is application in a variety of industrial settings.

132
00:09:41,420 --> 00:09:45,340
 Games such as Bandu demonstrate the human ability to perform stable stacking even with

133
00:09:45,340 --> 00:09:48,420
 challenging constraints and irregular objects.

134
00:09:48,420 --> 00:09:51,140
 Here's the static equilibrium problem formulation.

135
00:09:51,140 --> 00:09:56,500
 The main constraints are force balance, torque balance, and linear complementarity.

136
00:09:56,500 --> 00:10:01,220
 It is straightforward to set up a mathematical program to optimize most of these variables.

137
00:10:01,220 --> 00:10:05,460
 The hard part is developing a differentiable model of contact, which involves parameterizing

138
00:10:05,460 --> 00:10:09,000
 the contact points and non-penetration constraint.

139
00:10:09,000 --> 00:10:13,260
 To understand how our contact model works, let us introduce this scenario with two blocks,

140
00:10:13,260 --> 00:10:15,560
 one in free space and one above the table.

141
00:10:15,560 --> 00:10:19,580
 We treat the contact points as decision variables and initialize them inside the objects.

142
00:10:19,580 --> 00:10:22,460
 The four contact points are shown in red.

143
00:10:22,460 --> 00:10:25,540
 We also initialize separating hyperplanes.

144
00:10:25,540 --> 00:10:30,740
 We then jointly optimize over the contact points, hyperplanes, positions, and forces,

145
00:10:30,740 --> 00:10:38,460
 and show an example of the optimization process.

146
00:10:38,460 --> 00:10:41,700
 The blocks are now in static equilibrium.

147
00:10:41,700 --> 00:10:46,300
 Having written a complete set of constraints for static equilibrium, we perform the optimization

148
00:10:46,300 --> 00:10:49,180
 using the SNOPT solver and it converges.

149
00:10:49,180 --> 00:10:53,500
 We initialize the blocks in the equilibrium state and perform forward simulation.

150
00:10:53,500 --> 00:10:55,040
 The blocks fall over.

151
00:10:55,040 --> 00:10:56,820
 What went wrong?

152
00:10:56,820 --> 00:11:01,780
 Surprisingly, solving the static equilibrium problem as formulated resulted in an unstable

153
00:11:01,780 --> 00:11:05,880
 solution for nearly half of our trials, stacking just two cuboids.

154
00:11:05,880 --> 00:11:10,260
 The problem is that unstable static equilibria are admitted in our constraints.

155
00:11:10,260 --> 00:11:14,660
 When the blocks are initialized in unstable static equilibrium, numerical issues may result

156
00:11:14,660 --> 00:11:17,260
 in imperfect balance and tower collapse.

157
00:11:17,260 --> 00:11:21,440
 In practice, though, the solutions the solver finds are actually small perturbations from

158
00:11:21,440 --> 00:11:24,740
 static equilibria due to constraint relaxations.

159
00:11:24,740 --> 00:11:27,460
 These are not equilibria at all.

160
00:11:27,460 --> 00:11:32,740
 To resolve this issue, we consider the addition of an external torque robustness constraint.

161
00:11:32,740 --> 00:11:36,580
 Instead of solving for a single equilibrium, we solve for multiple instances of static

162
00:11:36,580 --> 00:11:38,500
 equilibrium problem.

163
00:11:38,500 --> 00:11:43,300
 Each instance shares object poses and hyperplanes, but has separate forces and witness points

164
00:11:43,300 --> 00:11:47,000
 to compensate for a different torque applied to each body.

165
00:11:47,000 --> 00:11:52,840
 We find that this formulation converges for 95% of two block stacking trials and all solutions

166
00:11:52,840 --> 00:11:55,180
 are stable during forward simulation.

167
00:11:55,180 --> 00:11:59,260
 This animation visualizes the witness points optimized to balance an external torque perturbation

168
00:11:59,260 --> 00:12:01,020
 of 4 Nm.

169
00:12:01,020 --> 00:12:05,940
 We apply four perturbations, one on each axis, to avoid unstable edge cases.

170
00:12:05,940 --> 00:12:09,700
 You can see the witness points spread out in a diamond around the center witness point,

171
00:12:09,700 --> 00:12:11,460
 which solves for the static case.

172
00:12:11,460 --> 00:12:15,780
 Previously, we showed results where we started close to the correct solution and solved locally

173
00:12:15,780 --> 00:12:17,300
 for equilibrium.

174
00:12:17,300 --> 00:12:21,460
 This strategy won't allow us to be able to automatically generate many novel towers because

175
00:12:21,460 --> 00:12:24,460
 we have to solve for each correct initialization by hand.

176
00:12:24,460 --> 00:12:28,580
 What if we want to automatically generate diverse towers, as seen on the right?

177
00:12:28,580 --> 00:12:30,780
 We could sample initializations uniformly.

178
00:12:30,780 --> 00:12:34,460
 However, we find that this never succeeds when there is more than one block.

179
00:12:34,460 --> 00:12:38,580
 To scale tower generation, we instead sample from smarter distributions.

180
00:12:38,580 --> 00:12:43,380
 Our strategies include sampling non-penetrating object poses and sampling contact points inside

181
00:12:43,380 --> 00:12:46,220
 the polytopes.

182
00:12:46,220 --> 00:12:48,020
 Now we show the optimization process.

183
00:12:48,020 --> 00:13:12,340
 Here are five generated structures.

184
00:13:12,340 --> 00:13:23,300
 We can see there's a reasonable amount of diversity, especially in the bottom two blocks.

185
00:13:23,300 --> 00:13:42,100
 Finally we show results for two additional convex shapes.

186
00:13:42,100 --> 00:14:10,500
 And we can see that the first two blocks didn't compute.

187
00:14:10,500 --> 00:14:38,900
 So this is a very good example of how we can optimize our model.

188
00:14:38,900 --> 00:14:40,900
 [INAUDIBLE]

189
00:14:40,900 --> 00:14:58,220
 Nice work.

190
00:14:58,220 --> 00:14:59,660
 To the people watching online, I'm sorry.

191
00:14:59,660 --> 00:15:03,580
 I will not get perfect audio from the middle of the room.

192
00:15:03,580 --> 00:15:10,940
 Yeah, it would be ridiculous.

193
00:15:10,940 --> 00:15:16,140
 For our final project, Nick and I investigated the task of uni- and bimanual use of a power

194
00:15:16,140 --> 00:15:17,800
 drill.

195
00:15:17,800 --> 00:15:21,700
 We were struck by the ability of humans to easily bimanually manipulate objects, which

196
00:15:21,700 --> 00:15:26,200
 may introduce coupled or contact instability.

197
00:15:26,200 --> 00:15:30,540
 The task of using a power drill is especially interesting, as instability may arise for

198
00:15:30,540 --> 00:15:32,980
 several different reasons.

199
00:15:32,980 --> 00:15:36,500
 Touching on a drill generates destabilizing torques.

200
00:15:36,500 --> 00:15:40,860
 Grasping the drill with both hands creates a closed kinematic chain, which may introduce

201
00:15:40,860 --> 00:15:42,900
 coupled instability.

202
00:15:42,900 --> 00:15:47,640
 And the drill itself generates destabilizing torques of its own as it rotates.

203
00:15:47,640 --> 00:15:52,540
 In this work, the task was accomplished by superimposing several controllers.

204
00:15:52,540 --> 00:15:56,460
 An impedance controller regulated the gripper translation and rotation.

205
00:15:56,460 --> 00:16:00,540
 A null space projected joint impedance controller resolved the redundancy.

206
00:16:00,540 --> 00:16:05,220
 A feedforward torque compensated for the mass of the drill after it was picked up.

207
00:16:05,220 --> 00:16:10,140
 And a torque compensated for the gravity of the EWA itself.

208
00:16:10,140 --> 00:16:18,660
 The impedances were chosen to be in a range achievable by a relatively strong human, 1,000

209
00:16:18,660 --> 00:16:24,180
 newtons per meter translationally and 100 newton meters per radian rotationally.

210
00:16:24,180 --> 00:16:28,820
 Minimum jerk trajectories smoothly moved the nominal position of the gripper between waypoints.

211
00:16:28,820 --> 00:16:33,060
 These waypoints were specified relative to the drill.

212
00:16:33,060 --> 00:16:37,060
 Using this approach, the system was able to move into stable contact with the ground and

213
00:16:37,060 --> 00:16:40,340
 generate a contact force of 32 newtons.

214
00:16:40,340 --> 00:16:45,000
 In the bi-manual case, the exact same controller was used for the first EWA.

215
00:16:45,000 --> 00:16:50,360
 After the second EWA makes contact, the Z component of its impedance was set to zero.

216
00:16:50,360 --> 00:17:15,280
 In this case, the second EWA only adds impedance to stabilize the task.

217
00:17:15,280 --> 00:17:17,600
 This is the block diagram for our simulation.

218
00:17:17,600 --> 00:17:19,980
 While it may seem overwhelming, there are a few points of interest that we would like

219
00:17:19,980 --> 00:17:21,760
 to call attention to.

220
00:17:21,760 --> 00:17:26,360
 As you can see here, we used the standard inverse dynamics controllers for our two EWAs,

221
00:17:26,360 --> 00:17:32,280
 but set the PID gains for the position control to zero, making these act as gravity compensation.

222
00:17:32,280 --> 00:17:36,480
 Part of the reason we chose to have no position control in the inverse dynamics controllers

223
00:17:36,480 --> 00:17:40,420
 was to have impedance set by our main controller to let it vary.

224
00:17:40,420 --> 00:17:45,080
 In the EWA torque controller, we run our control scheme mentioned in a previous slide.

225
00:17:45,080 --> 00:17:49,600
 The EWA torque controller output combines with the gravity compensation in the adders,

226
00:17:49,600 --> 00:17:54,320
 which are then passed to the actuation of EWA1 and EWA2.

227
00:17:54,320 --> 00:17:58,560
 We also have gripper controllers that actuate the grippers, and functions that compute the

228
00:17:58,560 --> 00:18:04,960
 rigid transform of the forward kinematics of each EWA to allow for easier computation.

229
00:18:04,960 --> 00:18:08,880
 In order to simplify the task and make the simulation faster, we chose to simplify the

230
00:18:08,880 --> 00:18:13,720
 contact geometry of the drill to a few simple shapes, instead of using the mesh.

231
00:18:13,720 --> 00:18:17,360
 On the left, you can see the visual mesh of the drill, next to the simplified collision

232
00:18:17,360 --> 00:18:18,360
 model.

233
00:18:18,360 --> 00:18:22,560
 On the right, you can see the drill and collision geometry overlaid on top of each other, showing

234
00:18:22,560 --> 00:18:25,460
 the decent but not perfect approximation of the geometry.

235
00:18:25,460 --> 00:18:28,920
 The inertia properties of the drill were also estimated.

236
00:18:28,920 --> 00:18:32,080
 To prove that we didn't simply hard code all the positions, and to prove that the null

237
00:18:32,080 --> 00:18:36,560
 space projection works, here are two videos showing the unimanual task with different

238
00:18:36,560 --> 00:19:00,400
 initial drill positions and different nominal joint configurations.

239
00:19:00,400 --> 00:19:21,160
 Good.

240
00:19:21,160 --> 00:19:22,160
 Any questions?

241
00:19:22,160 --> 00:19:28,120
 It looks like you had a little bit of the null space dance happening there, right?

242
00:19:28,120 --> 00:19:33,440
 Do you think that's just tuning, or do you think that's-- is there something missing

243
00:19:33,440 --> 00:19:36,840
 in the formulation that's letting you wiggle a little bit on the null space?

244
00:19:36,840 --> 00:19:37,840
 [INAUDIBLE]

245
00:19:37,840 --> 00:19:38,840
 Yeah.

246
00:19:38,840 --> 00:19:39,840
 Yeah, yeah.

247
00:19:39,840 --> 00:19:40,840
 [INAUDIBLE]

248
00:19:40,840 --> 00:20:05,440
 I think some of the ways that those things integrate through the system, through the

249
00:20:05,440 --> 00:20:08,400
 EWA controller that's there, I've seen those.

250
00:20:08,400 --> 00:20:09,400
 I think that's not just-- yeah.

251
00:20:09,400 --> 00:20:11,840
 I think those do pop up from some of the integration pipelines.

252
00:20:11,840 --> 00:20:17,840
 We wanted to actually keep them closed without adding null space to get the all the [INAUDIBLE]

253
00:20:17,840 --> 00:20:22,560
 I know a few people figured out that you had to turn off the stiffness of the controller

254
00:20:22,560 --> 00:20:24,240
 to do torque control.

255
00:20:24,240 --> 00:20:27,880
 And that's actually what you do on the real KUKA, too, because that's-- by default, it

256
00:20:27,880 --> 00:20:32,760
 wants to do both, and you have to just pretend that the position gains are zero to make it

257
00:20:32,760 --> 00:20:33,760
 work.

258
00:20:33,760 --> 00:20:34,760
 So that's great.

259
00:20:34,760 --> 00:20:35,760
 Great stuff.

260
00:20:35,760 --> 00:20:36,760
 OK.

261
00:20:36,760 --> 00:20:37,760
 Hi, everyone.

262
00:20:37,760 --> 00:20:38,760
 My name's Portia Gaethkel.

263
00:20:38,760 --> 00:20:39,760
 And my name is Julia Wyatt.

264
00:20:39,760 --> 00:20:40,760
 Our 6800 final project is a joint perception and manipulation system for multi-shaped peg

265
00:20:40,760 --> 00:20:41,760
 and hole tasks.

266
00:20:41,760 --> 00:20:42,760
 Our project is designed around a simple children's toy that we've all likely seen before, shown

267
00:20:42,760 --> 00:20:43,760
 on the left.

268
00:20:43,760 --> 00:20:44,760
 This is our system's representation of the same toy.

269
00:20:44,760 --> 00:20:45,760
 The task consists of recognizing differently shaped blocks and putting them together in

270
00:20:45,760 --> 00:20:46,760
 a single, single-piece.

271
00:20:46,760 --> 00:20:47,760
 The goal is to make the toy look like a toy, and to make it look like a toy.

272
00:20:47,760 --> 00:20:48,760
 So we're going to start with a simple toy.

273
00:20:48,760 --> 00:20:49,760
 And we're going to start with a simple toy.

274
00:20:49,760 --> 00:20:50,760
 And we're going to start with a simple toy.

275
00:20:50,760 --> 00:20:51,760
 And we're going to start with a simple toy.

276
00:20:51,760 --> 00:20:52,760
 And we're going to start with a simple toy.

277
00:20:52,760 --> 00:20:53,760
 And we're going to start with a simple toy.

278
00:20:53,760 --> 00:21:18,760
 And we're going to start with a simple toy.

279
00:21:18,760 --> 00:21:25,760
 And we're going to start with a simple toy.

280
00:21:25,760 --> 00:21:26,760
 And we're going to start with a simple toy.

281
00:21:26,760 --> 00:21:27,760
 And we're going to start with a simple toy.

282
00:21:27,760 --> 00:21:28,760
 And we're going to start with a simple toy.

283
00:21:28,760 --> 00:21:29,760
 And we're going to start with a simple toy.

284
00:21:29,760 --> 00:21:30,760
 And we're going to start with a simple toy.

285
00:21:30,760 --> 00:21:31,760
 And we're going to start with a simple toy.

286
00:21:31,760 --> 00:21:32,760
 And we're going to start with a simple toy.

287
00:21:32,760 --> 00:21:33,760
 And we're going to start with a simple toy.

288
00:21:33,760 --> 00:21:34,760
 And we're going to start with a simple toy.

289
00:21:34,760 --> 00:21:35,760
 And we're going to start with a simple toy.

290
00:21:35,760 --> 00:21:36,760
 And we're going to start with a simple toy.

291
00:21:36,760 --> 00:21:37,760
 And we're going to start with a simple toy.

292
00:21:37,760 --> 00:21:38,760
 And we're going to start with a simple toy.

293
00:21:38,760 --> 00:21:39,760
 And we're going to start with a simple toy.

294
00:21:39,760 --> 00:21:40,760
 And we're going to start with a simple toy.

295
00:21:40,760 --> 00:22:08,760
 And we're going to start with a simple toy.

296
00:22:08,760 --> 00:22:10,760
 And we're going to start with a simple toy.

297
00:22:10,760 --> 00:22:11,760
 And we're going to start with a simple toy.

298
00:22:11,760 --> 00:22:12,760
 And we're going to start with a simple toy.

299
00:22:12,760 --> 00:22:13,760
 And we're going to start with a simple toy.

300
00:22:13,760 --> 00:22:14,760
 And we're going to start with a simple toy.

301
00:22:14,760 --> 00:22:15,760
 And we're going to start with a simple toy.

302
00:22:15,760 --> 00:22:16,760
 And we're going to start with a simple toy.

303
00:22:16,760 --> 00:22:17,760
 And we're going to start with a simple toy.

304
00:22:17,760 --> 00:22:18,760
 And we're going to start with a simple toy.

305
00:22:18,760 --> 00:22:19,760
 And we're going to start with a simple toy.

306
00:22:19,760 --> 00:22:20,760
 And we're going to start with a simple toy.

307
00:22:20,760 --> 00:22:21,760
 And we're going to start with a simple toy.

308
00:22:21,760 --> 00:22:22,760
 And we're going to start with a simple toy.

309
00:22:22,760 --> 00:22:23,760
 And we're going to start with a simple toy.

310
00:22:23,760 --> 00:22:24,760
 And we're going to start with a simple toy.

311
00:22:24,760 --> 00:22:25,760
 And we're going to start with a simple toy.

312
00:22:25,760 --> 00:22:49,760
 And we're going to start with a simple toy.

313
00:22:49,760 --> 00:22:55,760
 And we're going to start with a simple toy.

314
00:22:55,760 --> 00:23:19,760
 And we're going to start with a simple toy.

315
00:23:19,760 --> 00:23:25,760
 And we're going to start with a simple toy.

316
00:23:25,760 --> 00:23:26,760
 And we're going to start with a simple toy.

317
00:23:26,760 --> 00:23:27,760
 And we're going to start with a simple toy.

318
00:23:27,760 --> 00:23:28,760
 And we're going to start with a simple toy.

319
00:23:28,760 --> 00:23:29,760
 And we're going to start with a simple toy.

320
00:23:29,760 --> 00:23:30,760
 And we're going to start with a simple toy.

321
00:23:30,760 --> 00:23:31,760
 And we're going to start with a simple toy.

322
00:23:31,760 --> 00:23:32,760
 And we're going to start with a simple toy.

323
00:23:32,760 --> 00:23:33,760
 And we're going to start with a simple toy.

324
00:23:33,760 --> 00:23:34,760
 And we're going to start with a simple toy.

325
00:23:34,760 --> 00:23:35,760
 And we're going to start with a simple toy.

326
00:23:35,760 --> 00:23:36,760
 And we're going to start with a simple toy.

327
00:23:36,760 --> 00:23:37,760
 And we're going to start with a simple toy.

328
00:23:37,760 --> 00:23:38,760
 And we're going to start with a simple toy.

329
00:23:38,760 --> 00:23:39,760
 And we're going to start with a simple toy.

330
00:23:39,760 --> 00:23:40,760
 And we're going to start with a simple toy.

331
00:23:40,760 --> 00:24:04,760
 And we're going to start with a simple toy.

332
00:24:04,760 --> 00:24:10,760
 And we're going to start with a simple toy.

333
00:24:10,760 --> 00:24:11,760
 And we're going to start with a simple toy.

334
00:24:11,760 --> 00:24:12,760
 And we're going to start with a simple toy.

335
00:24:12,760 --> 00:24:13,760
 And we're going to start with a simple toy.

336
00:24:13,760 --> 00:24:14,760
 And we're going to start with a simple toy.

337
00:24:14,760 --> 00:24:15,760
 And we're going to start with a simple toy.

338
00:24:15,760 --> 00:24:16,760
 And we're going to start with a simple toy.

339
00:24:16,760 --> 00:24:17,760
 And we're going to start with a simple toy.

340
00:24:17,760 --> 00:24:18,760
 And we're going to start with a simple toy.

341
00:24:18,760 --> 00:24:19,760
 And we're going to start with a simple toy.

342
00:24:19,760 --> 00:24:20,760
 And we're going to start with a simple toy.

343
00:24:20,760 --> 00:24:21,760
 And we're going to start with a simple toy.

344
00:24:21,760 --> 00:24:22,760
 And we're going to start with a simple toy.

345
00:24:22,760 --> 00:24:23,760
 And we're going to start with a simple toy.

346
00:24:23,760 --> 00:24:24,760
 And we're going to start with a simple toy.

347
00:24:24,760 --> 00:24:25,760
 And we're going to start with a simple toy.

348
00:24:25,760 --> 00:24:47,760
 And we're going to start with a simple toy.

349
00:24:47,760 --> 00:25:15,760
 And we're going to start with a simple toy.

350
00:25:15,760 --> 00:25:17,760
 And we're going to start with a simple toy.

351
00:25:17,760 --> 00:25:18,760
 And we're going to start with a simple toy.

352
00:25:18,760 --> 00:25:19,760
 And we're going to start with a simple toy.

353
00:25:19,760 --> 00:25:20,760
 And we're going to start with a simple toy.

354
00:25:20,760 --> 00:25:21,760
 And we're going to start with a simple toy.

355
00:25:21,760 --> 00:25:22,760
 And we're going to start with a simple toy.

356
00:25:22,760 --> 00:25:23,760
 And we're going to start with a simple toy.

357
00:25:23,760 --> 00:25:24,760
 And we're going to start with a simple toy.

358
00:25:24,760 --> 00:25:25,760
 And we're going to start with a simple toy.

359
00:25:25,760 --> 00:25:26,760
 And we're going to start with a simple toy.

360
00:25:26,760 --> 00:25:27,760
 And we're going to start with a simple toy.

361
00:25:27,760 --> 00:25:28,760
 And we're going to start with a simple toy.

362
00:25:28,760 --> 00:25:29,760
 And we're going to start with a simple toy.

363
00:25:29,760 --> 00:25:30,760
 And we're going to start with a simple toy.

364
00:25:30,760 --> 00:25:31,760
 And we're going to start with a simple toy.

365
00:25:31,760 --> 00:25:32,760
 And we're going to start with a simple toy.

366
00:25:32,760 --> 00:25:56,760
 And we're going to start with a simple toy.

367
00:25:56,760 --> 00:26:22,760
 And we're going to start with a simple toy.

368
00:26:22,760 --> 00:26:51,760
 And we're going to start with a simple toy.

369
00:26:51,760 --> 00:26:52,760
 And we're going to start with a simple toy.

370
00:26:52,760 --> 00:26:53,760
 And we're going to start with a simple toy.

371
00:26:53,760 --> 00:26:54,760
 And we're going to start with a simple toy.

372
00:26:54,760 --> 00:26:55,760
 And we're going to start with a simple toy.

373
00:26:55,760 --> 00:26:56,760
 And we're going to start with a simple toy.

374
00:26:56,760 --> 00:26:57,760
 And we're going to start with a simple toy.

375
00:26:57,760 --> 00:26:58,760
 And we're going to start with a simple toy.

376
00:26:58,760 --> 00:26:59,760
 And we're going to start with a simple toy.

377
00:26:59,760 --> 00:27:00,760
 And we're going to start with a simple toy.

378
00:27:00,760 --> 00:27:01,760
 And we're going to start with a simple toy.

379
00:27:01,760 --> 00:27:02,760
 And we're going to start with a simple toy.

380
00:27:02,760 --> 00:27:03,760
 And we're going to start with a simple toy.

381
00:27:03,760 --> 00:27:04,760
 And we're going to start with a simple toy.

382
00:27:04,760 --> 00:27:05,760
 And we're going to start with a simple toy.

383
00:27:05,760 --> 00:27:06,760
 And we're going to start with a simple toy.

384
00:27:06,760 --> 00:27:07,760
 And we're going to start with a simple toy.

385
00:27:07,760 --> 00:27:31,760
 And we're going to start with a simple toy.

386
00:27:31,760 --> 00:27:55,760
 And we're going to start with a simple toy.

387
00:27:55,760 --> 00:28:14,760
 And we're going to start with a simple toy.

388
00:28:14,760 --> 00:28:42,760
 And we're going to start with a simple toy.

389
00:28:42,760 --> 00:29:12,560
 And we're going to start with a simple toy.

390
00:29:12,560 --> 00:29:13,560
 And we're going to start with a simple toy.

391
00:29:13,560 --> 00:29:14,560
 And we're going to start with a simple toy.

392
00:29:14,560 --> 00:29:15,560
 And we're going to start with a simple toy.

393
00:29:15,560 --> 00:29:16,560
 And we're going to start with a simple toy.

394
00:29:16,560 --> 00:29:17,560
 And we're going to start with a simple toy.

395
00:29:17,560 --> 00:29:18,560
 And we're going to start with a simple toy.

396
00:29:18,560 --> 00:29:19,560
 And we're going to start with a simple toy.

397
00:29:19,560 --> 00:29:20,560
 And we're going to start with a simple toy.

398
00:29:20,560 --> 00:29:21,560
 And we're going to start with a simple toy.

399
00:29:21,560 --> 00:29:22,560
 And we're going to start with a simple toy.

400
00:29:22,560 --> 00:29:23,560
 And we're going to start with a simple toy.

401
00:29:23,560 --> 00:29:24,560
 And we're going to start with a simple toy.

402
00:29:24,560 --> 00:29:25,560
 And we're going to start with a simple toy.

403
00:29:25,560 --> 00:29:26,560
 And we're going to start with a simple toy.

404
00:29:26,560 --> 00:29:27,560
 And we're going to start with a simple toy.

405
00:29:27,560 --> 00:29:28,560
 And we're going to start with a simple toy.

406
00:29:28,560 --> 00:29:54,560
 And we're going to start with a simple toy.

407
00:29:54,560 --> 00:30:19,560
 And we're going to start with a simple toy.

408
00:30:19,560 --> 00:30:47,560
 And we're going to start with a simple toy.

409
00:30:47,560 --> 00:30:49,560
 And we're going to start with a simple toy.

410
00:30:49,560 --> 00:30:50,560
 And we're going to start with a simple toy.

411
00:30:50,560 --> 00:30:51,560
 And we're going to start with a simple toy.

412
00:30:51,560 --> 00:30:52,560
 And we're going to start with a simple toy.

413
00:30:52,560 --> 00:30:53,560
 And we're going to start with a simple toy.

414
00:30:53,560 --> 00:30:54,560
 And we're going to start with a simple toy.

415
00:30:54,560 --> 00:30:55,560
 And we're going to start with a simple toy.

416
00:30:55,560 --> 00:30:56,560
 And we're going to start with a simple toy.

417
00:30:56,560 --> 00:30:57,560
 And we're going to start with a simple toy.

418
00:30:57,560 --> 00:30:58,560
 And we're going to start with a simple toy.

419
00:30:58,560 --> 00:30:59,560
 And we're going to start with a simple toy.

420
00:30:59,560 --> 00:31:00,560
 And we're going to start with a simple toy.

421
00:31:00,560 --> 00:31:01,560
 And we're going to start with a simple toy.

422
00:31:01,560 --> 00:31:02,560
 And we're going to start with a simple toy.

423
00:31:02,560 --> 00:31:03,560
 And we're going to start with a simple toy.

424
00:31:03,560 --> 00:31:04,560
 And we're going to start with a simple toy.

425
00:31:04,560 --> 00:31:29,560
 And we're going to start with a simple toy.

426
00:31:29,560 --> 00:31:34,560
 >> Hi, everyone.

427
00:31:34,560 --> 00:31:35,560
 My name is Ben.

428
00:31:35,560 --> 00:31:36,560
 And I'm the lead developer for the robot.

429
00:31:36,560 --> 00:31:38,560
 And I'm going to be talking about how to use the robot.

430
00:31:38,560 --> 00:31:40,560
 And I'm going to be talking about how to use the robot.

431
00:31:40,560 --> 00:31:41,560
 And I'm going to be talking about how to use the robot.

432
00:31:41,560 --> 00:31:42,560
 And I'm going to be talking about how to use the robot.

433
00:31:42,560 --> 00:31:43,560
 And I'm going to be talking about how to use the robot.

434
00:31:43,560 --> 00:31:44,560
 And I'm going to be talking about how to use the robot.

435
00:31:44,560 --> 00:31:45,560
 And I'm going to be talking about how to use the robot.

436
00:31:45,560 --> 00:31:46,560
 And I'm going to be talking about how to use the robot.

437
00:31:46,560 --> 00:31:47,560
 And I'm going to be talking about how to use the robot.

438
00:31:47,560 --> 00:31:48,560
 And I'm going to be talking about how to use the robot.

439
00:31:48,560 --> 00:31:49,560
 And I'm going to be talking about how to use the robot.

440
00:31:49,560 --> 00:31:50,560
 And I'm going to be talking about how to use the robot.

441
00:31:50,560 --> 00:32:19,560
 And I'm going to be talking about how to use the robot.

442
00:32:19,560 --> 00:32:20,560
 So let's get started.

443
00:32:20,560 --> 00:32:21,560
 So let's get started.

444
00:32:21,560 --> 00:32:23,560
 So first we're going to start by looking at the first step.

445
00:32:23,560 --> 00:32:24,560
 We're going to look at the first step.

446
00:32:24,560 --> 00:32:48,560
 And we're going to look at the first step.

447
00:32:48,560 --> 00:32:54,560
 And we're going to look at the first step.

448
00:32:54,560 --> 00:32:55,560
 And we're going to look at the first step.

449
00:32:55,560 --> 00:32:56,560
 And we're going to look at the first step.

450
00:32:56,560 --> 00:32:57,560
 And we're going to look at the first step.

451
00:32:57,560 --> 00:32:58,560
 And we're going to look at the first step.

452
00:32:58,560 --> 00:32:59,560
 And we're going to look at the first step.

453
00:32:59,560 --> 00:33:00,560
 And we're going to look at the first step.

454
00:33:00,560 --> 00:33:01,560
 And we're going to look at the first step.

455
00:33:01,560 --> 00:33:02,560
 And we're going to look at the first step.

456
00:33:02,560 --> 00:33:03,560
 And we're going to look at the first step.

457
00:33:03,560 --> 00:33:04,560
 And we're going to look at the first step.

458
00:33:04,560 --> 00:33:05,560
 And we're going to look at the first step.

459
00:33:05,560 --> 00:33:06,560
 And we're going to look at the first step.

460
00:33:06,560 --> 00:33:07,560
 And we're going to look at the first step.

461
00:33:07,560 --> 00:33:08,560
 And we're going to look at the first step.

462
00:33:08,560 --> 00:33:09,560
 And we're going to look at the first step.

463
00:33:09,560 --> 00:33:38,560
 And we're going to look at the first step.

464
00:33:38,560 --> 00:33:39,560
 And we're going to look at the first step.

465
00:33:39,560 --> 00:33:40,560
 And we're going to look at the first step.

466
00:33:40,560 --> 00:33:41,560
 And we're going to look at the first step.

467
00:33:41,560 --> 00:33:42,560
 And we're going to look at the first step.

468
00:33:42,560 --> 00:33:43,560
 And we're going to look at the first step.

469
00:33:43,560 --> 00:33:44,560
 And we're going to look at the first step.

470
00:33:44,560 --> 00:33:45,560
 And we're going to look at the first step.

471
00:33:45,560 --> 00:33:46,560
 And we're going to look at the first step.

472
00:33:46,560 --> 00:33:47,560
 And we're going to look at the first step.

473
00:33:47,560 --> 00:33:48,560
 And we're going to look at the first step.

474
00:33:48,560 --> 00:33:49,560
 And we're going to look at the first step.

475
00:33:49,560 --> 00:33:50,560
 And we're going to look at the first step.

476
00:33:50,560 --> 00:33:51,560
 And we're going to look at the first step.

477
00:33:51,560 --> 00:33:52,560
 And we're going to look at the first step.

478
00:33:52,560 --> 00:33:53,560
 And we're going to look at the first step.

479
00:33:53,560 --> 00:33:54,560
 And we're going to look at the first step.

480
00:33:54,560 --> 00:34:18,560
 And we're going to look at the first step.

481
00:34:18,560 --> 00:34:24,560
 And we're going to look at the first step.

482
00:34:24,560 --> 00:34:48,560
 And we're going to look at the first step.

483
00:34:48,560 --> 00:34:54,560
 And we're going to look at the first step.

484
00:34:54,560 --> 00:34:55,560
 And we're going to look at the first step.

485
00:34:55,560 --> 00:34:56,560
 And we're going to look at the first step.

486
00:34:56,560 --> 00:34:57,560
 And we're going to look at the first step.

487
00:34:57,560 --> 00:34:58,560
 And we're going to look at the first step.

488
00:34:58,560 --> 00:34:59,560
 And we're going to look at the first step.

489
00:34:59,560 --> 00:35:00,560
 And we're going to look at the first step.

490
00:35:00,560 --> 00:35:01,560
 And we're going to look at the first step.

491
00:35:01,560 --> 00:35:02,560
 And we're going to look at the first step.

492
00:35:02,560 --> 00:35:03,560
 And we're going to look at the first step.

493
00:35:03,560 --> 00:35:04,560
 And we're going to look at the first step.

494
00:35:04,560 --> 00:35:05,560
 And we're going to look at the first step.

495
00:35:05,560 --> 00:35:06,560
 And we're going to look at the first step.

496
00:35:06,560 --> 00:35:07,560
 And we're going to look at the first step.

497
00:35:07,560 --> 00:35:08,560
 And we're going to look at the first step.

498
00:35:08,560 --> 00:35:09,560
 And we're going to look at the first step.

499
00:35:09,560 --> 00:35:38,560
 And we're going to look at the first step.

500
00:35:38,560 --> 00:35:39,560
 And we're going to look at the first step.

501
00:35:39,560 --> 00:35:40,560
 And we're going to look at the first step.

502
00:35:40,560 --> 00:35:41,560
 And we're going to look at the first step.

503
00:35:41,560 --> 00:35:42,560
 And we're going to look at the first step.

504
00:35:42,560 --> 00:35:43,560
 And we're going to look at the first step.

505
00:35:43,560 --> 00:35:44,560
 And we're going to look at the first step.

506
00:35:44,560 --> 00:35:45,560
 And we're going to look at the first step.

507
00:35:45,560 --> 00:35:46,560
 And we're going to look at the first step.

508
00:35:46,560 --> 00:35:47,560
 And we're going to look at the first step.

509
00:35:47,560 --> 00:35:48,560
 And we're going to look at the first step.

510
00:35:48,560 --> 00:35:49,560
 And we're going to look at the first step.

511
00:35:49,560 --> 00:35:50,560
 And we're going to look at the first step.

512
00:35:50,560 --> 00:35:51,560
 And we're going to look at the first step.

513
00:35:51,560 --> 00:35:52,560
 And we're going to look at the first step.

514
00:35:52,560 --> 00:35:53,560
 And we're going to look at the first step.

515
00:35:53,560 --> 00:35:54,560
 And we're going to look at the first step.

516
00:35:54,560 --> 00:36:18,560
 And we're going to look at the first step.

517
00:36:18,560 --> 00:36:42,560
 And we're going to look at the first step.

518
00:36:42,560 --> 00:37:11,560
 And we're going to look at the first step.

519
00:37:11,560 --> 00:37:12,560
 And we're going to look at the first step.

520
00:37:12,560 --> 00:37:13,560
 And we're going to look at the first step.

521
00:37:13,560 --> 00:37:14,560
 And we're going to look at the first step.

522
00:37:14,560 --> 00:37:15,560
 And we're going to look at the first step.

523
00:37:15,560 --> 00:37:16,560
 And we're going to look at the first step.

524
00:37:16,560 --> 00:37:17,560
 And we're going to look at the first step.

525
00:37:17,560 --> 00:37:18,560
 And we're going to look at the first step.

526
00:37:18,560 --> 00:37:19,560
 And we're going to look at the first step.

527
00:37:19,560 --> 00:37:20,560
 And we're going to look at the first step.

528
00:37:20,560 --> 00:37:21,560
 And we're going to look at the first step.

529
00:37:21,560 --> 00:37:22,560
 And we're going to look at the first step.

530
00:37:22,560 --> 00:37:23,560
 And we're going to look at the first step.

531
00:37:23,560 --> 00:37:24,560
 And we're going to look at the first step.

532
00:37:24,560 --> 00:37:25,560
 And we're going to look at the first step.

533
00:37:25,560 --> 00:37:26,560
 And we're going to look at the first step.

534
00:37:26,560 --> 00:37:27,560
 And we're going to look at the first step.

535
00:37:27,560 --> 00:37:53,560
 And we're going to look at the first step.

536
00:37:53,560 --> 00:38:22,560
 And we're going to look at the first step.

537
00:38:22,560 --> 00:38:23,560
 And we're going to look at the first step.

538
00:38:23,560 --> 00:38:24,560
 And we're going to look at the first step.

539
00:38:24,560 --> 00:38:25,560
 And we're going to look at the first step.

540
00:38:25,560 --> 00:38:26,560
 And we're going to look at the first step.

541
00:38:26,560 --> 00:38:27,560
 And we're going to look at the first step.

542
00:38:27,560 --> 00:38:28,560
 And we're going to look at the first step.

543
00:38:28,560 --> 00:38:29,560
 And we're going to look at the first step.

544
00:38:29,560 --> 00:38:30,560
 And we're going to look at the first step.

545
00:38:30,560 --> 00:38:31,560
 And we're going to look at the first step.

546
00:38:31,560 --> 00:38:32,560
 And we're going to look at the first step.

547
00:38:32,560 --> 00:38:33,560
 And we're going to look at the first step.

548
00:38:33,560 --> 00:38:34,560
 And we're going to look at the first step.

549
00:38:34,560 --> 00:38:35,560
 And we're going to look at the first step.

550
00:38:35,560 --> 00:38:36,560
 And we're going to look at the first step.

551
00:38:36,560 --> 00:38:37,560
 And we're going to look at the first step.

552
00:38:37,560 --> 00:38:38,560
 And we're going to look at the first step.

553
00:38:38,560 --> 00:39:02,560
 And we're going to look at the first step.

554
00:39:02,560 --> 00:39:26,560
 And we're going to look at the first step.

555
00:39:26,560 --> 00:39:55,560
 And we're going to look at the first step.

556
00:39:55,560 --> 00:39:56,560
 And we're going to look at the first step.

557
00:39:56,560 --> 00:39:57,560
 And we're going to look at the first step.

558
00:39:57,560 --> 00:39:58,560
 And we're going to look at the first step.

559
00:39:58,560 --> 00:39:59,560
 And we're going to look at the first step.

560
00:39:59,560 --> 00:40:00,560
 And we're going to look at the first step.

561
00:40:00,560 --> 00:40:01,560
 And we're going to look at the first step.

562
00:40:01,560 --> 00:40:02,560
 And we're going to look at the first step.

563
00:40:02,560 --> 00:40:03,560
 And we're going to look at the first step.

564
00:40:03,560 --> 00:40:04,560
 And we're going to look at the first step.

565
00:40:04,560 --> 00:40:05,560
 And we're going to look at the first step.

566
00:40:05,560 --> 00:40:06,560
 And we're going to look at the first step.

567
00:40:06,560 --> 00:40:07,560
 And we're going to look at the first step.

568
00:40:07,560 --> 00:40:08,560
 And we're going to look at the first step.

569
00:40:08,560 --> 00:40:09,560
 And we're going to look at the first step.

570
00:40:09,560 --> 00:40:10,560
 And we're going to look at the first step.

571
00:40:10,560 --> 00:40:11,560
 And we're going to look at the first step.

572
00:40:11,560 --> 00:40:32,560
 And we're going to look at the first step.

573
00:40:32,560 --> 00:41:01,560
 And we're going to look at the first step.

574
00:41:01,560 --> 00:41:30,560
 And we're going to look at the first step.

575
00:41:30,560 --> 00:41:31,560
 And we're going to look at the first step.

576
00:41:31,560 --> 00:41:32,560
 And we're going to look at the first step.

577
00:41:32,560 --> 00:41:33,560
 And we're going to look at the first step.

578
00:41:33,560 --> 00:41:34,560
 And we're going to look at the first step.

579
00:41:34,560 --> 00:41:35,560
 And we're going to look at the first step.

580
00:41:35,560 --> 00:41:36,560
 And we're going to look at the first step.

581
00:41:36,560 --> 00:41:37,560
 And we're going to look at the first step.

582
00:41:37,560 --> 00:41:38,560
 And we're going to look at the first step.

583
00:41:38,560 --> 00:41:39,560
 And we're going to look at the first step.

584
00:41:39,560 --> 00:41:40,560
 And we're going to look at the first step.

585
00:41:40,560 --> 00:41:41,560
 And we're going to look at the first step.

586
00:41:41,560 --> 00:41:42,560
 And we're going to look at the first step.

587
00:41:42,560 --> 00:41:43,560
 And we're going to look at the first step.

588
00:41:43,560 --> 00:41:44,560
 And we're going to look at the first step.

589
00:41:44,560 --> 00:41:45,560
 And we're going to look at the first step.

590
00:41:45,560 --> 00:41:46,560
 And we're going to look at the first step.

591
00:41:46,560 --> 00:42:10,560
 And we're going to look at the first step.

592
00:42:10,560 --> 00:42:16,560
 And we're going to look at the first step.

593
00:42:16,560 --> 00:42:40,560
 And we're going to look at the first step.

594
00:42:40,560 --> 00:43:09,560
 And we're going to look at the first step.

595
00:43:09,560 --> 00:43:10,560
 And we're going to look at the first step.

596
00:43:10,560 --> 00:43:11,560
 And we're going to look at the first step.

597
00:43:11,560 --> 00:43:12,560
 And we're going to look at the first step.

598
00:43:12,560 --> 00:43:13,560
 And we're going to look at the first step.

599
00:43:13,560 --> 00:43:14,560
 And we're going to look at the first step.

600
00:43:14,560 --> 00:43:15,560
 And we're going to look at the first step.

601
00:43:15,560 --> 00:43:16,560
 And we're going to look at the first step.

602
00:43:16,560 --> 00:43:17,560
 And we're going to look at the first step.

603
00:43:17,560 --> 00:43:18,560
 And we're going to look at the first step.

604
00:43:18,560 --> 00:43:19,560
 And we're going to look at the first step.

605
00:43:19,560 --> 00:43:20,560
 And we're going to look at the first step.

606
00:43:20,560 --> 00:43:21,560
 And we're going to look at the first step.

607
00:43:21,560 --> 00:43:22,560
 And we're going to look at the first step.

608
00:43:22,560 --> 00:43:23,560
 And we're going to look at the first step.

609
00:43:23,560 --> 00:43:24,560
 And we're going to look at the first step.

610
00:43:24,560 --> 00:43:25,560
 And we're going to look at the first step.

611
00:43:25,560 --> 00:43:51,560
 And we're going to look at the first step.

612
00:43:51,560 --> 00:43:55,560
 And we're going to look at the first step.

613
00:43:55,560 --> 00:43:56,560
 And we're going to look at the first step.

614
00:43:56,560 --> 00:43:57,560
 And we're going to look at the first step.

615
00:43:57,560 --> 00:43:58,560
 And we're going to look at the first step.

616
00:43:58,560 --> 00:43:59,560
 And we're going to look at the first step.

617
00:43:59,560 --> 00:44:00,560
 And we're going to look at the first step.

618
00:44:00,560 --> 00:44:01,560
 And we're going to look at the first step.

619
00:44:01,560 --> 00:44:02,560
 And we're going to look at the first step.

620
00:44:02,560 --> 00:44:03,560
 And we're going to look at the first step.

621
00:44:03,560 --> 00:44:04,560
 And we're going to look at the first step.

622
00:44:04,560 --> 00:44:05,560
 And we're going to look at the first step.

623
00:44:05,560 --> 00:44:06,560
 And we're going to look at the first step.

624
00:44:06,560 --> 00:44:07,560
 And we're going to look at the first step.

625
00:44:07,560 --> 00:44:08,560
 And we're going to look at the first step.

626
00:44:08,560 --> 00:44:09,560
 And we're going to look at the first step.

627
00:44:09,560 --> 00:44:10,560
 And we're going to look at the first step.

628
00:44:10,560 --> 00:44:39,560
 And we're going to look at the first step.

629
00:44:39,560 --> 00:44:40,560
 And we're going to look at the first step.

630
00:44:40,560 --> 00:44:41,560
 And we're going to look at the first step.

631
00:44:41,560 --> 00:44:42,560
 And we're going to look at the first step.

632
00:44:42,560 --> 00:44:43,560
 And we're going to look at the first step.

633
00:44:43,560 --> 00:44:44,560
 And we're going to look at the first step.

634
00:44:44,560 --> 00:44:45,560
 And we're going to look at the first step.

635
00:44:45,560 --> 00:44:46,560
 And we're going to look at the first step.

636
00:44:46,560 --> 00:44:47,560
 And we're going to look at the first step.

637
00:44:47,560 --> 00:44:48,560
 And we're going to look at the first step.

638
00:44:48,560 --> 00:44:49,560
 And we're going to look at the first step.

639
00:44:49,560 --> 00:44:50,560
 And we're going to look at the first step.

640
00:44:50,560 --> 00:44:51,560
 And we're going to look at the first step.

641
00:44:51,560 --> 00:44:52,560
 And we're going to look at the first step.

642
00:44:52,560 --> 00:44:53,560
 And we're going to look at the first step.

643
00:44:53,560 --> 00:44:54,560
 And we're going to look at the first step.

644
00:44:54,560 --> 00:44:55,560
 And we're going to look at the first step.

645
00:44:55,560 --> 00:45:19,560
 And we're going to look at the first step.

646
00:45:19,560 --> 00:45:26,560
 And we're going to look at the first step.

647
00:45:26,560 --> 00:45:27,560
 And we're going to look at the first step.

648
00:45:27,560 --> 00:45:28,560
 And we're going to look at the first step.

649
00:45:28,560 --> 00:45:29,560
 And we're going to look at the first step.

650
00:45:29,560 --> 00:45:30,560
 And we're going to look at the first step.

651
00:45:30,560 --> 00:45:31,560
 And we're going to look at the first step.

652
00:45:31,560 --> 00:45:32,560
 And we're going to look at the first step.

653
00:45:32,560 --> 00:45:33,560
 And we're going to look at the first step.

654
00:45:33,560 --> 00:45:34,560
 And we're going to look at the first step.

655
00:45:34,560 --> 00:45:35,560
 And we're going to look at the first step.

656
00:45:35,560 --> 00:45:36,560
 And we're going to look at the first step.

657
00:45:36,560 --> 00:45:37,560
 And we're going to look at the first step.

658
00:45:37,560 --> 00:45:38,560
 And we're going to look at the first step.

659
00:45:38,560 --> 00:45:39,560
 And we're going to look at the first step.

660
00:45:39,560 --> 00:45:40,560
 And we're going to look at the first step.

661
00:45:40,560 --> 00:45:41,560
 And we're going to look at the first step.

662
00:45:41,560 --> 00:46:04,560
 And we're going to look at the first step.

663
00:46:04,560 --> 00:46:33,560
 And we're going to look at the first step.

664
00:46:33,560 --> 00:46:46,560
 And we're going to look at the first step.

665
00:46:46,560 --> 00:46:47,560
 And we're going to look at the first step.

666
00:46:47,560 --> 00:46:48,560
 And we're going to look at the first step.

667
00:46:48,560 --> 00:46:49,560
 And we're going to look at the first step.

668
00:46:49,560 --> 00:46:50,560
 And we're going to look at the first step.

669
00:46:50,560 --> 00:46:51,560
 And we're going to look at the first step.

670
00:46:51,560 --> 00:46:52,560
 And we're going to look at the first step.

671
00:46:52,560 --> 00:46:53,560
 And we're going to look at the first step.

672
00:46:53,560 --> 00:46:54,560
 And we're going to look at the first step.

673
00:46:54,560 --> 00:46:55,560
 And we're going to look at the first step.

674
00:46:55,560 --> 00:46:56,560
 And we're going to look at the first step.

675
00:46:56,560 --> 00:46:57,560
 And we're going to look at the first step.

676
00:46:57,560 --> 00:46:58,560
 And we're going to look at the first step.

677
00:46:58,560 --> 00:46:59,560
 And we're going to look at the first step.

678
00:46:59,560 --> 00:47:00,560
 And we're going to look at the first step.

679
00:47:00,560 --> 00:47:01,560
 And we're going to look at the first step.

680
00:47:01,560 --> 00:47:02,560
 And we're going to look at the first step.

681
00:47:02,560 --> 00:47:03,560
 And we're going to look at the first step.

682
00:47:03,560 --> 00:47:04,560
 And we're going to look at the first step.

683
00:47:04,560 --> 00:47:05,560
 And we're going to look at the first step.

684
00:47:05,560 --> 00:47:06,560
 And we're going to look at the first step.

685
00:47:06,560 --> 00:47:07,560
 And we're going to look at the first step.

686
00:47:07,560 --> 00:47:08,560
 And we're going to look at the first step.

687
00:47:08,560 --> 00:47:09,560
 And we're going to look at the first step.

688
00:47:09,560 --> 00:47:10,560
 And we're going to look at the first step.

689
00:47:10,560 --> 00:47:11,560
 And we're going to look at the first step.

690
00:47:11,560 --> 00:47:12,560
 And we're going to look at the first step.

691
00:47:12,560 --> 00:47:13,560
 And we're going to look at the first step.

692
00:47:13,560 --> 00:47:14,560
 And we're going to look at the first step.

693
00:47:14,560 --> 00:47:15,560
 And we're going to look at the first step.

694
00:47:15,560 --> 00:47:16,560
 And we're going to look at the first step.

695
00:47:16,560 --> 00:47:17,560
 And we're going to look at the first step.

696
00:47:17,560 --> 00:47:41,560
 And we're going to look at the first step.

697
00:47:41,560 --> 00:47:47,560
 And we're going to look at the first step.

698
00:47:47,560 --> 00:47:48,560
 And we're going to look at the first step.

699
00:47:48,560 --> 00:47:49,560
 And we're going to look at the first step.

700
00:47:49,560 --> 00:47:50,560
 And we're going to look at the first step.

701
00:47:50,560 --> 00:47:51,560
 And we're going to look at the first step.

702
00:47:51,560 --> 00:47:52,560
 And we're going to look at the first step.

703
00:47:52,560 --> 00:47:53,560
 And we're going to look at the first step.

704
00:47:53,560 --> 00:47:54,560
 And we're going to look at the first step.

705
00:47:54,560 --> 00:47:55,560
 And we're going to look at the first step.

706
00:47:55,560 --> 00:47:56,560
 And we're going to look at the first step.

707
00:47:56,560 --> 00:47:57,560
 And we're going to look at the first step.

708
00:47:57,560 --> 00:47:58,560
 And we're going to look at the first step.

709
00:47:58,560 --> 00:47:59,560
 And we're going to look at the first step.

710
00:47:59,560 --> 00:48:00,560
 And we're going to look at the first step.

711
00:48:00,560 --> 00:48:01,560
 And we're going to look at the first step.

712
00:48:01,560 --> 00:48:02,560
 And we're going to look at the first step.

713
00:48:02,560 --> 00:48:31,560
 And we're going to look at the first step.

714
00:48:31,560 --> 00:48:32,560
 And we're going to look at the first step.

715
00:48:32,560 --> 00:48:33,560
 And we're going to look at the first step.

716
00:48:33,560 --> 00:48:34,560
 And we're going to look at the first step.

717
00:48:34,560 --> 00:48:35,560
 And we're going to look at the first step.

718
00:48:35,560 --> 00:48:36,560
 And we're going to look at the first step.

719
00:48:36,560 --> 00:48:37,560
 And we're going to look at the first step.

720
00:48:37,560 --> 00:48:38,560
 And we're going to look at the first step.

721
00:48:38,560 --> 00:48:39,560
 And we're going to look at the first step.

722
00:48:39,560 --> 00:48:40,560
 And we're going to look at the first step.

723
00:48:40,560 --> 00:48:41,560
 And we're going to look at the first step.

724
00:48:41,560 --> 00:48:42,560
 And we're going to look at the first step.

725
00:48:42,560 --> 00:48:43,560
 And we're going to look at the first step.

726
00:48:43,560 --> 00:48:44,560
 And we're going to look at the first step.

727
00:48:44,560 --> 00:48:45,560
 And we're going to look at the first step.

728
00:48:45,560 --> 00:48:46,560
 And we're going to look at the first step.

729
00:48:46,560 --> 00:48:47,560
 And we're going to look at the first step.

730
00:48:47,560 --> 00:49:11,560
 And we're going to look at the first step.

731
00:49:11,560 --> 00:49:12,560
 So, this is a problem that we're going to look at.

732
00:49:12,560 --> 00:49:13,560
 This is a problem that we're going to look at.

733
00:49:13,560 --> 00:49:14,560
 This is a problem that we're going to look at.

734
00:49:14,560 --> 00:49:15,560
 This is a problem that we're going to look at.

735
00:49:15,560 --> 00:49:16,560
 This is a problem that we're going to look at.

736
00:49:16,560 --> 00:49:17,560
 This is a problem that we're going to look at.

737
00:49:17,560 --> 00:49:18,560
 This is a problem that we're going to look at.

738
00:49:18,560 --> 00:49:19,560
 This is a problem that we're going to look at.

739
00:49:19,560 --> 00:49:20,560
 This is a problem that we're going to look at.

740
00:49:20,560 --> 00:49:21,560
 This is a problem that we're going to look at.

741
00:49:21,560 --> 00:49:22,560
 This is a problem that we're going to look at.

742
00:49:22,560 --> 00:49:23,560
 This is a problem that we're going to look at.

743
00:49:23,560 --> 00:49:24,560
 This is a problem that we're going to look at.

744
00:49:24,560 --> 00:49:25,560
 This is a problem that we're going to look at.

745
00:49:25,560 --> 00:49:26,560
 This is a problem that we're going to look at.

746
00:49:26,560 --> 00:49:52,560
 This is a problem that we're going to look at.

747
00:49:52,560 --> 00:49:53,560
 This is a problem that we're going to look at.

748
00:49:53,560 --> 00:49:54,560
 This is a problem that we're going to look at.

749
00:49:54,560 --> 00:49:55,560
 This is a problem that we're going to look at.

750
00:49:55,560 --> 00:49:56,560
 This is a problem that we're going to look at.

751
00:49:56,560 --> 00:49:57,560
 This is a problem that we're going to look at.

752
00:49:57,560 --> 00:49:58,560
 This is a problem that we're going to look at.

753
00:49:58,560 --> 00:49:59,560
 This is a problem that we're going to look at.

754
00:49:59,560 --> 00:50:00,560
 This is a problem that we're going to look at.

755
00:50:00,560 --> 00:50:01,560
 This is a problem that we're going to look at.

756
00:50:01,560 --> 00:50:02,560
 This is a problem that we're going to look at.

757
00:50:02,560 --> 00:50:03,560
 This is a problem that we're going to look at.

758
00:50:03,560 --> 00:50:04,560
 This is a problem that we're going to look at.

759
00:50:04,560 --> 00:50:05,560
 This is a problem that we're going to look at.

760
00:50:05,560 --> 00:50:06,560
 This is a problem that we're going to look at.

761
00:50:06,560 --> 00:50:07,560
 This is a problem that we're going to look at.

762
00:50:07,560 --> 00:50:31,560
 This is a problem that we're going to look at.

763
00:50:31,560 --> 00:50:32,560
 This is a problem that we're going to look at.

764
00:50:32,560 --> 00:50:33,560
 This is a problem that we're going to look at.

765
00:50:33,560 --> 00:50:34,560
 This is a problem that we're going to look at.

766
00:50:34,560 --> 00:50:35,560
 This is a problem that we're going to look at.

767
00:50:35,560 --> 00:50:36,560
 This is a problem that we're going to look at.

768
00:50:36,560 --> 00:50:37,560
 This is a problem that we're going to look at.

769
00:50:37,560 --> 00:50:38,560
 This is a problem that we're going to look at.

770
00:50:38,560 --> 00:50:39,560
 This is a problem that we're going to look at.

771
00:50:39,560 --> 00:50:40,560
 This is a problem that we're going to look at.

772
00:50:40,560 --> 00:50:41,560
 This is a problem that we're going to look at.

773
00:50:41,560 --> 00:50:42,560
 This is a problem that we're going to look at.

774
00:50:42,560 --> 00:50:43,560
 This is a problem that we're going to look at.

775
00:50:43,560 --> 00:50:44,560
 This is a problem that we're going to look at.

776
00:50:44,560 --> 00:50:45,560
 This is a problem that we're going to look at.

777
00:50:45,560 --> 00:50:46,560
 This is a problem that we're going to look at.

778
00:50:46,560 --> 00:51:12,560
 This is a problem that we're going to look at.

779
00:51:12,560 --> 00:51:13,560
 This is a problem that we're going to look at.

780
00:51:13,560 --> 00:51:14,560
 This is a problem that we're going to look at.

781
00:51:14,560 --> 00:51:15,560
 This is a problem that we're going to look at.

782
00:51:15,560 --> 00:51:16,560
 This is a problem that we're going to look at.

783
00:51:16,560 --> 00:51:17,560
 This is a problem that we're going to look at.

784
00:51:17,560 --> 00:51:18,560
 This is a problem that we're going to look at.

785
00:51:18,560 --> 00:51:19,560
 This is a problem that we're going to look at.

786
00:51:19,560 --> 00:51:20,560
 This is a problem that we're going to look at.

787
00:51:20,560 --> 00:51:21,560
 This is a problem that we're going to look at.

788
00:51:21,560 --> 00:51:22,560
 This is a problem that we're going to look at.

789
00:51:22,560 --> 00:51:23,560
 This is a problem that we're going to look at.

790
00:51:23,560 --> 00:51:24,560
 This is a problem that we're going to look at.

791
00:51:24,560 --> 00:51:25,560
 This is a problem that we're going to look at.

792
00:51:25,560 --> 00:51:26,560
 This is a problem that we're going to look at.

793
00:51:26,560 --> 00:51:27,560
 This is a problem that we're going to look at.

794
00:51:27,560 --> 00:51:53,560
 This is a problem that we're going to look at.

795
00:51:53,560 --> 00:51:54,560
 This is a problem that we're going to look at.

796
00:51:54,560 --> 00:51:55,560
 This is a problem that we're going to look at.

797
00:51:55,560 --> 00:51:56,560
 This is a problem that we're going to look at.

798
00:51:56,560 --> 00:51:57,560
 This is a problem that we're going to look at.

799
00:51:57,560 --> 00:51:58,560
 This is a problem that we're going to look at.

800
00:51:58,560 --> 00:51:59,560
 This is a problem that we're going to look at.

801
00:51:59,560 --> 00:52:00,560
 This is a problem that we're going to look at.

802
00:52:00,560 --> 00:52:01,560
 This is a problem that we're going to look at.

803
00:52:01,560 --> 00:52:02,560
 This is a problem that we're going to look at.

804
00:52:02,560 --> 00:52:03,560
 This is a problem that we're going to look at.

805
00:52:03,560 --> 00:52:04,560
 This is a problem that we're going to look at.

806
00:52:04,560 --> 00:52:05,560
 This is a problem that we're going to look at.

807
00:52:05,560 --> 00:52:06,560
 This is a problem that we're going to look at.

808
00:52:06,560 --> 00:52:07,560
 This is a problem that we're going to look at.

809
00:52:07,560 --> 00:52:08,560
 This is a problem that we're going to look at.

810
00:52:08,560 --> 00:52:37,560
 This is a problem that we're going to look at.

811
00:52:37,560 --> 00:52:38,560
 This is a problem that we're going to look at.

812
00:52:38,560 --> 00:52:39,560
 This is a problem that we're going to look at.

813
00:52:39,560 --> 00:52:40,560
 This is a problem that we're going to look at.

814
00:52:40,560 --> 00:52:41,560
 This is a problem that we're going to look at.

815
00:52:41,560 --> 00:52:42,560
 This is a problem that we're going to look at.

816
00:52:42,560 --> 00:52:43,560
 This is a problem that we're going to look at.

817
00:52:43,560 --> 00:52:44,560
 This is a problem that we're going to look at.

818
00:52:44,560 --> 00:52:45,560
 This is a problem that we're going to look at.

819
00:52:45,560 --> 00:52:46,560
 This is a problem that we're going to look at.

820
00:52:46,560 --> 00:52:47,560
 This is a problem that we're going to look at.

821
00:52:47,560 --> 00:52:48,560
 This is a problem that we're going to look at.

822
00:52:48,560 --> 00:52:49,560
 This is a problem that we're going to look at.

823
00:52:49,560 --> 00:52:50,560
 This is a problem that we're going to look at.

824
00:52:50,560 --> 00:52:51,560
 This is a problem that we're going to look at.

825
00:52:51,560 --> 00:52:52,560
 This is a problem that we're going to look at.

826
00:52:52,560 --> 00:53:18,560
 This is a problem that we're going to look at.

827
00:53:18,560 --> 00:53:25,560
 This is a problem that we're going to look at.

828
00:53:25,560 --> 00:53:34,560
 This is a problem that we're going to look at.

829
00:53:34,560 --> 00:53:35,560
 This is a problem that we're going to look at.

830
00:53:35,560 --> 00:53:36,560
 This is a problem that we're going to look at.

831
00:53:36,560 --> 00:53:37,560
 This is a problem that we're going to look at.

832
00:53:37,560 --> 00:53:38,560
 This is a problem that we're going to look at.

833
00:53:38,560 --> 00:53:39,560
 This is a problem that we're going to look at.

834
00:53:39,560 --> 00:53:40,560
 This is a problem that we're going to look at.

835
00:53:40,560 --> 00:53:41,560
 This is a problem that we're going to look at.

836
00:53:41,560 --> 00:53:42,560
 This is a problem that we're going to look at.

837
00:53:42,560 --> 00:53:43,560
 This is a problem that we're going to look at.

838
00:53:43,560 --> 00:53:44,560
 This is a problem that we're going to look at.

839
00:53:44,560 --> 00:53:45,560
 This is a problem that we're going to look at.

840
00:53:45,560 --> 00:53:46,560
 This is a problem that we're going to look at.

841
00:53:46,560 --> 00:53:47,560
 This is a problem that we're going to look at.

842
00:53:47,560 --> 00:53:48,560
 This is a problem that we're going to look at.

843
00:53:48,560 --> 00:53:49,560
 This is a problem that we're going to look at.

844
00:53:49,560 --> 00:53:50,560
 This is a problem that we're going to look at.

845
00:53:50,560 --> 00:53:51,560
 This is a problem that we're going to look at.

846
00:53:51,560 --> 00:53:52,560
 This is a problem that we're going to look at.

847
00:53:52,560 --> 00:53:53,560
 This is a problem that we're going to look at.

848
00:53:53,560 --> 00:53:54,560
 This is a problem that we're going to look at.

849
00:53:54,560 --> 00:53:55,560
 This is a problem that we're going to look at.

850
00:53:55,560 --> 00:53:56,560
 This is a problem that we're going to look at.

851
00:53:56,560 --> 00:53:57,560
 This is a problem that we're going to look at.

852
00:53:57,560 --> 00:53:58,560
 This is a problem that we're going to look at.

853
00:53:58,560 --> 00:53:59,560
 This is a problem that we're going to look at.

854
00:53:59,560 --> 00:54:00,560
 This is a problem that we're going to look at.

855
00:54:00,560 --> 00:54:01,560
 This is a problem that we're going to look at.

856
00:54:01,560 --> 00:54:02,560
 This is a problem that we're going to look at.

857
00:54:02,560 --> 00:54:30,560
 This is a problem that we're going to look at.

858
00:54:30,560 --> 00:54:31,560
 This is a problem that we're going to look at.

859
00:54:31,560 --> 00:54:32,560
 This is a problem that we're going to look at.

860
00:54:32,560 --> 00:54:33,560
 This is a problem that we're going to look at.

861
00:54:33,560 --> 00:54:34,560
 This is a problem that we're going to look at.

862
00:54:34,560 --> 00:54:35,560
 This is a problem that we're going to look at.

863
00:54:35,560 --> 00:54:36,560
 This is a problem that we're going to look at.

864
00:54:36,560 --> 00:54:37,560
 This is a problem that we're going to look at.

865
00:54:37,560 --> 00:54:38,560
 This is a problem that we're going to look at.

866
00:54:38,560 --> 00:54:39,560
 This is a problem that we're going to look at.

867
00:54:39,560 --> 00:54:40,560
 This is a problem that we're going to look at.

868
00:54:40,560 --> 00:54:41,560
 This is a problem that we're going to look at.

869
00:54:41,560 --> 00:54:42,560
 This is a problem that we're going to look at.

870
00:54:42,560 --> 00:54:43,560
 This is a problem that we're going to look at.

871
00:54:43,560 --> 00:54:44,560
 This is a problem that we're going to look at.

872
00:54:44,560 --> 00:54:45,560
 This is a problem that we're going to look at.

873
00:54:45,560 --> 00:55:11,560
 This is a problem that we're going to look at.

874
00:55:11,560 --> 00:55:12,560
 This is a problem that we're going to look at.

875
00:55:12,560 --> 00:55:13,560
 This is a problem that we're going to look at.

876
00:55:13,560 --> 00:55:14,560
 This is a problem that we're going to look at.

877
00:55:14,560 --> 00:55:15,560
 This is a problem that we're going to look at.

878
00:55:15,560 --> 00:55:16,560
 This is a problem that we're going to look at.

879
00:55:16,560 --> 00:55:17,560
 This is a problem that we're going to look at.

880
00:55:17,560 --> 00:55:18,560
 This is a problem that we're going to look at.

881
00:55:18,560 --> 00:55:19,560
 This is a problem that we're going to look at.

882
00:55:19,560 --> 00:55:20,560
 This is a problem that we're going to look at.

883
00:55:20,560 --> 00:55:21,560
 This is a problem that we're going to look at.

884
00:55:21,560 --> 00:55:22,560
 This is a problem that we're going to look at.

885
00:55:22,560 --> 00:55:23,560
 This is a problem that we're going to look at.

886
00:55:23,560 --> 00:55:24,560
 This is a problem that we're going to look at.

887
00:55:24,560 --> 00:55:25,560
 This is a problem that we're going to look at.

888
00:55:25,560 --> 00:55:26,560
 This is a problem that we're going to look at.

889
00:55:26,560 --> 00:55:50,560
 This is a problem that we're going to look at.

890
00:55:50,560 --> 00:56:16,560
 This is a problem that we're going to look at.

891
00:56:16,560 --> 00:56:45,560
 This is a problem that we're going to look at.

892
00:56:45,560 --> 00:56:46,560
 This is a problem that we're going to look at.

893
00:56:46,560 --> 00:56:47,560
 This is a problem that we're going to look at.

894
00:56:47,560 --> 00:56:48,560
 This is a problem that we're going to look at.

895
00:56:48,560 --> 00:56:49,560
 This is a problem that we're going to look at.

896
00:56:49,560 --> 00:56:50,560
 This is a problem that we're going to look at.

897
00:56:50,560 --> 00:56:51,560
 This is a problem that we're going to look at.

898
00:56:51,560 --> 00:56:52,560
 This is a problem that we're going to look at.

899
00:56:52,560 --> 00:56:53,560
 This is a problem that we're going to look at.

900
00:56:53,560 --> 00:56:54,560
 This is a problem that we're going to look at.

901
00:56:54,560 --> 00:56:55,560
 This is a problem that we're going to look at.

902
00:56:55,560 --> 00:56:56,560
 This is a problem that we're going to look at.

903
00:56:56,560 --> 00:56:57,560
 This is a problem that we're going to look at.

904
00:56:57,560 --> 00:56:58,560
 This is a problem that we're going to look at.

905
00:56:58,560 --> 00:56:59,560
 This is a problem that we're going to look at.

906
00:56:59,560 --> 00:57:00,560
 This is a problem that we're going to look at.

907
00:57:00,560 --> 00:57:21,560
 This is a problem that we're going to look at.

908
00:57:21,560 --> 00:57:48,560
 This is a problem that we're going to look at.

909
00:57:48,560 --> 00:58:16,560
 This is a problem that we're going to look at.

910
00:58:16,560 --> 00:58:18,560
 This is a problem that we're going to look at.

911
00:58:18,560 --> 00:58:19,560
 This is a problem that we're going to look at.

912
00:58:19,560 --> 00:58:20,560
 This is a problem that we're going to look at.

913
00:58:20,560 --> 00:58:21,560
 This is a problem that we're going to look at.

914
00:58:21,560 --> 00:58:22,560
 This is a problem that we're going to look at.

915
00:58:22,560 --> 00:58:23,560
 This is a problem that we're going to look at.

916
00:58:23,560 --> 00:58:24,560
 This is a problem that we're going to look at.

917
00:58:24,560 --> 00:58:25,560
 This is a problem that we're going to look at.

918
00:58:25,560 --> 00:58:26,560
 This is a problem that we're going to look at.

919
00:58:26,560 --> 00:58:27,560
 This is a problem that we're going to look at.

920
00:58:27,560 --> 00:58:28,560
 This is a problem that we're going to look at.

921
00:58:28,560 --> 00:58:29,560
 This is a problem that we're going to look at.

922
00:58:29,560 --> 00:58:30,560
 This is a problem that we're going to look at.

923
00:58:30,560 --> 00:58:31,560
 This is a problem that we're going to look at.

924
00:58:31,560 --> 00:58:32,560
 This is a problem that we're going to look at.

925
00:58:32,560 --> 00:59:00,560
 This is a problem that we're going to look at.

926
00:59:00,560 --> 00:59:01,560
 This is a problem that we're going to look at.

927
00:59:01,560 --> 00:59:02,560
 This is a problem that we're going to look at.

928
00:59:02,560 --> 00:59:03,560
 This is a problem that we're going to look at.

929
00:59:03,560 --> 00:59:04,560
 This is a problem that we're going to look at.

930
00:59:04,560 --> 00:59:05,560
 This is a problem that we're going to look at.

931
00:59:05,560 --> 00:59:06,560
 This is a problem that we're going to look at.

932
00:59:06,560 --> 00:59:07,560
 This is a problem that we're going to look at.

933
00:59:07,560 --> 00:59:08,560
 This is a problem that we're going to look at.

934
00:59:08,560 --> 00:59:09,560
 This is a problem that we're going to look at.

935
00:59:09,560 --> 00:59:10,560
 This is a problem that we're going to look at.

936
00:59:10,560 --> 00:59:11,560
 This is a problem that we're going to look at.

937
00:59:11,560 --> 00:59:12,560
 This is a problem that we're going to look at.

938
00:59:12,560 --> 00:59:13,560
 This is a problem that we're going to look at.

939
00:59:13,560 --> 00:59:14,560
 This is a problem that we're going to look at.

940
00:59:14,560 --> 00:59:15,560
 This is a problem that we're going to look at.

941
00:59:15,560 --> 00:59:34,560
 This is a problem that we're going to look at.

942
00:59:34,560 --> 00:59:58,560
 This is a problem that we're going to look at.

943
00:59:58,560 --> 01:00:05,560
 This is a problem that we're going to look at.

944
01:00:05,560 --> 01:00:06,560
 This is a problem that we're going to look at.

945
01:00:06,560 --> 01:00:07,560
 This is a problem that we're going to look at.

946
01:00:07,560 --> 01:00:08,560
 This is a problem that we're going to look at.

947
01:00:08,560 --> 01:00:09,560
 This is a problem that we're going to look at.

948
01:00:09,560 --> 01:00:10,560
 This is a problem that we're going to look at.

949
01:00:10,560 --> 01:00:11,560
 This is a problem that we're going to look at.

950
01:00:11,560 --> 01:00:12,560
 This is a problem that we're going to look at.

951
01:00:12,560 --> 01:00:13,560
 This is a problem that we're going to look at.

952
01:00:13,560 --> 01:00:14,560
 This is a problem that we're going to look at.

953
01:00:14,560 --> 01:00:15,560
 This is a problem that we're going to look at.

954
01:00:15,560 --> 01:00:16,560
 This is a problem that we're going to look at.

955
01:00:16,560 --> 01:00:17,560
 This is a problem that we're going to look at.

956
01:00:17,560 --> 01:00:18,560
 This is a problem that we're going to look at.

957
01:00:18,560 --> 01:00:19,560
 This is a problem that we're going to look at.

958
01:00:19,560 --> 01:00:43,560
 This is a problem that we're going to look at.

959
01:00:43,560 --> 01:00:50,560
 This is a problem that we're going to look at.

960
01:00:50,560 --> 01:00:51,560
 This is a problem that we're going to look at.

961
01:00:51,560 --> 01:00:52,560
 This is a problem that we're going to look at.

962
01:00:52,560 --> 01:00:53,560
 This is a problem that we're going to look at.

963
01:00:53,560 --> 01:00:54,560
 This is a problem that we're going to look at.

964
01:00:54,560 --> 01:00:55,560
 This is a problem that we're going to look at.

965
01:00:55,560 --> 01:00:56,560
 This is a problem that we're going to look at.

966
01:00:56,560 --> 01:00:57,560
 This is a problem that we're going to look at.

967
01:00:57,560 --> 01:00:58,560
 This is a problem that we're going to look at.

968
01:00:58,560 --> 01:00:59,560
 This is a problem that we're going to look at.

969
01:00:59,560 --> 01:01:00,560
 This is a problem that we're going to look at.

970
01:01:00,560 --> 01:01:01,560
 This is a problem that we're going to look at.

971
01:01:01,560 --> 01:01:02,560
 This is a problem that we're going to look at.

972
01:01:02,560 --> 01:01:03,560
 This is a problem that we're going to look at.

973
01:01:03,560 --> 01:01:04,560
 This is a problem that we're going to look at.

974
01:01:04,560 --> 01:01:30,560
 This is a problem that we're going to look at.

975
01:01:30,560 --> 01:01:31,560
 This is a problem that we're going to look at.

976
01:01:31,560 --> 01:01:32,560
 This is a problem that we're going to look at.

977
01:01:32,560 --> 01:01:33,560
 This is a problem that we're going to look at.

978
01:01:33,560 --> 01:01:34,560
 This is a problem that we're going to look at.

979
01:01:34,560 --> 01:01:35,560
 This is a problem that we're going to look at.

980
01:01:35,560 --> 01:01:36,560
 This is a problem that we're going to look at.

981
01:01:36,560 --> 01:01:37,560
 This is a problem that we're going to look at.

982
01:01:37,560 --> 01:01:38,560
 This is a problem that we're going to look at.

983
01:01:38,560 --> 01:01:39,560
 This is a problem that we're going to look at.

984
01:01:39,560 --> 01:01:40,560
 This is a problem that we're going to look at.

985
01:01:40,560 --> 01:01:41,560
 This is a problem that we're going to look at.

986
01:01:41,560 --> 01:01:42,560
 This is a problem that we're going to look at.

987
01:01:42,560 --> 01:01:43,560
 This is a problem that we're going to look at.

988
01:01:43,560 --> 01:01:44,560
 This is a problem that we're going to look at.

989
01:01:44,560 --> 01:01:45,560
 This is a problem that we're going to look at.

990
01:01:45,560 --> 01:02:11,560
 This is a problem that we're going to look at.

991
01:02:11,560 --> 01:02:12,560
 This is a problem that we're going to look at.

992
01:02:12,560 --> 01:02:13,560
 This is a problem that we're going to look at.

993
01:02:13,560 --> 01:02:14,560
 This is a problem that we're going to look at.

994
01:02:14,560 --> 01:02:15,560
 This is a problem that we're going to look at.

995
01:02:15,560 --> 01:02:16,560
 This is a problem that we're going to look at.

996
01:02:16,560 --> 01:02:17,560
 This is a problem that we're going to look at.

997
01:02:17,560 --> 01:02:18,560
 This is a problem that we're going to look at.

998
01:02:18,560 --> 01:02:19,560
 This is a problem that we're going to look at.

999
01:02:19,560 --> 01:02:20,560
 This is a problem that we're going to look at.

1000
01:02:20,560 --> 01:02:21,560
 This is a problem that we're going to look at.

1001
01:02:21,560 --> 01:02:22,560
 This is a problem that we're going to look at.

1002
01:02:22,560 --> 01:02:23,560
 This is a problem that we're going to look at.

1003
01:02:23,560 --> 01:02:24,560
 This is a problem that we're going to look at.

1004
01:02:24,560 --> 01:02:25,560
 This is a problem that we're going to look at.

1005
01:02:25,560 --> 01:02:26,560
 This is a problem that we're going to look at.

1006
01:02:26,560 --> 01:02:52,560
 This is a problem that we're going to look at.

1007
01:02:52,560 --> 01:02:53,560
 This is a problem that we're going to look at.

1008
01:02:53,560 --> 01:02:54,560
 This is a problem that we're going to look at.

1009
01:02:54,560 --> 01:02:55,560
 This is a problem that we're going to look at.

1010
01:02:55,560 --> 01:02:56,560
 This is a problem that we're going to look at.

1011
01:02:56,560 --> 01:02:57,560
 This is a problem that we're going to look at.

1012
01:02:57,560 --> 01:02:58,560
 This is a problem that we're going to look at.

1013
01:02:58,560 --> 01:02:59,560
 This is a problem that we're going to look at.

1014
01:02:59,560 --> 01:03:00,560
 This is a problem that we're going to look at.

1015
01:03:00,560 --> 01:03:01,560
 This is a problem that we're going to look at.

1016
01:03:01,560 --> 01:03:02,560
 This is a problem that we're going to look at.

1017
01:03:02,560 --> 01:03:03,560
 This is a problem that we're going to look at.

1018
01:03:03,560 --> 01:03:04,560
 This is a problem that we're going to look at.

1019
01:03:04,560 --> 01:03:05,560
 This is a problem that we're going to look at.

1020
01:03:05,560 --> 01:03:06,560
 This is a problem that we're going to look at.

1021
01:03:06,560 --> 01:03:07,560
 This is a problem that we're going to look at.

1022
01:03:07,560 --> 01:03:33,560
 This is a problem that we're going to look at.

1023
01:03:33,560 --> 01:04:02,560
 This is a problem that we're going to look at.

1024
01:04:02,560 --> 01:04:03,560
 This is a problem that we're going to look at.

1025
01:04:03,560 --> 01:04:04,560
 This is a problem that we're going to look at.

1026
01:04:04,560 --> 01:04:05,560
 This is a problem that we're going to look at.

1027
01:04:05,560 --> 01:04:06,560
 This is a problem that we're going to look at.

1028
01:04:06,560 --> 01:04:07,560
 This is a problem that we're going to look at.

1029
01:04:07,560 --> 01:04:08,560
 This is a problem that we're going to look at.

1030
01:04:08,560 --> 01:04:09,560
 This is a problem that we're going to look at.

1031
01:04:09,560 --> 01:04:10,560
 This is a problem that we're going to look at.

1032
01:04:10,560 --> 01:04:11,560
 This is a problem that we're going to look at.

1033
01:04:11,560 --> 01:04:12,560
 This is a problem that we're going to look at.

1034
01:04:12,560 --> 01:04:13,560
 This is a problem that we're going to look at.

1035
01:04:13,560 --> 01:04:14,560
 This is a problem that we're going to look at.

1036
01:04:14,560 --> 01:04:15,560
 This is a problem that we're going to look at.

1037
01:04:15,560 --> 01:04:16,560
 This is a problem that we're going to look at.

1038
01:04:16,560 --> 01:04:17,560
 This is a problem that we're going to look at.

1039
01:04:17,560 --> 01:04:40,560
 This is a problem that we're going to look at.

1040
01:04:40,560 --> 01:05:06,560
 This is a problem that we're going to look at.

1041
01:05:06,560 --> 01:05:35,560
 This is a problem that we're going to look at.

1042
01:05:35,560 --> 01:05:36,560
 This is a problem that we're going to look at.

1043
01:05:36,560 --> 01:05:37,560
 This is a problem that we're going to look at.

1044
01:05:37,560 --> 01:05:38,560
 This is a problem that we're going to look at.

1045
01:05:38,560 --> 01:05:39,560
 This is a problem that we're going to look at.

1046
01:05:39,560 --> 01:05:40,560
 This is a problem that we're going to look at.

1047
01:05:40,560 --> 01:05:41,560
 This is a problem that we're going to look at.

1048
01:05:41,560 --> 01:05:42,560
 This is a problem that we're going to look at.

1049
01:05:42,560 --> 01:05:43,560
 This is a problem that we're going to look at.

1050
01:05:43,560 --> 01:05:44,560
 This is a problem that we're going to look at.

1051
01:05:44,560 --> 01:05:45,560
 This is a problem that we're going to look at.

1052
01:05:45,560 --> 01:05:46,560
 This is a problem that we're going to look at.

1053
01:05:46,560 --> 01:05:47,560
 This is a problem that we're going to look at.

1054
01:05:47,560 --> 01:05:48,560
 This is a problem that we're going to look at.

1055
01:05:48,560 --> 01:05:49,560
 This is a problem that we're going to look at.

1056
01:05:49,560 --> 01:05:50,560
 This is a problem that we're going to look at.

1057
01:05:50,560 --> 01:06:19,560
 This is a problem that we're going to look at.

1058
01:06:19,560 --> 01:06:20,560
 This is a problem that we're going to look at.

1059
01:06:20,560 --> 01:06:21,560
 This is a problem that we're going to look at.

1060
01:06:21,560 --> 01:06:22,560
 This is a problem that we're going to look at.

1061
01:06:22,560 --> 01:06:23,560
 This is a problem that we're going to look at.

1062
01:06:23,560 --> 01:06:24,560
 This is a problem that we're going to look at.

1063
01:06:24,560 --> 01:06:25,560
 This is a problem that we're going to look at.

1064
01:06:25,560 --> 01:06:26,560
 This is a problem that we're going to look at.

1065
01:06:26,560 --> 01:06:27,560
 This is a problem that we're going to look at.

1066
01:06:27,560 --> 01:06:28,560
 This is a problem that we're going to look at.

1067
01:06:28,560 --> 01:06:29,560
 This is a problem that we're going to look at.

1068
01:06:29,560 --> 01:06:30,560
 This is a problem that we're going to look at.

1069
01:06:30,560 --> 01:06:31,560
 This is a problem that we're going to look at.

1070
01:06:31,560 --> 01:06:32,560
 This is a problem that we're going to look at.

1071
01:06:32,560 --> 01:06:33,560
 This is a problem that we're going to look at.

1072
01:06:33,560 --> 01:06:34,560
 This is a problem that we're going to look at.

1073
01:06:34,560 --> 01:07:00,560
 This is a problem that we're going to look at.

1074
01:07:00,560 --> 01:07:01,560
 This is a problem that we're going to look at.

1075
01:07:01,560 --> 01:07:02,560
 This is a problem that we're going to look at.

1076
01:07:02,560 --> 01:07:03,560
 This is a problem that we're going to look at.

1077
01:07:03,560 --> 01:07:04,560
 This is a problem that we're going to look at.

1078
01:07:04,560 --> 01:07:05,560
 This is a problem that we're going to look at.

1079
01:07:05,560 --> 01:07:06,560
 This is a problem that we're going to look at.

1080
01:07:06,560 --> 01:07:07,560
 This is a problem that we're going to look at.

1081
01:07:07,560 --> 01:07:08,560
 This is a problem that we're going to look at.

1082
01:07:08,560 --> 01:07:09,560
 This is a problem that we're going to look at.

1083
01:07:09,560 --> 01:07:10,560
 This is a problem that we're going to look at.

1084
01:07:10,560 --> 01:07:11,560
 This is a problem that we're going to look at.

1085
01:07:11,560 --> 01:07:12,560
 This is a problem that we're going to look at.

1086
01:07:12,560 --> 01:07:13,560
 This is a problem that we're going to look at.

1087
01:07:13,560 --> 01:07:14,560
 This is a problem that we're going to look at.

1088
01:07:14,560 --> 01:07:15,560
 This is a problem that we're going to look at.

1089
01:07:15,560 --> 01:07:43,560
 This is a problem that we're going to look at.

1090
01:07:43,560 --> 01:07:44,560
 This is a problem that we're going to look at.

1091
01:07:44,560 --> 01:07:45,560
 This is a problem that we're going to look at.

1092
01:07:45,560 --> 01:07:46,560
 This is a problem that we're going to look at.

1093
01:07:46,560 --> 01:07:47,560
 This is a problem that we're going to look at.

1094
01:07:47,560 --> 01:07:48,560
 This is a problem that we're going to look at.

1095
01:07:48,560 --> 01:07:49,560
 This is a problem that we're going to look at.

1096
01:07:49,560 --> 01:07:50,560
 This is a problem that we're going to look at.

1097
01:07:50,560 --> 01:07:51,560
 This is a problem that we're going to look at.

1098
01:07:51,560 --> 01:07:52,560
 This is a problem that we're going to look at.

1099
01:07:52,560 --> 01:07:53,560
 This is a problem that we're going to look at.

1100
01:07:53,560 --> 01:07:54,560
 This is a problem that we're going to look at.

1101
01:07:54,560 --> 01:07:55,560
 This is a problem that we're going to look at.

1102
01:07:55,560 --> 01:07:56,560
 This is a problem that we're going to look at.

1103
01:07:56,560 --> 01:07:57,560
 This is a problem that we're going to look at.

1104
01:07:57,560 --> 01:07:58,560
 This is a problem that we're going to look at.

1105
01:07:58,560 --> 01:08:19,560
 This is a problem that we're going to look at.

1106
01:08:19,560 --> 01:08:43,560
 This is a problem that we're going to look at.

1107
01:08:43,560 --> 01:09:11,560
 This is a problem that we're going to look at.

1108
01:09:11,560 --> 01:09:40,560
 This is a problem that we're going to look at.

1109
01:09:40,560 --> 01:09:41,560
 This is a problem that we're going to look at.

1110
01:09:41,560 --> 01:09:42,560
 This is a problem that we're going to look at.

1111
01:09:42,560 --> 01:09:43,560
 This is a problem that we're going to look at.

1112
01:09:43,560 --> 01:09:44,560
 This is a problem that we're going to look at.

1113
01:09:44,560 --> 01:09:45,560
 This is a problem that we're going to look at.

1114
01:09:45,560 --> 01:09:46,560
 This is a problem that we're going to look at.

1115
01:09:46,560 --> 01:09:47,560
 This is a problem that we're going to look at.

1116
01:09:47,560 --> 01:09:48,560
 This is a problem that we're going to look at.

1117
01:09:48,560 --> 01:09:49,560
 This is a problem that we're going to look at.

1118
01:09:49,560 --> 01:09:50,560
 This is a problem that we're going to look at.

1119
01:09:50,560 --> 01:09:51,560
 This is a problem that we're going to look at.

1120
01:09:51,560 --> 01:09:52,560
 This is a problem that we're going to look at.

1121
01:09:52,560 --> 01:09:53,560
 This is a problem that we're going to look at.

1122
01:09:53,560 --> 01:09:54,560
 This is a problem that we're going to look at.

1123
01:09:54,560 --> 01:09:55,560
 This is a problem that we're going to look at.

1124
01:09:55,560 --> 01:10:14,560
 This is a problem that we're going to look at.

1125
01:10:14,560 --> 01:10:38,560
 >> Good morning.

1126
01:10:38,560 --> 01:10:45,560
 I'm going to be talking about the first challenge.

1127
01:10:45,560 --> 01:10:48,560
 The first challenge is object diversity.

1128
01:10:48,560 --> 01:10:52,560
 The second challenge is partial observability.

1129
01:10:52,560 --> 01:10:57,560
 The only observations are partial point clouds.

1130
01:10:57,560 --> 01:11:03,560
 You must complete each scale in two seconds of simulator time.

1131
01:11:03,560 --> 01:11:07,560
 The first challenge is to create a point cloud tree that updates state based on

1132
01:11:07,560 --> 01:11:10,560
 incoming point cloud observations.

1133
01:11:10,560 --> 01:11:13,560
 Our method processes the point cloud, uses the process point cloud to update

1134
01:11:13,560 --> 01:11:16,560
 the state and behavior tree, calculates the desired joint positions using

1135
01:11:16,560 --> 01:11:20,560
 inverse kinematics, and finally uses the PID controller to convert desired

1136
01:11:20,560 --> 01:11:25,560
 joint positions to desired joint velocities.

1137
01:11:25,560 --> 01:11:29,560
 We will now discuss how each of these steps are implemented for each scale.

1138
01:11:29,560 --> 01:11:33,560
 The first challenge is to find the center point of the chair using the

1139
01:11:33,560 --> 01:11:36,560
 principle components analysis.

1140
01:11:36,560 --> 01:11:39,560
 We will now discuss how each of these steps are implemented for each scale.

1141
01:11:39,560 --> 01:11:43,560
 The first challenge is to find the center point of the chair using the

1142
01:11:43,560 --> 01:11:48,560
 principle components analysis.

1143
01:11:48,560 --> 01:11:51,560
 We will now discuss how each of these steps are implemented for each scale.

1144
01:11:51,560 --> 01:11:54,560
 The first challenge is to find the center point of the chair using the

1145
01:11:54,560 --> 01:11:57,560
 principle components analysis.

1146
01:11:57,560 --> 01:12:00,560
 We will now discuss how each of these steps are implemented for each scale.

1147
01:12:00,560 --> 01:12:03,560
 We will now discuss how each of these steps are implemented for each scale.

1148
01:12:03,560 --> 01:12:06,560
 Next, we discuss the details of our behavior tree for each task.

1149
01:12:06,560 --> 01:12:09,560
 Next, we discuss the details of our behavior tree for each task.

1150
01:12:09,560 --> 01:12:12,560
 To open the drawer, we go to the pre-grasp, grasp, and pull all the way out.

1151
01:12:12,560 --> 01:12:15,560
 To open the drawer, we go to the pre-grasp, grasp, and pull all the way out.

1152
01:12:15,560 --> 01:12:18,560
 We will re-grasp when the handle is lost from the gripper.

1153
01:12:18,560 --> 01:12:21,560
 We will re-grasp when the handle is lost from the gripper.

1154
01:12:21,560 --> 01:12:24,560
 We can do a similar thing to open the door, but the time constraint limited

1155
01:12:24,560 --> 01:12:27,560
 the number of intermediate gripper poses we could select, resulting in a

1156
01:12:27,560 --> 01:12:30,560
 lower overall accuracy.

1157
01:12:30,560 --> 01:12:33,560
 Once we open the door enough, we will use the body of the robot to push

1158
01:12:33,560 --> 01:12:36,560
 the door open.

1159
01:12:36,560 --> 01:12:39,560
 To push the chair, we go to the back of the chair and push it towards the

1160
01:12:39,560 --> 01:12:42,560
 To push the chair, we go to the back of the chair and push it towards the

1161
01:12:42,560 --> 01:12:45,560
 target.

1162
01:12:45,560 --> 01:12:48,560
 But because the dynamic of the chair is unknown, we might push it to an

1163
01:12:48,560 --> 01:12:51,560
 unwanted direction.

1164
01:12:51,560 --> 01:12:54,560
 We do this reactively by actively measuring the center of the chair while

1165
01:12:54,560 --> 01:12:57,560
 we go and nudging it towards the center while we close.

1166
01:12:57,560 --> 01:13:00,560
 We do this reactively by actively measuring the center of the chair while

1167
01:13:00,560 --> 01:13:03,560
 we go and nudging it towards the center while we close.

1168
01:13:03,560 --> 01:13:06,560
 For moving the bucket, we also have two strategies.

1169
01:13:06,560 --> 01:13:09,560
 The first is to pick the bucket up with using two bone scrappers.

1170
01:13:09,560 --> 01:13:12,560
 The other is to hug the bucket.

1171
01:13:12,560 --> 01:13:15,560
 While the picking one has a much higher accuracy, it cannot pick the bucket

1172
01:13:15,560 --> 01:13:18,560
 if the rim is too thick.

1173
01:13:18,560 --> 01:13:21,560
 So in our behavior tree, we check how thick is the bucket and decide which

1174
01:13:21,560 --> 01:13:24,560
 strategy to go.

1175
01:13:24,560 --> 01:13:27,560
 Here are our results.

1176
01:13:27,560 --> 01:13:30,560
 As you can see, we vastly outperformed methods that learned from

1177
01:13:30,560 --> 01:13:33,560
 demonstrations.

1178
01:13:33,560 --> 01:13:36,560
 Contrary to the learning methods, our method has no discrepancy between the

1179
01:13:36,560 --> 01:13:39,560
 testing and training scores.

1180
01:13:39,560 --> 01:13:42,560
 This is evaluated by the challenge two weeks ago.

1181
01:13:42,560 --> 01:13:45,560
 This is our latest result using Drake to solve inverse kinematics.

1182
01:13:45,560 --> 01:13:48,560
 The next step would be to look into the failure cases and adjust the

1183
01:13:48,560 --> 01:13:51,560
 behavior tree to account for those failures.

1184
01:13:51,560 --> 01:13:54,560
 We're also interested in using these controllers in a task and motion

1185
01:13:54,560 --> 01:13:57,560
 planning setting to achieve complex non-horizon goals.

1186
01:13:57,560 --> 01:14:00,560
 As a first step to that, we've implemented our manipulation policy on a

1187
01:14:00,560 --> 01:14:03,560
 real-world mobile-based robot.

1188
01:14:03,560 --> 01:14:06,560
 Thank you for listening.

1189
01:14:06,560 --> 01:14:09,560
 [ Applause ]

1190
01:14:13,560 --> 01:14:16,560
 >> We're going to go a little bit further.

1191
01:14:16,560 --> 01:14:19,560
 We're going to go a little bit further.

1192
01:14:19,560 --> 01:14:22,560
 You're going to hear a little bit more about the challenge and the

1193
01:14:22,560 --> 01:14:25,560
 manipulation.

1194
01:14:25,560 --> 01:14:28,560
 So how does it differ from the challenge?

1195
01:14:28,560 --> 01:14:31,560
 How does it differ from the challenge?

1196
01:14:31,560 --> 01:14:34,560
 How do you make it different from the challenge?

1197
01:14:34,560 --> 01:14:37,560
 How do you make it different from the challenge?

1198
01:14:37,560 --> 01:14:40,560
 How do you make it different from the challenge?

1199
01:14:40,560 --> 01:14:43,560
 I wasn't pulling for that one, but that's good.

1200
01:14:43,560 --> 01:14:46,560
 All right.

1201
01:14:46,560 --> 01:14:49,560
 >> Hello.

1202
01:14:49,560 --> 01:14:52,560
 This is wiping bot.

1203
01:14:52,560 --> 01:14:55,560
 This is an optimization-based surface wiping approach.

1204
01:14:55,560 --> 01:14:58,560
 I'm Drake.

1205
01:14:58,560 --> 01:15:01,560
 >> And I'm Nishant.

1206
01:15:01,560 --> 01:15:04,560
 To start off, we want to convince you that wiping is both an

1207
01:15:04,560 --> 01:15:07,560
 interesting and useful manipulation problem.

1208
01:15:07,560 --> 01:15:11,560
 It's useful because it's a good way to get rid of dirt that's

1209
01:15:11,560 --> 01:15:14,560
 against the surface and also because of the planning problem of

1210
01:15:14,560 --> 01:15:17,560
 which order to wipe various dirt locations in.

1211
01:15:17,560 --> 01:15:21,560
 Wiping is also very useful because it's among the top requested

1212
01:15:21,560 --> 01:15:24,560
 services by users of robots.

1213
01:15:24,560 --> 01:15:27,560
 And a very important component of cleaning.

1214
01:15:27,560 --> 01:15:30,560
 Okay.

1215
01:15:30,560 --> 01:15:33,560
 So let's start off by talking about our simulation setup.

1216
01:15:33,560 --> 01:15:37,560
 For actually wiping in this project, we choose to weld a

1217
01:15:37,560 --> 01:15:40,560
 sponge directly to our EWA.

1218
01:15:40,560 --> 01:15:44,560
 To simulate dirt, we leverage Drake's mesh painter functionality,

1219
01:15:44,560 --> 01:15:47,560
 which lets us update the texture of one object when it comes into

1220
01:15:47,560 --> 01:15:50,560
 contact with another object, namely our sponge.

1221
01:15:50,560 --> 01:15:55,560
 Now, we were only able to do this for our dirt on our table.

1222
01:15:55,560 --> 01:15:59,560
 And so dirt on our plates still has a simple particle-based

1223
01:15:59,560 --> 01:16:02,560
 representation.

1224
01:16:02,560 --> 01:16:03,560
 Okay.

1225
01:16:03,560 --> 01:16:06,560
 So now that we have the simulation setup, let's talk about

1226
01:16:06,560 --> 01:16:08,560
 actuating the robot.

1227
01:16:08,560 --> 01:16:11,560
 For wiping, in addition to a simple IK-based position

1228
01:16:11,560 --> 01:16:15,560
 controller, what we need is a hybrid force position controller.

1229
01:16:15,560 --> 01:16:18,560
 Our first attempt at designing this, we did a PD controller on

1230
01:16:18,560 --> 01:16:21,560
 X, Y, and Z and output zero torque on RPY.

1231
01:16:21,560 --> 01:16:24,560
 But this didn't work for seemingly obvious reasons in

1232
01:16:24,560 --> 01:16:25,560
 hindsight.

1233
01:16:25,560 --> 01:16:29,560
 So we decided to implement a PD controller on roll, pitch, and

1234
01:16:29,560 --> 01:16:30,560
 yaw.

1235
01:16:30,560 --> 01:16:34,560
 However, while this did better, it still didn't work because of

1236
01:16:34,560 --> 01:16:37,560
 the circular difference property of angles.

1237
01:16:37,560 --> 01:16:41,560
 So this makes a naive P controller on RPY bad.

1238
01:16:41,560 --> 01:16:44,560
 So we settled for a simple D controller on RPY.

1239
01:16:44,560 --> 01:16:49,560
 And this produces a great trajectory that keeps constant

1240
01:16:49,560 --> 01:16:54,560
 force contact with the table, just like we need for wiping.

1241
01:16:54,560 --> 01:16:57,560
 Now that we have a hybrid force position controller, we need to

1242
01:16:57,560 --> 01:16:59,560
 generate a trajectory for our wiping motion.

1243
01:16:59,560 --> 01:17:01,560
 We took four different approaches for generating this

1244
01:17:01,560 --> 01:17:05,560
 trajectory, ranging from a naive approach to where we assume

1245
01:17:05,560 --> 01:17:07,560
 that the dirt locations is just our trajectory.

1246
01:17:07,560 --> 01:17:11,560
 So we'll go from dirt location one to two to three, to four, to

1247
01:17:11,560 --> 01:17:12,560
 so on and so forth.

1248
01:17:12,560 --> 01:17:14,560
 But as you can see, this may lead to unintelligent behavior

1249
01:17:14,560 --> 01:17:17,560
 with respect to the displacement of the robot.

1250
01:17:17,560 --> 01:17:20,560
 So we also formulated this problem via constraint

1251
01:17:20,560 --> 01:17:24,560
 optimization problem, which tries to minimize the

1252
01:17:24,560 --> 01:17:27,560
 displacement of the robot while also satisfying strict

1253
01:17:27,560 --> 01:17:29,560
 constraints and threshold constraints with respect to the

1254
01:17:29,560 --> 01:17:31,560
 dirt location.

1255
01:17:31,560 --> 01:17:34,560
 Now that we have a simulation, a hybrid force position

1256
01:17:34,560 --> 01:17:37,560
 controller, and a wiping trajectory that we want to move

1257
01:17:37,560 --> 01:17:39,560
 along the table, we can now talk about our overall control

1258
01:17:39,560 --> 01:17:41,560
 strategy.

1259
01:17:41,560 --> 01:17:44,560
 How it works is from an initial configuration of a gripper, it

1260
01:17:44,560 --> 01:17:49,560
 moves to a location on the table using pure position control.

1261
01:17:49,560 --> 01:17:53,560
 When it's at that location, it then switches into our hybrid

1262
01:17:53,560 --> 01:17:57,560
 force position controller, which moves along our wiping

1263
01:17:57,560 --> 01:18:00,560
 trajectory that is given by our optimizer, while maintaining a

1264
01:18:00,560 --> 01:18:05,560
 force in the Z direction that is weak enough to allow for moving

1265
01:18:05,560 --> 01:18:10,560
 along the XY direction, while also strong enough to make sure

1266
01:18:10,560 --> 01:18:13,560
 that our plate doesn't move when we're doing the wiping

1267
01:18:13,560 --> 01:18:16,560
 motion.

1268
01:18:16,560 --> 01:18:19,560
 To conclude the project, we set up a simulation in PyDrake in

1269
01:18:19,560 --> 01:18:22,560
 order to simulate the table, the plate, the gripper, and the

1270
01:18:22,560 --> 01:18:24,560
 dirt.

1271
01:18:24,560 --> 01:18:27,560
 We also made a controller that uses pure position control for

1272
01:18:27,560 --> 01:18:31,560
 navigating and hybrid position control for wiping.

1273
01:18:31,560 --> 01:18:34,560
 And we generated trajectories via different optimization

1274
01:18:34,560 --> 01:18:37,560
 approaches for our controller.

1275
01:18:37,560 --> 01:18:41,560
 And then finally, we evaluated our trajectories on a set of

1276
01:18:41,560 --> 01:18:43,560
 experiments.

1277
01:18:43,560 --> 01:18:46,560
 Thank you.

1278
01:18:46,560 --> 01:18:52,560
 [ Applause ]

1279
01:18:52,560 --> 01:18:55,560
 >> I think poor guy just left like a minute before I started

1280
01:18:55,560 --> 01:18:57,560
 this video.

1281
01:18:57,560 --> 01:18:59,560
 And I do know it's going to be four, so if people have to

1282
01:18:59,560 --> 01:19:01,560
 leave, I understand.

1283
01:19:01,560 --> 01:19:07,560
 But we're going to keep going.

1284
01:19:07,560 --> 01:19:09,560
 >> Hi.

1285
01:19:09,560 --> 01:19:11,560
 We are Alex, Pete, and Anand.

1286
01:19:11,560 --> 01:19:13,560
 And we're the team that developed the first-ever

1287
01:19:13,560 --> 01:19:15,560
 programmable method for certifiable collision-free

1288
01:19:15,560 --> 01:19:17,560
 motion planning.

1289
01:19:17,560 --> 01:19:19,560
 We introduced a system of 2D robot arms with three degrees

1290
01:19:19,560 --> 01:19:22,560
 of freedom in total, depicted on the left, for which we can

1291
01:19:22,560 --> 01:19:24,560
 visualize the configuration space.

1292
01:19:24,560 --> 01:19:26,560
 The system consists of a one-link serial manipulator in

1293
01:19:26,560 --> 01:19:28,560
 green and a two-link serial manipulator in red and blue,

1294
01:19:28,560 --> 01:19:30,560
 surrounded by a bounding box.

1295
01:19:30,560 --> 01:19:32,560
 On the right, you can see a rational parametrization of the

1296
01:19:32,560 --> 01:19:34,560
 configuration space, where the red region contains all

1297
01:19:34,560 --> 01:19:36,560
 configurations that are not in collision.

1298
01:19:36,560 --> 01:19:39,560
 When we change the joint angles of the robot arms, the green

1299
01:19:39,560 --> 01:19:41,560
 sphere moves to the corresponding location in

1300
01:19:41,560 --> 01:19:44,560
 configuration space and changes its color to yellow when the

1301
01:19:44,560 --> 01:19:46,560
 arms are in collision.

1302
01:19:46,560 --> 01:19:48,560
 While sampling-based methods, like the rapidly exploring

1303
01:19:48,560 --> 01:19:51,560
 random tree on the left and the probabilistic roadmap on the

1304
01:19:51,560 --> 01:19:54,560
 right converge quickly for this example, the paths are

1305
01:19:54,560 --> 01:19:56,560
 typically jerky and require post-processing.

1306
01:19:56,560 --> 01:19:59,560
 More importantly, these methods require significantly more

1307
01:19:59,560 --> 01:20:02,560
 samples and a non-trivial amount of parameter tuning when

1308
01:20:02,560 --> 01:20:04,560
 scaling up to higher dimensions.

1309
01:20:04,560 --> 01:20:07,560
 To get smooth paths, like from trajectory optimization, while

1310
01:20:07,560 --> 01:20:10,560
 keeping probabilistic coverage, we focus our attention on

1311
01:20:10,560 --> 01:20:13,560
 set-based methods instead of point-based methods.

1312
01:20:13,560 --> 01:20:16,560
 The idea in the set-wise decomposition approach is to

1313
01:20:16,560 --> 01:20:19,560
 clear entire regions as collision-free instead of only

1314
01:20:19,560 --> 01:20:21,560
 individual samples and edges.

1315
01:20:21,560 --> 01:20:25,560
 In our project, we use the Iris algorithm adopted for

1316
01:20:25,560 --> 01:20:29,560
 configuration space to decompose the collision-free space into

1317
01:20:29,560 --> 01:20:31,560
 convex polytopes.

1318
01:20:31,560 --> 01:20:34,560
 In broad strokes, the algorithm starts off with a chosen seed

1319
01:20:34,560 --> 01:20:37,560
 location and tries to grow the largest possible collision-free

1320
01:20:37,560 --> 01:20:40,560
 polytope where its size is measured by the volume of the

1321
01:20:40,560 --> 01:20:42,560
 maximal inscribed ellipse.

1322
01:20:42,560 --> 01:20:44,560
 It does this using nonlinear programming.

1323
01:20:44,560 --> 01:20:47,560
 This can be repeated for multiple seed points and the

1324
01:20:47,560 --> 01:20:50,560
 resulting regions can then be used for collision-free motion

1325
01:20:50,560 --> 01:20:53,560
 planning by solving a shortest path through graph of convex

1326
01:20:53,560 --> 01:20:55,560
 sets problem.

1327
01:20:55,560 --> 01:20:58,560
 There's a renewed interest in this formulation in the robot

1328
01:20:58,560 --> 01:21:01,560
 locomotion group at MIT because of a recent breakthrough.

1329
01:21:01,560 --> 01:21:04,560
 They had in solving these kinds of problems.

1330
01:21:04,560 --> 01:21:07,560
 They kindly provided us with example implementations of both

1331
01:21:07,560 --> 01:21:09,560
 Iris and the shortest path problem.

1332
01:21:09,560 --> 01:21:13,560
 But due to the fact that we are using nonlinear programming

1333
01:21:13,560 --> 01:21:16,560
 and the resulting formulation only provides locally separating

1334
01:21:16,560 --> 01:21:19,560
 hyperplanes, not all generated regions are collision-free.

1335
01:21:19,560 --> 01:21:23,560
 This in return can be exploited by the shortest path program,

1336
01:21:23,560 --> 01:21:25,560
 which can lead to collisions.

1337
01:21:25,560 --> 01:21:28,560
 We therefore need a method for identifying, violating, and

1338
01:21:28,560 --> 01:21:31,560
 we now present the problem formulation we use in order to

1339
01:21:31,560 --> 01:21:34,560
 certify when Iris regions are collision-free.

1340
01:21:34,560 --> 01:21:37,560
 First, recall that two convex bodies are collision-free if and

1341
01:21:37,560 --> 01:21:40,560
 only if there exists a separating hyperplane between them.

1342
01:21:40,560 --> 01:21:43,560
 If we suppose that all of the collision bodies are convex

1343
01:21:43,560 --> 01:21:46,560
 polytopes, we can pose the search for this hyperplane as an

1344
01:21:46,560 --> 01:21:48,560
 SVM problem using quadratic programming.

1345
01:21:48,560 --> 01:21:51,560
 However, we want to find a plane for all configurations in a

1346
01:21:51,560 --> 01:21:52,560
 given region.

1347
01:21:52,560 --> 01:21:55,560
 To do this, we start by constructing a plane for all

1348
01:21:55,560 --> 01:21:57,560
 configurations in a given region.

1349
01:21:57,560 --> 01:21:59,560
 To do this, we start by converting the trigonometric

1350
01:21:59,560 --> 01:22:02,560
 functions defining the positions of each vertex into a rational

1351
01:22:02,560 --> 01:22:05,560
 function using the stereographic projection.

1352
01:22:05,560 --> 01:22:08,560
 We introduce two polynomials, a(t) and b(t), which will give

1353
01:22:08,560 --> 01:22:11,560
 hyperplanes for different values of the configuration.

1354
01:22:11,560 --> 01:22:15,560
 Therefore, we want to search for polynomials a(t) and b(t),

1355
01:22:15,560 --> 01:22:19,560
 which satisfy these two inequalities for all t in the

1356
01:22:19,560 --> 01:22:22,560
 Iris region c(t) less than or equal to d.

1357
01:22:22,560 --> 01:22:24,560
 How does one do this?

1358
01:22:24,560 --> 01:22:27,560
 The answer comes from Putner's positive Stellensatz, which

1359
01:22:27,560 --> 01:22:31,560
 states that a polynomial p is positive on a set if and only

1360
01:22:31,560 --> 01:22:35,560
 if it can be decomposed into polynomials s, which are all

1361
01:22:35,560 --> 01:22:38,560
 sum of squares, summed with the set itself.

1362
01:22:38,560 --> 01:22:41,560
 These polynomials are called multiplier polynomials.

1363
01:22:41,560 --> 01:22:44,560
 This theorem gives the following program, which is a

1364
01:22:44,560 --> 01:22:46,560
 sum of squares program.

1365
01:22:46,560 --> 01:22:49,560
 SOS programs can be solved in polynomial time, and we exploit

1366
01:22:49,560 --> 01:22:52,560
 this to search for the polytopes.

1367
01:22:52,560 --> 01:22:54,560
 If the program finds a violation of the region, it is

1368
01:22:54,560 --> 01:22:57,560
 not always obvious that we wish to discard it.

1369
01:22:57,560 --> 01:22:59,560
 Violations can be fairly minor, and so we consider

1370
01:22:59,560 --> 01:23:01,560
 slightly tightening the constraints, which corresponds

1371
01:23:01,560 --> 01:23:03,560
 to shrinking the regions.

1372
01:23:03,560 --> 01:23:05,560
 This minor adjustment to the previous program finds the

1373
01:23:05,560 --> 01:23:08,560
 smallest tightening, which certifies the region.

1374
01:23:08,560 --> 01:23:10,560
 Unfortunately, there's a bilinear between the

1375
01:23:10,560 --> 01:23:13,560
 multipliers and epsilon, and so it is non-convex.

1376
01:23:13,560 --> 01:23:16,560
 Therefore, we suggest alternating between searching

1377
01:23:16,560 --> 01:23:21,560
 for the planes and multipliers and tightening the constraints.

1378
01:23:21,560 --> 01:23:24,560
 Using this program on our simple example as before, we

1379
01:23:24,560 --> 01:23:28,560
 have allowed our program to edit the original iris regions

1380
01:23:28,560 --> 01:23:30,560
 to be guaranteed to be collision-free.

1381
01:23:30,560 --> 01:23:33,560
 We show the separating hyperplanes between the active

1382
01:23:33,560 --> 01:23:34,560
 links in this example.

1383
01:23:34,560 --> 01:23:37,560
 The red plane separates the blue and the green links,

1384
01:23:37,560 --> 01:23:40,560
 while the green plane separates the red and the green links.

1385
01:23:40,560 --> 01:23:43,560
 While all these methods can be scaled up to realistic

1386
01:23:43,560 --> 01:23:46,560
 examples, we note that planning through iris regions has the

1387
01:23:46,560 --> 01:23:49,560
 advantage of generating smooth trajectories natively.

1388
01:23:49,560 --> 01:23:51,560
 These trajectories are guaranteed to be collision-free

1389
01:23:51,560 --> 01:23:55,560
 along the whole trajectory, rather than just the sample points.

1390
01:23:55,560 --> 01:23:58,560
 Additionally, it requires less tuning of hyperparameters.

1391
01:23:58,560 --> 01:24:00,560
 However, we note that this technique is not a cure-all,

1392
01:24:00,560 --> 01:24:03,560
 as iris and the shortest path formulations are sensitive

1393
01:24:03,560 --> 01:24:07,560
 to the seed points and the connectivity of the resulting regions.

1394
01:24:07,560 --> 01:24:10,560
 Additionally, our current implementation of the certifier

1395
01:24:10,560 --> 01:24:13,560
 is quite slow, limiting scaling, though we are confident

1396
01:24:13,560 --> 01:24:15,560
 this can be fixed.

1397
01:24:16,560 --> 01:24:20,560
 [applause]

1398
01:24:20,560 --> 01:24:23,560
 We have to do quick questions at this point, but these guys are here.

1399
01:24:23,560 --> 01:24:25,560
 Anybody have a quick question?

1400
01:24:25,560 --> 01:24:28,560
 I have tons of questions, so I'm going to save mine until after.

1401
01:24:28,560 --> 01:24:30,560
 [laughter]

1402
01:24:30,560 --> 01:24:32,560
 Okay, I'm going to keep going.

1403
01:24:32,560 --> 01:24:39,560
 Hi, I'm Andy Wing, and today I'll be presenting

1404
01:24:39,560 --> 01:24:40,560
 the stacking plot.

1405
01:24:40,560 --> 01:24:42,560
 Let's set the scene.

1406
01:24:42,560 --> 01:24:44,560
 So I was thinking about what project to do, and I sort of

1407
01:24:44,560 --> 01:24:47,560
 saw a p-set lying there, and I was like, well, wouldn't it be cool

1408
01:24:47,560 --> 01:24:49,560
 if a robot could do a p-set for me?

1409
01:24:49,560 --> 01:24:53,560
 I saw the door-opening p-set, and thought about it, and I was like,

1410
01:24:53,560 --> 01:24:56,560
 well, that's not really possible.

1411
01:24:56,560 --> 01:24:59,560
 So if we can't make something that college students can do,

1412
01:24:59,560 --> 01:25:01,560
 what if we made something that babies can do?

1413
01:25:01,560 --> 01:25:03,560
 Well, what do babies do?

1414
01:25:03,560 --> 01:25:07,560
 They crawl around, they call, they cry out quite a bit,

1415
01:25:07,560 --> 01:25:09,560
 they eat Legos.

1416
01:25:09,560 --> 01:25:13,560
 So I went, okay, what if we made a robot that can build Legos,

1417
01:25:13,560 --> 01:25:15,560
 that can assemble Lego structures?

1418
01:25:15,560 --> 01:25:19,560
 Now the challenge was really just, how am I going to turn that thing

1419
01:25:19,560 --> 01:25:23,560
 on the left, the stack of Legos, into an actual structure?

1420
01:25:23,560 --> 01:25:25,560
 Let's set the problem.

1421
01:25:25,560 --> 01:25:27,560
 So first, robots don't really have the creativity to build

1422
01:25:27,560 --> 01:25:29,560
 Lego structures.

1423
01:25:29,560 --> 01:25:32,560
 So this creativity is going to be brought in by a human,

1424
01:25:32,560 --> 01:25:35,560
 and it's going to be brought in via the form of a Lego blueprint.

1425
01:25:35,560 --> 01:25:38,560
 So if you look at the bottom left, this blueprint is going to be

1426
01:25:38,560 --> 01:25:42,560
 provided to the stacking bot, and it's also given sort of

1427
01:25:42,560 --> 01:25:46,560
 a list of what pieces to put first, so an assembly order.

1428
01:25:46,560 --> 01:25:49,560
 And the reason for this assembly order is to prevent some really

1429
01:25:49,560 --> 01:25:54,560
 difficult situations where like pieces that are placed

1430
01:25:54,560 --> 01:25:56,560
 don't have bases yet.

1431
01:25:56,560 --> 01:26:01,560
 Second, we're using modified Legos, so the pegs have been reduced

1432
01:26:01,560 --> 01:26:05,560
 from 0.0048 meters to 0.004 meters,

1433
01:26:05,560 --> 01:26:07,560
 and this allows for easier attachment.

1434
01:26:07,560 --> 01:26:10,560
 And finally, we're only considering simple structures,

1435
01:26:10,560 --> 01:26:13,560
 where we're only considering things on the top right

1436
01:26:13,560 --> 01:26:15,560
 with the stable attachments.

1437
01:26:15,560 --> 01:26:18,560
 We're not considering the other two cases.

1438
01:26:18,560 --> 01:26:21,560
 Now, for implementation, the actual Lego placement needs

1439
01:26:21,560 --> 01:26:23,560
 to be extremely precise.

1440
01:26:23,560 --> 01:26:26,560
 So initially, I wanted to try using forward kinematics.

1441
01:26:26,560 --> 01:26:29,560
 This actually failed, and instead I decided to use inverse

1442
01:26:29,560 --> 01:26:31,560
 kinematics for greater precision.

1443
01:26:31,560 --> 01:26:34,560
 Here, we use a quadratic cost on the distance from the

1444
01:26:34,560 --> 01:26:36,560
 comfort position.

1445
01:26:36,560 --> 01:26:39,560
 This was inspired by the door opening problem, and similarly,

1446
01:26:39,560 --> 01:26:42,560
 we're going to box the gripper position within a desired

1447
01:26:42,560 --> 01:26:46,560
 position bounding box, and this allows us to ensure that

1448
01:26:46,560 --> 01:26:48,560
 the gripper position is where we want it to be.

1449
01:26:48,560 --> 01:26:51,560
 For a general motion plan, we can't sort of just like tell the

1450
01:26:51,560 --> 01:26:54,560
 arm to go to the Lego and then close it and then bring it

1451
01:26:54,560 --> 01:26:56,560
 to the desired position.

1452
01:26:56,560 --> 01:26:58,560
 We actually need a more divided plan, where we move above

1453
01:26:58,560 --> 01:27:02,560
 the Lego, descend, grab the Lego, raise it, and repeat the process

1454
01:27:02,560 --> 01:27:05,560
 to set it down in the desired position.

1455
01:27:05,560 --> 01:27:07,560
 Now, for the main challenge.

1456
01:27:07,560 --> 01:27:10,560
 So when I actually tried to use inverse kinematics on sort

1457
01:27:10,560 --> 01:27:14,560
 of like the eight positions shown here, it caused a lot

1458
01:27:14,560 --> 01:27:16,560
 of wild movements and instability.

1459
01:27:16,560 --> 01:27:21,560
 So, for example, it would sort of create these really wild

1460
01:27:21,560 --> 01:27:25,560
 joint movements between different positions, and as a result,

1461
01:27:25,560 --> 01:27:27,560
 it'd sort of get tangled up and it'd be really difficult

1462
01:27:27,560 --> 01:27:30,560
 to progress to other positions, also collide with a lot

1463
01:27:30,560 --> 01:27:31,560
 of other Legos.

1464
01:27:31,560 --> 01:27:34,560
 So I, taking inspiration from the door opening problem

1465
01:27:34,560 --> 01:27:38,560
 once again, decided to divide this up into a lot

1466
01:27:38,560 --> 01:27:40,560
 of intermediate positions that you can sort of see

1467
01:27:40,560 --> 01:27:44,560
 on the top right here, where for maybe like a lower action,

1468
01:27:44,560 --> 01:27:48,560
 it's split into five or 10 different intermediate positions

1469
01:27:48,560 --> 01:27:51,560
 that it travels to, which allows for these minimal joint

1470
01:27:51,560 --> 01:27:54,560
 movements in between each position.

1471
01:27:54,560 --> 01:27:58,560
 Finally, with this established, it's really hard to move

1472
01:27:58,560 --> 01:28:00,560
 through the center of the arm.

1473
01:28:00,560 --> 01:28:03,560
 So if you consider moving from the one position

1474
01:28:03,560 --> 01:28:06,560
 to another, sometimes that's going to cross the central

1475
01:28:06,560 --> 01:28:09,560
 axis of the arm, and this actually is very difficult

1476
01:28:09,560 --> 01:28:11,560
 to do and it gets the joints tangled up.

1477
01:28:11,560 --> 01:28:14,560
 So instead, I decided to move to a designated reference

1478
01:28:14,560 --> 01:28:17,560
 point, rotate to another designated reference point,

1479
01:28:17,560 --> 01:28:19,560
 then move from there to the final position.

1480
01:28:19,560 --> 01:28:21,560
 And you can sort of see that arc motion occurring

1481
01:28:21,560 --> 01:28:25,560
 on the top right.

1482
01:28:25,560 --> 01:28:28,560
 And finally, I decided to have a variable bounding box

1483
01:28:28,560 --> 01:28:31,560
 so that when it lowers, you can see it's really precise

1484
01:28:31,560 --> 01:28:33,560
 and close to the pose that it's meant to be in.

1485
01:28:33,560 --> 01:28:37,560
 But when it's moving, it doesn't need to be so precise.

1486
01:28:37,560 --> 01:28:40,560
 So you can see it's not fully following the pose

1487
01:28:40,560 --> 01:28:43,560
 that it's been provided.

1488
01:28:43,560 --> 01:28:46,560
 So just for a quick demo of what ended up happening,

1489
01:28:46,560 --> 01:28:49,560
 this is arranging the pyramid that I showed at the very start,

1490
01:28:49,560 --> 01:28:53,560
 and this has been sped up like maybe 10 times.

1491
01:28:53,560 --> 01:28:56,560
 You can see it's just putting each block,

1492
01:28:56,560 --> 01:28:58,560
 and you can see it's following the arc motion described

1493
01:28:58,560 --> 01:29:02,560
 to prevent the joints from being caught up.

1494
01:29:02,560 --> 01:29:05,560
 It's a little hard to tell because of the low resolution,

1495
01:29:05,560 --> 01:29:08,560
 but it's sort of stacking each block pretty well.

1496
01:29:08,560 --> 01:29:13,560
 And finally, as it places the last block,

1497
01:29:13,560 --> 01:29:15,560
 the pyramid is complete.

1498
01:29:15,560 --> 01:29:21,560
 For some future works, I originally

1499
01:29:21,560 --> 01:29:23,560
 wanted to use reinforced--

1500
01:29:27,560 --> 01:29:32,560
 OK, and we got apparently a room booking thing

1501
01:29:32,560 --> 01:29:34,560
 happening here, so there's a small chance we'll

1502
01:29:34,560 --> 01:29:36,560
 pick up and move next door, but hopefully not.

1503
01:29:36,560 --> 01:29:39,560
 So let me keep going and be optimistic.

1504
01:29:39,560 --> 01:29:40,560
 Hello, everyone.

1505
01:29:40,560 --> 01:29:42,560
 Our project is titled Fast Online Search and Retrieve

1506
01:29:42,560 --> 01:29:45,560
 Using Learned Spatial Arrangements of Common Objects.

1507
01:29:45,560 --> 01:29:46,560
 So let's break that down.

1508
01:29:46,560 --> 01:29:48,560
 Imagine a messy but structured environment,

1509
01:29:48,560 --> 01:29:49,560
 such as a kitchen.

1510
01:29:49,560 --> 01:29:52,560
 In your kitchen, you have your shelves, your cupboards,

1511
01:29:52,560 --> 01:29:54,560
 and your counters, and oftentimes, people

1512
01:29:54,560 --> 01:29:56,560
 will store the items in their kitchen in an organized way.

1513
01:29:56,560 --> 01:29:58,560
 For example, I might like to have my condiments

1514
01:29:58,560 --> 01:30:00,560
 on my shelves and my cups on my counters.

1515
01:30:00,560 --> 01:30:03,560
 So maybe this information could be useful for us.

1516
01:30:03,560 --> 01:30:05,560
 Imagine the following situation.

1517
01:30:05,560 --> 01:30:07,560
 It's Kevin's turn to make dinner again,

1518
01:30:07,560 --> 01:30:09,560
 and his food is awfully unseasoned.

1519
01:30:09,560 --> 01:30:12,560
 So maybe my robot can help me find my hot sauce.

1520
01:30:12,560 --> 01:30:14,560
 So the robot might know from past experience

1521
01:30:14,560 --> 01:30:16,560
 that the hot sauce is usually on the shelf, which

1522
01:30:16,560 --> 01:30:19,560
 is usually above the sink, and can use these associations

1523
01:30:19,560 --> 01:30:22,560
 to search for and retrieve my hot sauce.

1524
01:30:22,560 --> 01:30:25,560
 The robot doesn't know where the sink or the hot sauce

1525
01:30:25,560 --> 01:30:27,560
 or any of the items are just yet,

1526
01:30:27,560 --> 01:30:29,560
 but it knows that if it sees the sink or the shelf,

1527
01:30:29,560 --> 01:30:30,560
 it must be close to the hot sauce,

1528
01:30:30,560 --> 01:30:33,560
 and will guide the search in that direction.

1529
01:30:33,560 --> 01:30:35,560
 OK, so let's talk a little bit about our approach.

1530
01:30:35,560 --> 01:30:38,560
 So given that we have associations between objects,

1531
01:30:38,560 --> 01:30:40,560
 but we don't initially know the locations of any

1532
01:30:40,560 --> 01:30:42,560
 of the objects in the scene, the question

1533
01:30:42,560 --> 01:30:44,560
 is, how might we search for a target object?

1534
01:30:44,560 --> 01:30:46,560
 And so the first thing that we can do

1535
01:30:46,560 --> 01:30:49,560
 is we can partition our space into a 3D grid of cells,

1536
01:30:49,560 --> 01:30:52,560
 and then from here, we can run a few standard algorithms.

1537
01:30:52,560 --> 01:30:54,560
 So for example, one of our initial ideas

1538
01:30:54,560 --> 01:30:57,560
 was to formulate a graph search problem, where

1539
01:30:57,560 --> 01:31:00,560
 basically each of the grid cells is a node in the graph,

1540
01:31:00,560 --> 01:31:03,560
 and we could use an algorithm like A* to search over the space

1541
01:31:03,560 --> 01:31:06,560
 and use our associations as a heuristic to guide the search.

1542
01:31:06,560 --> 01:31:09,560
 However, we decided not to pursue this algorithm,

1543
01:31:09,560 --> 01:31:11,560
 because in order to explore the nodes in the graph,

1544
01:31:11,560 --> 01:31:13,560
 the robot needs to physically visit

1545
01:31:13,560 --> 01:31:16,560
 the corresponding locations in 3D space, which

1546
01:31:16,560 --> 01:31:17,560
 can be quite expensive.

1547
01:31:17,560 --> 01:31:21,560
 And so instead, we decided to go for a grid search algorithm.

1548
01:31:21,560 --> 01:31:23,560
 So the way that the algorithm works

1549
01:31:23,560 --> 01:31:26,560
 is that we essentially define a belief, which

1550
01:31:26,560 --> 01:31:28,560
 is a probability value which we associate

1551
01:31:28,560 --> 01:31:31,560
 with every cell in the grid, and it defines the probability,

1552
01:31:31,560 --> 01:31:34,560
 given the robot's current knowledge of the scene,

1553
01:31:34,560 --> 01:31:36,560
 the probability that the target object

1554
01:31:36,560 --> 01:31:38,560
 is located in that grid cell.

1555
01:31:38,560 --> 01:31:42,560
 And so what our robot does is, until the target is found,

1556
01:31:42,560 --> 01:31:46,560
 it will choose a cell to move to and observe using IK and RRT,

1557
01:31:46,560 --> 01:31:48,560
 and then it will make an observation

1558
01:31:48,560 --> 01:31:49,560
 and then update the belief.

1559
01:31:49,560 --> 01:31:52,560
 So for example, if the robot sees an associated object,

1560
01:31:52,560 --> 01:31:55,560
 it will increase the belief values,

1561
01:31:55,560 --> 01:31:58,560
 and if the robot sees an object that is unassociated

1562
01:31:58,560 --> 01:32:01,560
 or it sees empty cells, it will decrease the belief values

1563
01:32:01,560 --> 01:32:02,560
 at those locations.

1564
01:32:02,560 --> 01:32:05,560
 So how do we actually solve for these associations?

1565
01:32:05,560 --> 01:32:08,560
 Well, in our project, we consider them to be 0, 1 values

1566
01:32:08,560 --> 01:32:09,560
 for every--

1567
01:32:09,560 --> 01:32:12,560
 values ranging from 0 to 1 for every pair

1568
01:32:12,560 --> 01:32:13,560
 of objects in the scene.

1569
01:32:13,560 --> 01:32:15,560
 And so for example, at a high level,

1570
01:32:15,560 --> 01:32:17,560
 the way we collect this data is we simply

1571
01:32:17,560 --> 01:32:20,560
 sample a bunch of views, and we basically

1572
01:32:20,560 --> 01:32:22,560
 collect the data as to which objects

1573
01:32:22,560 --> 01:32:24,560
 are located near each other.

1574
01:32:24,560 --> 01:32:26,560
 Our experiments are as follows.

1575
01:32:26,560 --> 01:32:28,560
 We run our search in a complex environment

1576
01:32:28,560 --> 01:32:30,560
 with many bins and shelves where certain items can

1577
01:32:30,560 --> 01:32:33,560
 be located randomly with high or low probability.

1578
01:32:33,560 --> 01:32:36,560
 Additionally, there are some walls that obstruct the views.

1579
01:32:36,560 --> 01:32:38,560
 We compare our approach with random search,

1580
01:32:38,560 --> 01:32:41,560
 as well as grid-space search without associations.

1581
01:32:41,560 --> 01:32:43,560
 But it also collects information about the scene

1582
01:32:43,560 --> 01:32:46,560
 but cannot leverage associations to guide the search.

1583
01:32:46,560 --> 01:32:47,560
 All right.

1584
01:32:47,560 --> 01:32:48,560
 So here's our setup in action.

1585
01:32:48,560 --> 01:32:50,560
 A robot tries to find a can of tomato soup

1586
01:32:50,560 --> 01:32:52,560
 among all the clutter, and the only perception it has

1587
01:32:52,560 --> 01:32:54,560
 is a camera attached to its end effector.

1588
01:32:54,560 --> 01:32:57,560
 Before we arrived at our cool solution with associations,

1589
01:32:57,560 --> 01:32:59,560
 we tried both random search and grid search

1590
01:32:59,560 --> 01:33:00,560
 without associations.

1591
01:33:00,560 --> 01:33:02,560
 As you can see, random search fails

1592
01:33:02,560 --> 01:33:04,560
 to converge on a good strategy and essentially

1593
01:33:04,560 --> 01:33:05,560
 makes arbitrary movements.

1594
01:33:05,560 --> 01:33:07,560
 And the grid search without associations,

1595
01:33:07,560 --> 01:33:10,560
 while it does better, it doesn't have any knowledge

1596
01:33:10,560 --> 01:33:12,560
 about the spatial arrangement of objects.

1597
01:33:12,560 --> 01:33:14,560
 So we have to expect it to search the entire space

1598
01:33:14,560 --> 01:33:16,560
 before it can find the solution.

1599
01:33:17,560 --> 01:33:19,560
 By contrast, here's our method with grid search

1600
01:33:19,560 --> 01:33:20,560
 and associations.

1601
01:33:20,560 --> 01:33:22,560
 On the left, you can see visualizations

1602
01:33:22,560 --> 01:33:24,560
 of our goalie space as 3D plots.

1603
01:33:24,560 --> 01:33:26,560
 And if we play the video, you can see the robot first

1604
01:33:26,560 --> 01:33:28,560
 move into a neutral position before looking

1605
01:33:28,560 --> 01:33:30,560
 to the top of the scene, where it catches

1606
01:33:30,560 --> 01:33:32,560
 a glimpse of the cupboard, which is tightly associated

1607
01:33:32,560 --> 01:33:33,560
 with the tomato soup.

1608
01:33:33,560 --> 01:33:37,560
 So it goes to investigate the cupboard.

1609
01:33:37,560 --> 01:33:39,560
 It performs a few other actions before finally realizing

1610
01:33:39,560 --> 01:33:42,560
 that the tomato soup is at the bottom of the cupboard,

1611
01:33:42,560 --> 01:33:45,560
 where it currently finds the solution.

1612
01:33:45,560 --> 01:33:47,560
 Along the way, we encountered several unexpected

1613
01:33:47,560 --> 01:33:48,560
 tactical challenges.

1614
01:33:48,560 --> 01:33:50,560
 For example, IK's gaze constraint

1615
01:33:50,560 --> 01:33:53,560
 did not come out of the box accounting for occlusion.

1616
01:33:53,560 --> 01:33:56,560
 So we had to attach a cylinder to the end of the end effector

1617
01:33:56,560 --> 01:33:58,560
 to ensure we have direct line of sight with our target.

1618
01:33:58,560 --> 01:34:01,560
 Regarding the algorithm, we observed several problems

1619
01:34:01,560 --> 01:34:03,560
 in the initial stages of testing that we tried to address

1620
01:34:03,560 --> 01:34:05,560
 using the following three measures.

1621
01:34:05,560 --> 01:34:07,560
 First, to account for the trade-off between runtime

1622
01:34:07,560 --> 01:34:09,560
 and resolution, we adjusted the grid size,

1623
01:34:09,560 --> 01:34:11,560
 the barcodes for titation.

1624
01:34:11,560 --> 01:34:13,560
 To avoid nonsensical actions, we adjusted the goalie space

1625
01:34:13,560 --> 01:34:16,560
 prior, and to prevent weak association propagation,

1626
01:34:16,560 --> 01:34:19,560
 to avoid having our goalies explode and vanish,

1627
01:34:19,560 --> 01:34:22,560
 we had to modify our update rule.

1628
01:34:22,560 --> 01:34:24,560
 To make such a system more useful in the real world,

1629
01:34:24,560 --> 01:34:27,560
 we'd first like to investigate moving occluding objects out

1630
01:34:27,560 --> 01:34:30,560
 of the way by some kind of online interaction,

1631
01:34:30,560 --> 01:34:32,560
 and of course, to make sure to test and learn

1632
01:34:32,560 --> 01:34:34,560
 over more environments.

1633
01:34:34,560 --> 01:34:35,560
 That wraps up our presentation.

1634
01:34:35,560 --> 01:34:36,560
 Thank you for watching.

1635
01:34:36,560 --> 01:34:40,560
 Super good.

1636
01:34:40,560 --> 01:34:44,560
 I have to power forward, but that was super impressive

1637
01:34:44,560 --> 01:34:47,560
 and probably the most objects I've ever seen in Metcalfe.

1638
01:34:47,560 --> 01:34:58,560
 Today, we are going to teach you how you can throw

1639
01:34:58,560 --> 01:34:59,560
 like you catch.

1640
01:34:59,560 --> 01:35:02,560
 For that, we have developed an end-to-end robotic throwing

1641
01:35:02,560 --> 01:35:05,560
 and catching system.

1642
01:35:05,560 --> 01:35:07,560
 Robots have started to improve efficiency,

1643
01:35:07,560 --> 01:35:10,560
 increase productivity, and enhance human experiences.

1644
01:35:10,560 --> 01:35:12,560
 Warehouses and manufacturing is a prominent application

1645
01:35:12,560 --> 01:35:15,560
 that we've identified to move objects around

1646
01:35:15,560 --> 01:35:17,560
 and more efficiently and safely than humans.

1647
01:35:17,560 --> 01:35:20,560
 Enabling robots to both throw and catch with one another

1648
01:35:20,560 --> 01:35:22,560
 would expedite the process of obtaining particular packages

1649
01:35:22,560 --> 01:35:25,560
 or materials and moving them from one location to another,

1650
01:35:25,560 --> 01:35:28,560
 as shown on the left, versus our system on the right.

1651
01:35:28,560 --> 01:35:33,560
 Our catching method has four main components.

1652
01:35:33,560 --> 01:35:36,560
 The first is pose filtering, then KUKA arm trajectory

1653
01:35:36,560 --> 01:35:40,560
 planning, KUKA arm closed loop control,

1654
01:35:40,560 --> 01:35:43,560
 and then the gripper trajectory planning and control.

1655
01:35:43,560 --> 01:35:45,560
 The first step is pose filtering.

1656
01:35:45,560 --> 01:35:47,560
 We assume that we have perfect knowledge of the ball's

1657
01:35:47,560 --> 01:35:50,560
 trajectory from when it's launched to when it hits the

1658
01:35:50,560 --> 01:35:51,560
 ground.

1659
01:35:51,560 --> 01:35:54,560
 We then take these poses and filter them based on the ones

1660
01:35:54,560 --> 01:35:59,560
 that are reachable by the KUKA based on joint position

1661
01:35:59,560 --> 01:36:00,560
 and velocity constraints.

1662
01:36:00,560 --> 01:36:04,560
 And then we reorient these poses so that their z-axis

1663
01:36:04,560 --> 01:36:08,560
 aligns with the velocity vector of the ball.

1664
01:36:08,560 --> 01:36:12,560
 We then take the longest segment of reachable poses

1665
01:36:12,560 --> 01:36:15,560
 and use this as the region of poses where we catch the ball.

1666
01:36:15,560 --> 01:36:19,560
 Once we've determined this catching region,

1667
01:36:19,560 --> 01:36:24,560
 we re-sample time steps such that the arm arrives at the

1668
01:36:24,560 --> 01:36:27,560
 ball's positions before the ball gets there.

1669
01:36:27,560 --> 01:36:31,560
 Eventually we converge such that the ball and the gripper

1670
01:36:31,560 --> 01:36:34,560
 coincide at the same time at the same locations.

1671
01:36:34,560 --> 01:36:37,560
 It's during this matching period when we are able to close

1672
01:36:37,560 --> 01:36:39,560
 the gripper and catch the ball.

1673
01:36:39,560 --> 01:36:42,560
 And after that, we decelerate and come to a pause.

1674
01:36:42,560 --> 01:36:49,560
 Even though we have now re-sampled the times,

1675
01:36:49,560 --> 01:36:51,560
 we are still asking a lot from our system.

1676
01:36:51,560 --> 01:36:54,560
 Because, I mean, after all, our robot arm is trying to

1677
01:36:54,560 --> 01:36:57,560
 catch, like someone is using chopsticks, a sphere.

1678
01:36:57,560 --> 01:36:59,560
 That is really hard.

1679
01:36:59,560 --> 01:37:01,560
 So we have to get the most out of our system.

1680
01:37:01,560 --> 01:37:05,560
 For that, we have figured that we don't only need the desired

1681
01:37:05,560 --> 01:37:09,560
 state, like the joint positions and velocities,

1682
01:37:09,560 --> 01:37:12,560
 but also the desired acceleration to get the most out

1683
01:37:12,560 --> 01:37:14,560
 of the EWA inverse dynamics controller.

1684
01:37:14,560 --> 01:37:18,560
 For that, we have chosen to use a differential IK system

1685
01:37:18,560 --> 01:37:21,560
 that outputs the desired joint velocity so that whenever we

1686
01:37:21,560 --> 01:37:24,560
 integrate that or take the discrete derivatives,

1687
01:37:24,560 --> 01:37:27,560
 we get nice and smooth integrals and derivatives.

1688
01:37:27,560 --> 01:37:30,560
 To make this even better, we are making this closed loop

1689
01:37:30,560 --> 01:37:34,560
 so that we feed in the measured joint positions back into

1690
01:37:34,560 --> 01:37:37,560
 the differential IK system.

1691
01:37:37,560 --> 01:37:39,560
 The final component is defining the gripper controller

1692
01:37:39,560 --> 01:37:41,560
 and trajectory.

1693
01:37:41,560 --> 01:37:44,560
 We can then make the gripper start closing the ball once it

1694
01:37:44,560 --> 01:37:47,560
 matches its position and close before the arm reaches the ground.

1695
01:37:47,560 --> 01:37:49,560
 This, however, wasn't sufficient.

1696
01:37:49,560 --> 01:37:51,560
 We noticed that the gripper would sometimes close at the

1697
01:37:51,560 --> 01:37:53,560
 right time, but still wasn't able to catch.

1698
01:37:53,560 --> 01:37:56,560
 To fix this, we actually increased the KP gain to the

1699
01:37:56,560 --> 01:38:01,560
 upper limit so that it was able to grasp the ball much harder.

1700
01:38:01,560 --> 01:38:04,560
 On the next slide, I'll show the video of the gripper

1701
01:38:04,560 --> 01:38:07,560
 actually catching the ball in slow motion.

1702
01:38:07,560 --> 01:38:10,560
 Here we can see that the arm gets to its initial position

1703
01:38:10,560 --> 01:38:12,560
 and waits for the ball to fall a little bit more.

1704
01:38:12,560 --> 01:38:15,560
 Now it starts to follow and match the ball as it catches.

1705
01:38:15,560 --> 01:38:18,560
 On the next slide, you'll see a couple more examples in

1706
01:38:18,560 --> 01:38:20,560
 normal speed.

1707
01:38:20,560 --> 01:38:22,560
 On the left, you can see that the gripper seamlessly

1708
01:38:22,560 --> 01:38:23,560
 catches the ball.

1709
01:38:23,560 --> 01:38:25,560
 On the right, you can see the initial condition of the ball

1710
01:38:25,560 --> 01:38:27,560
 is far on the left, but it's still able to catch it on the

1711
01:38:27,560 --> 01:38:32,560
 right.

1712
01:38:32,560 --> 01:38:35,560
 >> So now that we have figured out how to catch very

1713
01:38:35,560 --> 01:38:38,560
 reliably and we have developed a nice stack to generalize

1714
01:38:38,560 --> 01:38:43,560
 that to a set of many different initial conditions, we're

1715
01:38:43,560 --> 01:38:45,560
 wondering how to throw.

1716
01:38:45,560 --> 01:38:47,560
 Whenever we played our video backwards, we noticed, huh,

1717
01:38:47,560 --> 01:38:50,560
 this kind of looks like throwing, right, even though we're

1718
01:38:50,560 --> 01:38:51,560
 doing catching.

1719
01:38:51,560 --> 01:38:54,560
 So we figured, hey, can't we just, you know, give our

1720
01:38:54,560 --> 01:38:57,560
 system a desired position and velocity where we want to

1721
01:38:57,560 --> 01:38:58,560
 throw to?

1722
01:38:58,560 --> 01:39:02,560
 Just reverse the velocity and plan for catching and then

1723
01:39:02,560 --> 01:39:06,560
 take that plan and reverse the poses and, you know, the

1724
01:39:06,560 --> 01:39:09,560
 times and just throw it along the trajectory.

1725
01:39:09,560 --> 01:39:11,560
 The answer is, yes, we can do that.

1726
01:39:11,560 --> 01:39:14,560
 Look at that throwback.

1727
01:39:14,560 --> 01:39:17,560
 And that also enables us now that we can do throwing and

1728
01:39:17,560 --> 01:39:20,560
 catching that we can pass the ball and throw it back and

1729
01:39:20,560 --> 01:39:26,560
 forth between two robots.

1730
01:39:26,560 --> 01:39:29,560
 >> One of the main limitations of our system is that we

1731
01:39:29,560 --> 01:39:32,560
 assume we have perfect pose and velocity estimation of the

1732
01:39:32,560 --> 01:39:34,560
 ball, which isn't feasible in real time.

1733
01:39:34,560 --> 01:39:37,560
 So in order to make this work in the real world, one of the

1734
01:39:37,560 --> 01:39:40,560
 things we'd have to do is build a perception module which

1735
01:39:40,560 --> 01:39:43,560
 does pose and velocity estimation and creates a closed

1736
01:39:43,560 --> 01:39:46,560
 loop trajectory update system.

1737
01:39:46,560 --> 01:39:50,560
 So now we are only able to catch uniform spheres and we'd

1738
01:39:50,560 --> 01:39:53,560
 like to increase our system to be able to catch any

1739
01:39:53,560 --> 01:39:56,560
 geometric shape with non-uniform densities as well.

1740
01:39:56,560 --> 01:39:59,560
 >> Further for the throwing, it is more relevant that we

1741
01:39:59,560 --> 01:40:02,560
 also take an account for non-linear dynamics.

1742
01:40:02,560 --> 01:40:05,560
 Like the contact force doesn't drag so that whenever we

1743
01:40:05,560 --> 01:40:08,560
 throw it back, we actually get it to the position where we

1744
01:40:08,560 --> 01:40:10,560
 want it to.

1745
01:40:10,560 --> 01:40:11,560
 Thank you.

1746
01:40:11,560 --> 01:40:14,560
 [ Applause ]

1747
01:40:14,560 --> 01:40:16,560
 >> Super good.

1748
01:40:16,560 --> 01:40:18,560
 Ria and David are here, I see.

1749
01:40:18,560 --> 01:40:21,560
 I love the drag, little aerodynamics coming in from the

1750
01:40:21,560 --> 01:40:23,560
 aero-astro.

1751
01:40:23,560 --> 01:40:25,560
 We're on borrowed time.

1752
01:40:25,560 --> 01:40:28,560
 We have a room overbooked so I'm going to power through.

1753
01:40:28,560 --> 01:40:33,560
 But please ask them if you -- this one, Brandon is not here

1754
01:40:33,560 --> 01:40:37,560
 so I'm going to advance.

1755
01:40:37,560 --> 01:40:39,560
 >> Hi, I'm Michael Fernandez.

1756
01:40:39,560 --> 01:40:42,560
 This is my final project, a robotic pipeline for the

1757
01:40:42,560 --> 01:40:45,560
 box and blocks test to be used in the evaluation of advanced

1758
01:40:45,560 --> 01:40:47,560
 robotic prosthetic arms.

1759
01:40:47,560 --> 01:40:50,560
 Mobility impairments significantly decrease someone's

1760
01:40:50,560 --> 01:40:52,560
 quality of life.

1761
01:40:52,560 --> 01:40:55,560
 They hamper their ability to do activities of daily living

1762
01:40:55,560 --> 01:40:57,560
 and lessen their independence.

1763
01:40:57,560 --> 01:41:00,560
 Amputees are one group of people who have mobility

1764
01:41:00,560 --> 01:41:02,560
 impairments.

1765
01:41:02,560 --> 01:41:05,560
 To analyze the severity of someone's impairment, various

1766
01:41:05,560 --> 01:41:07,560
 dexterity tests are used.

1767
01:41:07,560 --> 01:41:10,560
 One common test is the box and blocks test, which I will

1768
01:41:10,560 --> 01:41:11,560
 demonstrate here.

1769
01:41:11,560 --> 01:41:14,560
 In the box and blocks test, there are a number of blocks on

1770
01:41:14,560 --> 01:41:18,560
 one side of a barrier and then there's a goal region on the

1771
01:41:18,560 --> 01:41:20,560
 other side of the barrier.

1772
01:41:20,560 --> 01:41:23,560
 The objective of the person completing the task is to move

1773
01:41:23,560 --> 01:41:27,560
 the blocks one at a time from one side of the barrier to the

1774
01:41:27,560 --> 01:41:28,560
 other.

1775
01:41:28,560 --> 01:41:32,560
 Completing this task requires a high degree of dexterity and

1776
01:41:32,560 --> 01:41:37,560
 also a high cognitive load in planning how to move the blocks.

1777
01:41:37,560 --> 01:41:41,560
 So I decided to implement the box and blocks test in an

1778
01:41:41,560 --> 01:41:44,560
 automated fashion in Drake for the robotic manipulation final

1779
01:41:44,560 --> 01:41:45,560
 project.

1780
01:41:45,560 --> 01:41:47,560
 Now I will discuss how it went.

1781
01:41:47,560 --> 01:41:50,560
 The project consists of four modules, the simulation setup,

1782
01:41:50,560 --> 01:41:54,560
 the perception pipeline, a motion planner, and then the

1783
01:41:54,560 --> 01:41:56,560
 actual arm controller.

1784
01:41:56,560 --> 01:41:58,560
 Here we see the simulation setup.

1785
01:41:58,560 --> 01:42:01,560
 On the left is the random block positions above the starting

1786
01:42:01,560 --> 01:42:04,560
 region and on the right are the settled blocks with the

1787
01:42:04,560 --> 01:42:07,560
 prosthetic arm and the camera loaded in frame.

1788
01:42:07,560 --> 01:42:09,560
 This is the perception pipeline.

1789
01:42:09,560 --> 01:42:12,560
 We start with a depth image, which is masked to get the

1790
01:42:12,560 --> 01:42:15,560
 pixels the appropriate distance from the camera, then eroded to

1791
01:42:15,560 --> 01:42:18,560
 separate any blocks that might be touching before flood fill

1792
01:42:18,560 --> 01:42:21,560
 segmentation is used to identify each block uniquely.

1793
01:42:21,560 --> 01:42:24,560
 After segmentation, the center of mass of each block and the

1794
01:42:24,560 --> 01:42:28,560
 corners are found, which will be used in pose estimation.

1795
01:42:28,560 --> 01:42:31,560
 The key points and the depth camera intrinsics are used to

1796
01:42:31,560 --> 01:42:34,560
 project the positions of the blocks from the camera frame

1797
01:42:34,560 --> 01:42:36,560
 into poses in the world frame.

1798
01:42:36,560 --> 01:42:39,560
 The results at the end of the perception pipeline are shown

1799
01:42:39,560 --> 01:42:42,560
 as mesh cat triads in the image here.

1800
01:42:42,560 --> 01:42:46,560
 The block pose is used as a key frame for motion planning.

1801
01:42:46,560 --> 01:42:50,560
 The other frames include a starting position, pre and post

1802
01:42:50,560 --> 01:42:52,560
 pick and a drop location.

1803
01:42:52,560 --> 01:42:55,560
 The full trajectory is calculated using linear interpolation

1804
01:42:55,560 --> 01:42:57,560
 and quaternion slurp.

1805
01:42:57,560 --> 01:43:00,560
 The output of the motion planner is visualized here in 3D.

1806
01:43:00,560 --> 01:43:04,560
 Finally, we attempt to execute the motion plan using a joint

1807
01:43:04,560 --> 01:43:09,560
 level PID controller, such as is found on the Luke arm hardware.

1808
01:43:09,560 --> 01:43:12,560
 This part of the project did not work very well because the PID

1809
01:43:12,560 --> 01:43:14,560
 games are very difficult to tune.

1810
01:43:14,560 --> 01:43:17,560
 With more time, an inverse dynamics controller may have

1811
01:43:17,560 --> 01:43:20,560
 been deployed, but this would not be as accurate of a

1812
01:43:20,560 --> 01:43:23,560
 representation of the hardware in simulation.

1813
01:43:23,560 --> 01:43:26,560
 In this image, we see someone who uses the Luke arm in his

1814
01:43:26,560 --> 01:43:27,560
 day-to-day life.

1815
01:43:27,560 --> 01:43:30,560
 I hope that this simulation pipeline can increase the pace

1816
01:43:30,560 --> 01:43:34,560
 of research in prosthetic control to help us grant more

1817
01:43:34,560 --> 01:43:36,560
 independence to amputees.

1818
01:43:36,560 --> 01:43:38,560
 Thank you for listening.

1819
01:43:38,560 --> 01:43:41,560
 [Applause]

1820
01:43:41,560 --> 01:43:42,560
 >> I hope so, too.

1821
01:43:42,560 --> 01:43:48,560
 That's awesome.

1822
01:43:48,560 --> 01:43:51,560
 >> Good, good, good.

1823
01:43:51,560 --> 01:43:53,560
 You're hiding.

1824
01:43:53,560 --> 01:43:54,560
 >> Hi.

1825
01:43:54,560 --> 01:43:55,560
 I'm Miana Smith.

1826
01:43:55,560 --> 01:43:58,560
 I'm working on robotic assemblers for discrete lattice

1827
01:43:58,560 --> 01:43:59,560
 structures.

1828
01:43:59,560 --> 01:44:02,560
 To automate the construction of larger scale voxel structures,

1829
01:44:02,560 --> 01:44:05,560
 we want to use swarms of relatively simple robots that are

1830
01:44:05,560 --> 01:44:08,560
 able to traverse the structure and place new blocks of

1831
01:44:08,560 --> 01:44:09,560
 material.

1832
01:44:09,560 --> 01:44:12,560
 I wanted to use this class project as an opportunity to

1833
01:44:12,560 --> 01:44:15,560
 explore some variations of this type of system and methods for

1834
01:44:15,560 --> 01:44:18,560
 having robots collaboratively manipulate objects.

1835
01:44:18,560 --> 01:44:21,560
 I have a set of three modules, a wrist-style actuator, an

1836
01:44:21,560 --> 01:44:25,560
 elbow-style actuator, and an unactuated voxel.

1837
01:44:25,560 --> 01:44:28,560
 These can be assembled in Drake to form a variety of different

1838
01:44:28,560 --> 01:44:29,560
 robot configurations.

1839
01:44:29,560 --> 01:44:33,560
 I am using this five degree of freedom assembly as the basic

1840
01:44:33,560 --> 01:44:34,560
 robot.

1841
01:44:34,560 --> 01:44:37,560
 In the actual physical robotic system, the connection between

1842
01:44:37,560 --> 01:44:40,560
 the robot and the voxel structure will be made with some

1843
01:44:40,560 --> 01:44:41,560
 sort of on/off system.

1844
01:44:41,560 --> 01:44:44,560
 For this project, I am modeling these connections as welded

1845
01:44:44,560 --> 01:44:45,560
 joints in Drake.

1846
01:44:45,560 --> 01:44:48,560
 This means that the condition for a successful grab is just

1847
01:44:48,560 --> 01:44:51,560
 that the gripper face of the robot makes contact with the

1848
01:44:51,560 --> 01:44:52,560
 target gripping face.

1849
01:44:52,560 --> 01:44:55,560
 Let's look at a motivating scenario where the robot needs to

1850
01:44:55,560 --> 01:44:57,560
 collaborate to achieve the desired goal.

1851
01:44:57,560 --> 01:45:01,560
 I have two identical robots and a 1x2 voxel stack.

1852
01:45:01,560 --> 01:45:05,560
 The robots need to move the voxel stack to the other side of

1853
01:45:05,560 --> 01:45:08,560
 the divide, which is a wider gap than they can individually

1854
01:45:08,560 --> 01:45:09,560
 traverse.

1855
01:45:09,560 --> 01:45:12,560
 To do this, Robot 1 picks up the voxel and passes it to Robot

1856
01:45:12,560 --> 01:45:13,560
 2.

1857
01:45:13,560 --> 01:45:16,560
 They readjust their position so that Robot 1 can grab the

1858
01:45:16,560 --> 01:45:17,560
 opposite face of the voxel.

1859
01:45:17,560 --> 01:45:20,560
 Robot 2 releases from the ground and is swung to the other

1860
01:45:20,560 --> 01:45:21,560
 side of the divide.

1861
01:45:21,560 --> 01:45:25,560
 Robot 1 lets go of the voxel stack, and Robot 2 places it on

1862
01:45:25,560 --> 01:45:26,560
 the ground.

1863
01:45:26,560 --> 01:45:29,560
 The robots then reattach to each other, and Robot 1 swings

1864
01:45:29,560 --> 01:45:31,560
 Robot 2 back onto the original platform.

1865
01:45:31,560 --> 01:45:34,560
 In the course of the overall trajectory, joints are welded

1866
01:45:34,560 --> 01:45:35,560
 and un-welded a lot.

1867
01:45:35,560 --> 01:45:38,560
 To accommodate this, I split the overall motion of the robot

1868
01:45:38,560 --> 01:45:41,560
 into many subsections that are structured fairly similarly.

1869
01:45:41,560 --> 01:45:44,560
 Let's look at the first handoff as an example workflow.

1870
01:45:44,560 --> 01:45:47,560
 The multibody plant consists of the robots, which are welded

1871
01:45:47,560 --> 01:45:50,560
 to the floor, and the voxel stack that is welded to Robot

1872
01:45:50,560 --> 01:45:51,560
 1.

1873
01:45:51,560 --> 01:45:53,560
 The initial positions are set using the final positions from

1874
01:45:53,560 --> 01:45:55,560
 the simulation of the prior segment.

1875
01:45:55,560 --> 01:45:58,560
 Drake's inverse kinematics method is used to solve for the

1876
01:45:58,560 --> 01:46:01,560
 joint configuration that satisfies the given constraints

1877
01:46:01,560 --> 01:46:02,560
 and costs.

1878
01:46:02,560 --> 01:46:05,560
 This process for generating the initial and final positions is

1879
01:46:05,560 --> 01:46:07,560
 used for every motion segment, with occasional changes in

1880
01:46:07,560 --> 01:46:10,560
 formulation, usually in terms of using costs versus

1881
01:46:10,560 --> 01:46:11,560
 constraints.

1882
01:46:11,560 --> 01:46:13,560
 Next, I find a trajectory between these points.

1883
01:46:13,560 --> 01:46:16,560
 I tried out a few different strategies for this, but here I

1884
01:46:16,560 --> 01:46:19,560
 use direct collocation with the collision-free versions of

1885
01:46:19,560 --> 01:46:22,560
 the geometry, and enforce the initial and final states as

1886
01:46:22,560 --> 01:46:25,560
 constraints as well as joint limits, and use proxies for no

1887
01:46:25,560 --> 01:46:26,560
 collision constraints.

1888
01:46:26,560 --> 01:46:29,560
 I take the state trajectory from this, and feed it into the

1889
01:46:29,560 --> 01:46:32,560
 inverse dynamics PID controller, and then run the simulation

1890
01:46:32,560 --> 01:46:33,560
 forward.

1891
01:46:33,560 --> 01:46:36,560
 From there, we advance onto the next segment of the motion.

1892
01:46:36,560 --> 01:46:39,560
 Another formulation I used for creating the trajectory is

1893
01:46:39,560 --> 01:46:42,560
 running inverse kinematics on offset points from the target

1894
01:46:42,560 --> 01:46:44,560
 set of keyframes the robot then advances through.

1895
01:46:44,560 --> 01:46:47,560
 I would like to be able to adapt this project so that I can use

1896
01:46:47,560 --> 01:46:50,560
 it as a tool for generating trajectories in joint space that

1897
01:46:50,560 --> 01:46:52,560
 I can then run on a hardware version.

1898
01:46:52,560 --> 01:46:54,560
 Thank you for watching, and thanks to the course staff for

1899
01:46:54,560 --> 01:46:55,560
 a great semester.

1900
01:46:55,560 --> 01:46:58,560
 [Applause]

1901
01:46:58,560 --> 01:47:00,560
 >> That was super good.

1902
01:47:00,560 --> 01:47:01,560
 So much came together.

1903
01:47:01,560 --> 01:47:02,560
 That's awesome.

1904
01:47:02,560 --> 01:47:03,560
 Congratulations.

1905
01:47:03,560 --> 01:47:08,560
 That's great.

1906
01:47:08,560 --> 01:47:11,560
 >> Hi, my name is Daniel, and for this project, my colleague

1907
01:47:11,560 --> 01:47:14,560
 and I were exploring the idea of blind grasping using a low

1908
01:47:14,560 --> 01:47:15,560
 inertia arm.

1909
01:47:15,560 --> 01:47:18,560
 The main motivation being that excessive information can

1910
01:47:18,560 --> 01:47:21,560
 quickly become unreliable due to occlusion, particularly in

1911
01:47:21,560 --> 01:47:24,560
 clutter environments and poor lighting conditions.

1912
01:47:24,560 --> 01:47:27,560
 Additionally, forced torque sensors usually only work well

1913
01:47:27,560 --> 01:47:28,560
 in the quasi-static regime.

1914
01:47:28,560 --> 01:47:31,560
 So the main idea was what if we can use purpose of the

1915
01:47:31,560 --> 01:47:35,560
 information from a low inertia arm to find objects when these

1916
01:47:35,560 --> 01:47:38,560
 other sensor modalities are unreliable.

1917
01:47:38,560 --> 01:47:41,560
 On the system side, we create a robot model of the low inertia

1918
01:47:41,560 --> 01:47:44,560
 arm that we plan on using on our custom simulator, which models

1919
01:47:44,560 --> 01:47:47,560
 the dynamics for our system and visualizes the robot.

1920
01:47:47,560 --> 01:47:51,560
 Then we build a simple Cartesian space trajectory follower.

1921
01:47:51,560 --> 01:47:54,560
 However, since integration with hardware still requires a lot

1922
01:47:54,560 --> 01:47:57,560
 of engineering efforts, we instead output the joint

1923
01:47:57,560 --> 01:48:00,560
 trajectories directly into the hardware and add gravity

1924
01:48:00,560 --> 01:48:02,560
 compensation and track them online.

1925
01:48:02,560 --> 01:48:06,560
 Then we do some simple contact detection using the purpose of

1926
01:48:06,560 --> 01:48:08,560
 the information.

1927
01:48:08,560 --> 01:48:11,560
 We use a 6 degree freedom robotic arm with a simple 1 degree

1928
01:48:11,560 --> 01:48:14,560
 freedom gripper, which all uses low gear ratio actuators.

1929
01:48:14,560 --> 01:48:17,560
 And the arm in general is very light and most of the mass is

1930
01:48:17,560 --> 01:48:20,560
 concentrated at the base, making it very suitable for high impact

1931
01:48:20,560 --> 01:48:22,560
 and contact-rich situations.

1932
01:48:22,560 --> 01:48:25,560
 We built a simple trajectory tracker using the pseudo-inverse

1933
01:48:25,560 --> 01:48:27,560
 velocity controller that we learned in class, where we

1934
01:48:27,560 --> 01:48:30,560
 receive a list of waypoints, and we calculate the velocity in

1935
01:48:30,560 --> 01:48:33,560
 the world frame to reach the next waypoint, and then we do

1936
01:48:33,560 --> 01:48:35,560
 some low-level joint velocity control.

1937
01:48:35,560 --> 01:48:38,560
 Then we built a simple finite state machine in which we go to

1938
01:48:38,560 --> 01:48:40,560
 an arbitrary set of waypoints.

1939
01:48:40,560 --> 01:48:43,560
 We probe the environment with our gripper, and if contact is

1940
01:48:43,560 --> 01:48:46,560
 detected, which we only check in the hardware, then we execute

1941
01:48:46,560 --> 01:48:50,560
 a pre-computed local trajectory to try and grab that object.

1942
01:48:50,560 --> 01:48:52,560
 So now moving on to the hardware.

1943
01:48:52,560 --> 01:48:56,560
 On the left, you can see there's no gravity compensation.

1944
01:48:56,560 --> 01:49:00,560
 So the mass of the arm overcomes the friction of the actuator

1945
01:49:00,560 --> 01:49:02,560
 and falls to the ground when I let go.

1946
01:49:02,560 --> 01:49:05,560
 On the right, you see where gravity compensation is

1947
01:49:05,560 --> 01:49:06,560
 implemented.

1948
01:49:06,560 --> 01:49:09,560
 The motors are exerting a torque to make it seem like the arms

1949
01:49:09,560 --> 01:49:10,560
 are massless.

1950
01:49:10,560 --> 01:49:14,560
 This is helpful for demonstration purposes and for better

1951
01:49:14,560 --> 01:49:18,560
 trajectory following and position control.

1952
01:49:18,560 --> 01:49:22,560
 Now we are going to incorporate everything to run the trajectory

1953
01:49:22,560 --> 01:49:26,560
 output of the pseudo-inverse simulation.

1954
01:49:26,560 --> 01:49:30,560
 So on the right, we can see the robot, instead of snapping to

1955
01:49:30,560 --> 01:49:34,560
 the initial pose like it did in simulation, it takes a more

1956
01:49:34,560 --> 01:49:36,560
 conservative and safe trajectory.

1957
01:49:36,560 --> 01:49:40,560
 Then only after when it gets to that initial pose, it begins to

1958
01:49:40,560 --> 01:49:44,560
 start following the horizontal velocity across the workspace

1959
01:49:44,560 --> 01:49:51,560
 like you see in the simulation.

1960
01:49:51,560 --> 01:49:54,560
 For contact detection, the benefit of using low inertia

1961
01:49:54,560 --> 01:49:58,560
 actuator is the access to clean and sensitive current feedback

1962
01:49:58,560 --> 01:50:00,560
 in the environment.

1963
01:50:00,560 --> 01:50:03,560
 On the left, the gripper hits the 200-gram weight without

1964
01:50:03,560 --> 01:50:05,560
 stopping and knocks it over.

1965
01:50:05,560 --> 01:50:09,560
 On the right, by monitoring spikes in the current, we are

1966
01:50:09,560 --> 01:50:13,560
 able to detect and stop before knocking the same 200-gram weight

1967
01:50:13,560 --> 01:50:14,560
 over.

1968
01:50:14,560 --> 01:50:17,560
 Now it does the same for the 100-gram weight.

1969
01:50:17,560 --> 01:50:23,560
 However, it reaches its limit when it can only detect but ends

1970
01:50:23,560 --> 01:50:27,560
 up knocking over the 20-gram weight.

1971
01:50:27,560 --> 01:50:31,560
 Another feature that will be useful in the future is

1972
01:50:31,560 --> 01:50:33,560
 playback of human guided trajectories.

1973
01:50:33,560 --> 01:50:37,560
 On the right, we can see the robot does a great trajectory

1974
01:50:37,560 --> 01:50:40,560
 following of the human demonstration on the left.

1975
01:50:40,560 --> 01:50:44,560
 This could be very useful for authoring complex behaviors and

1976
01:50:44,560 --> 01:50:46,560
 learning from demonstrations.

1977
01:50:46,560 --> 01:50:50,560
 So we weren't able to fully integrate the contact detection

1978
01:50:50,560 --> 01:50:54,560
 into our pipeline because of many hardware bugs and having to

1979
01:50:54,560 --> 01:50:56,560
 build the pipelines from scratch.

1980
01:50:56,560 --> 01:51:00,560
 We do plan on exploring ideas like rapid pick and place,

1981
01:51:00,560 --> 01:51:03,560
 contact detection and clutter, and human robot safety.

1982
01:51:03,560 --> 01:51:05,560
 That's all for the presentation.

1983
01:51:05,560 --> 01:51:08,560
 Thank you, Russ, and all the TAs for an amazing class and

1984
01:51:08,560 --> 01:51:09,560
 amazing semester.

1985
01:51:09,560 --> 01:51:10,560
 [end]

1986
01:51:10,560 --> 01:51:11,560
 [end]

1987
01:51:11,560 --> 01:51:12,560
 [end]

1988
01:51:12,560 --> 01:51:13,560
 [end]

1989
01:51:14,560 --> 01:51:15,560
 [end]

1990
01:51:16,560 --> 01:51:17,560
 [end]

1991
01:51:17,560 --> 01:51:27,560
 [BLANK_AUDIO]

