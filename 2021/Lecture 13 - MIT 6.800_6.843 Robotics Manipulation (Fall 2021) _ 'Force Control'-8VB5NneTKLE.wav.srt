1
00:00:00,000 --> 00:00:03,640
 Hi, everybody.

2
00:00:03,640 --> 00:00:05,000
 OK.

3
00:00:05,000 --> 00:00:08,600
 Today we're back to-- I'm trying to give you kind of a-- not

4
00:00:08,600 --> 00:00:12,080
 a ping pong, but maybe a smoothly swinging pendulum

5
00:00:12,080 --> 00:00:18,080
 back and forth between deep networks and mechanics

6
00:00:18,080 --> 00:00:19,880
 and forces and stuff like this.

7
00:00:19,880 --> 00:00:23,300
 So today the pendulum swings back towards forces,

8
00:00:23,300 --> 00:00:26,960
 all the way to force control.

9
00:00:26,960 --> 00:00:29,920
 Let me just start quickly by giving you

10
00:00:29,920 --> 00:00:32,120
 an update on the projects on the administrative side.

11
00:00:32,120 --> 00:00:34,800
 So thank you for submitting your project proposals.

12
00:00:34,800 --> 00:00:36,440
 Those of you in 6.800, you're going

13
00:00:36,440 --> 00:00:39,520
 to do the peer review on Friday.

14
00:00:39,520 --> 00:00:43,160
 And we are trying to get our feedback to you this weekend

15
00:00:43,160 --> 00:00:43,880
 also.

16
00:00:43,880 --> 00:00:46,360
 So basically, take a breather.

17
00:00:46,360 --> 00:00:47,920
 Around the end of this weekend, you'll

18
00:00:47,920 --> 00:00:50,400
 get all of the feedback from your peers and from us.

19
00:00:50,400 --> 00:00:52,800
 And then a week from this Friday,

20
00:00:52,800 --> 00:00:56,240
 you'll be submitting the final project proposal.

21
00:00:56,240 --> 00:00:59,560
 So I hope you're continuing to think about it,

22
00:00:59,560 --> 00:01:02,360
 but no urgent items until we give you feedback

23
00:01:02,360 --> 00:01:05,360
 at the end of the week.

24
00:01:05,360 --> 00:01:08,360
 OK, so today is about force control.

25
00:01:08,360 --> 00:01:12,120
 Now, a lot of people today do manipulation

26
00:01:12,120 --> 00:01:14,480
 without thinking as much about force control.

27
00:01:14,480 --> 00:01:16,680
 And like I said, there's a lot of useful tasks

28
00:01:16,680 --> 00:01:19,480
 where really pick and place does a lot of work.

29
00:01:19,480 --> 00:01:22,080
 But it doesn't solve everything.

30
00:01:22,080 --> 00:01:26,160
 And even for the situations we've already given you,

31
00:01:26,160 --> 00:01:29,480
 there's a need, I think, for force control.

32
00:01:29,480 --> 00:01:32,360
 So I don't know if you saw the notes.

33
00:01:32,360 --> 00:01:35,320
 I sort of cracked myself up because I just randomly--

34
00:01:35,320 --> 00:01:38,240
 I generated like 10,000 random images.

35
00:01:38,240 --> 00:01:42,120
 And it just happens that random image number 9,964

36
00:01:42,120 --> 00:01:43,920
 or something like this looks like this.

37
00:01:43,920 --> 00:01:46,280
 And I just happened to have it open on my screen one day.

38
00:01:46,280 --> 00:01:48,520
 I was like, how the heck are you going

39
00:01:48,520 --> 00:01:50,800
 to pick that up, that Cheez-It box,

40
00:01:50,800 --> 00:01:53,560
 with your two-fingered gripper?

41
00:01:53,560 --> 00:01:56,240
 You can't do an enveloping grasp.

42
00:01:56,240 --> 00:01:59,400
 You'll never get an over-the-head,

43
00:01:59,400 --> 00:02:03,880
 antipodal grasp on the Cheez-It box.

44
00:02:03,880 --> 00:02:07,840
 And you can't get under it to pick it up antipodally.

45
00:02:07,840 --> 00:02:10,240
 You've got to do something more clever

46
00:02:10,240 --> 00:02:13,440
 if you want to get that Cheez-It box out of the bin.

47
00:02:13,440 --> 00:02:15,880
 So I kind of by accident had generated a bunch of examples

48
00:02:15,880 --> 00:02:17,520
 that I think you really need something

49
00:02:17,520 --> 00:02:20,800
 more than what we've given you so far to do.

50
00:02:20,800 --> 00:02:24,880
 So I asked my daughter, I said, OK, get the box--

51
00:02:24,880 --> 00:02:28,840
 this is the two-fingered gripper I had in my kitchen.

52
00:02:28,840 --> 00:02:30,840
 And she starts doing all this clever stuff

53
00:02:30,840 --> 00:02:36,000
 to get the pasta out of the bin.

54
00:02:36,000 --> 00:02:38,400
 And it's not what we've been doing before.

55
00:02:38,400 --> 00:02:40,600
 It's like using environmental contacts.

56
00:02:40,600 --> 00:02:43,720
 It's using very clever strategies,

57
00:02:43,720 --> 00:02:46,800
 multi-part strategies.

58
00:02:46,800 --> 00:02:47,720
 She's older now.

59
00:02:47,720 --> 00:02:50,120
 Well, she's in middle school now.

60
00:02:50,120 --> 00:02:53,960
 But that was cheating.

61
00:02:53,960 --> 00:02:55,240
 I said, no, no, put that back.

62
00:02:55,240 --> 00:02:56,960
 That didn't count.

63
00:02:56,960 --> 00:02:59,080
 But people are amazing.

64
00:02:59,080 --> 00:03:01,080
 We do things so naturally.

65
00:03:01,080 --> 00:03:03,800
 And I'll try to make that point a few times when we're

66
00:03:03,800 --> 00:03:05,200
 thinking about free body diagrams

67
00:03:05,200 --> 00:03:07,520
 and exactly what's going on.

68
00:03:07,520 --> 00:03:10,240
 Some of the things she did in there are actually amazing.

69
00:03:10,240 --> 00:03:12,720
 Writing the equations to make that happen with your robot

70
00:03:12,720 --> 00:03:13,400
 is amazing.

71
00:03:13,400 --> 00:03:14,720
 It would be hard.

72
00:03:14,720 --> 00:03:18,280
 So that's kind of what we're going to try to do today.

73
00:03:18,280 --> 00:03:21,240
 And I want to give a few good examples, I hope,

74
00:03:21,240 --> 00:03:24,040
 of what force control is and simple enough

75
00:03:24,040 --> 00:03:26,160
 that we can think through the equations,

76
00:03:26,160 --> 00:03:29,600
 think through the implications.

77
00:03:29,600 --> 00:03:36,720
 So there's some canonical examples of force control.

78
00:03:36,720 --> 00:03:37,220
 Right.

79
00:03:37,220 --> 00:03:49,560
 That was it.

80
00:03:49,560 --> 00:03:50,520
 That was my example.

81
00:03:50,520 --> 00:03:51,800
 Did you see that?

82
00:03:51,800 --> 00:03:54,080
 Right?

83
00:03:54,080 --> 00:03:56,040
 There's another good one.

84
00:03:56,040 --> 00:03:58,320
 This is actually really good.

85
00:03:58,320 --> 00:03:59,160
 That's really good.

86
00:03:59,160 --> 00:04:03,600
 If I didn't do force control there,

87
00:04:03,600 --> 00:04:05,360
 that just wouldn't have worked very well.

88
00:04:05,360 --> 00:04:08,640
 If I had my arm rigidly following some position

89
00:04:08,640 --> 00:04:11,040
 trajectory, you would have gotten something like this.

90
00:04:11,040 --> 00:04:16,800
 If I estimated the orientation of the board just a little bit

91
00:04:16,800 --> 00:04:18,800
 wrong, it would have looked like this.

92
00:04:18,800 --> 00:04:21,180
 And if you've ever tried to write something with a robot,

93
00:04:21,180 --> 00:04:23,080
 you've seen things like that probably.

94
00:04:23,080 --> 00:04:26,320
 Or worse, you'd have like broken chalk on the bottom of the--

95
00:04:26,320 --> 00:04:28,240
 because it went a little bit into the board.

96
00:04:28,240 --> 00:04:32,480
 And same thing for the force control of a racing.

97
00:04:32,480 --> 00:04:34,440
 You're really doing something pretty subtle

98
00:04:34,440 --> 00:04:36,760
 about sort of pushing into the board

99
00:04:36,760 --> 00:04:38,240
 and regulating those forces.

100
00:04:38,240 --> 00:04:42,560
 Now, whether we're regulating them to the micro-Newton level,

101
00:04:42,560 --> 00:04:43,760
 probably not.

102
00:04:43,760 --> 00:04:45,440
 It can be fairly approximate.

103
00:04:45,440 --> 00:04:47,100
 But I think there's some level of trying

104
00:04:47,100 --> 00:04:51,000
 to sort of regulate forces that really does matter.

105
00:04:51,000 --> 00:04:54,320
 So more seriously, if I think about force control

106
00:04:54,320 --> 00:05:01,720
 versus position control, I don't think

107
00:05:01,720 --> 00:05:03,840
 it's strictly one or the other.

108
00:05:03,840 --> 00:05:06,400
 So versus is kind of a straw man.

109
00:05:06,400 --> 00:05:11,800
 But the impression I want-- so sometimes you

110
00:05:11,800 --> 00:05:13,680
 will hear people talk about force control

111
00:05:13,680 --> 00:05:16,240
 as in it's just this completely different thing.

112
00:05:16,240 --> 00:05:18,400
 And it has these completely different concepts

113
00:05:18,400 --> 00:05:20,400
 about impedance and admittance and other things

114
00:05:20,400 --> 00:05:24,160
 that you'll understand a bit today.

115
00:05:24,160 --> 00:05:26,760
 And that it's just completely divorced from position control.

116
00:05:26,760 --> 00:05:30,000
 And I've never liked that.

117
00:05:30,000 --> 00:05:34,880
 You can take a low level force controller

118
00:05:34,880 --> 00:05:38,360
 and basically wrap it up and do position control

119
00:05:38,360 --> 00:05:40,320
 through your force control loop.

120
00:05:40,320 --> 00:05:42,480
 And if you have a lower level position controller,

121
00:05:42,480 --> 00:05:46,200
 you can act like a force controller on top of it.

122
00:05:46,200 --> 00:05:49,840
 It's a matter of what do you want your core controller

123
00:05:49,840 --> 00:05:52,640
 to be, the thing that's running at the highest bandwidth

124
00:05:52,640 --> 00:05:53,920
 down at your robot.

125
00:05:53,920 --> 00:05:57,320
 What is your robot trying to act like given the tightest

126
00:05:57,320 --> 00:06:03,720
 loop between your controller, your amp, and your physics.

127
00:06:03,720 --> 00:06:06,240
 And there are times where choosing

128
00:06:06,240 --> 00:06:09,360
 to act like a force down at the lower level,

129
00:06:09,360 --> 00:06:12,560
 to close a loop on a force sensor,

130
00:06:12,560 --> 00:06:17,440
 can be a better choice than trying to be like a position.

131
00:06:17,440 --> 00:06:19,800
 And there are some tasks at the higher level

132
00:06:19,800 --> 00:06:22,600
 where it's more natural to describe

133
00:06:22,600 --> 00:06:25,480
 the controller in terms of desired forces

134
00:06:25,480 --> 00:06:26,980
 than in terms of desired positions.

135
00:06:26,980 --> 00:06:29,240
 You can get more robust performance

136
00:06:29,240 --> 00:06:32,400
 without worrying about the exact location of the board

137
00:06:32,400 --> 00:06:35,280
 by specifying your task with force commands instead

138
00:06:35,280 --> 00:06:37,400
 of with position commands.

139
00:06:37,400 --> 00:06:39,520
 And we'll see ways that you can walk back and forth

140
00:06:39,520 --> 00:06:41,200
 between them.

141
00:06:41,200 --> 00:06:45,520
 But it's really-- it's an addition.

142
00:06:45,520 --> 00:06:47,160
 It plays nicely with position control.

143
00:06:47,160 --> 00:06:50,600
 And we'll see ways that they can all be put together.

144
00:06:53,440 --> 00:06:57,900
 So the organization-- we've got two lectures on control,

145
00:06:57,900 --> 00:07:00,420
 if you will, of your robots.

146
00:07:00,420 --> 00:07:03,820
 Today, if you'll permit me, I'm going to basically assume

147
00:07:03,820 --> 00:07:06,740
 the robot is a point.

148
00:07:06,740 --> 00:07:09,380
 So we're going to-- a point finger, assume a spherical

149
00:07:09,380 --> 00:07:11,700
 robot.

150
00:07:11,700 --> 00:07:13,020
 Actually, spheres are too hard.

151
00:07:13,020 --> 00:07:15,940
 We're the point robot.

152
00:07:15,940 --> 00:07:18,340
 And then we're going to think of that as,

153
00:07:18,340 --> 00:07:19,780
 what if I could control perfectly

154
00:07:19,780 --> 00:07:21,220
 the end effector of my robot?

155
00:07:21,220 --> 00:07:22,740
 And the end effector is a point.

156
00:07:22,740 --> 00:07:25,240
 And we'll add the robot back in on Thursday

157
00:07:25,240 --> 00:07:27,940
 and all the details of making that abstraction that we're

158
00:07:27,940 --> 00:07:31,000
 trying to create at the point, at the contact point,

159
00:07:31,000 --> 00:07:33,260
 be good for the robot.

160
00:07:33,260 --> 00:07:38,300
 So today, we'll do the point finger approximation.

161
00:07:51,560 --> 00:07:55,240
 And I basically like to use this sort of flipping up

162
00:07:55,240 --> 00:07:57,200
 the Cheez-It box as a running example.

163
00:07:57,200 --> 00:07:59,480
 I think that there's a lot we can

164
00:07:59,480 --> 00:08:01,360
 do on that pretty simple problem.

165
00:08:01,360 --> 00:08:03,880
 So I'm going to show you graphics and draw

166
00:08:03,880 --> 00:08:08,360
 on the board this basic problem.

167
00:08:08,360 --> 00:08:09,520
 I've got a box.

168
00:08:09,520 --> 00:08:12,560
 Maybe I'll make it even pink since I've got enough colors.

169
00:08:12,560 --> 00:08:14,920
 And that would make sense.

170
00:08:14,920 --> 00:08:19,000
 I've got my Cheez-It box.

171
00:08:19,000 --> 00:08:21,160
 We're going to think a bit about the way

172
00:08:21,160 --> 00:08:23,680
 that the-- we've already talked a bit about the way

173
00:08:23,680 --> 00:08:25,360
 the forces of the Cheez-It box can

174
00:08:25,360 --> 00:08:27,160
 be modeled with the ground.

175
00:08:27,160 --> 00:08:31,000
 If I'm being careful, which I was in my examples,

176
00:08:31,000 --> 00:08:33,440
 I put some specific little contact points here just

177
00:08:33,440 --> 00:08:36,280
 to make sure that when I'm running the simulation,

178
00:08:36,280 --> 00:08:38,560
 the solver doesn't have to arbitrarily pick some place

179
00:08:38,560 --> 00:08:41,440
 on the square to choose its forces.

180
00:08:41,440 --> 00:08:43,640
 It's going to have a force here that it computes

181
00:08:43,640 --> 00:08:45,840
 and a force here that it computes.

182
00:08:45,840 --> 00:08:47,800
 And those forces are going to have some friction

183
00:08:47,800 --> 00:08:55,920
 cone that are a response to when the thing's at rest.

184
00:08:55,920 --> 00:08:58,760
 I've got gravity pulling down on this.

185
00:08:58,760 --> 00:09:01,680
 And those forces are going to balance.

186
00:09:01,680 --> 00:09:04,680
 There's actually-- everything I'm simulating is in 3D.

187
00:09:04,680 --> 00:09:06,880
 I'm just drawing it in 2D.

188
00:09:06,880 --> 00:09:09,200
 And then we're going to add in our--

189
00:09:09,200 --> 00:09:11,480
 let's make it blue here--

190
00:09:11,480 --> 00:09:12,360
 our point finger.

191
00:09:12,360 --> 00:09:12,860
 OK?

192
00:09:12,860 --> 00:09:24,840
 And the task is to do something like my daughter did there.

193
00:09:24,840 --> 00:09:26,960
 Let's try to flip up the Cheez-It box

194
00:09:26,960 --> 00:09:30,960
 so that we can come in with our two-finger gripper next.

195
00:09:30,960 --> 00:09:35,160
 And that's a task that I think is natively described naturally

196
00:09:35,160 --> 00:09:36,200
 in the language of forces.

197
00:09:37,200 --> 00:09:38,180
 [SCOFFS]

198
00:09:38,180 --> 00:09:45,560
 I'll just give one more example because it's a good one,

199
00:09:45,560 --> 00:09:46,060
 I think.

200
00:09:46,060 --> 00:09:49,200
 But this is another good example of something

201
00:09:49,200 --> 00:09:50,560
 that's native in forces.

202
00:09:50,560 --> 00:09:51,060
 OK?

203
00:09:51,060 --> 00:09:54,440
 So you want to push the book to the edge of the table.

204
00:09:54,440 --> 00:09:56,080
 If you can rely on the assumption

205
00:09:56,080 --> 00:09:59,800
 that the forces-- the friction between the hand and the book

206
00:09:59,800 --> 00:10:03,300
 is larger than the forces between the book and the table,

207
00:10:03,300 --> 00:10:05,760
 then that's a kind of strategy where you need to put yourself

208
00:10:05,760 --> 00:10:07,680
 in a regime where you're not pushing too hard,

209
00:10:07,680 --> 00:10:10,080
 such that the book sticks on the table,

210
00:10:10,080 --> 00:10:12,520
 but you're not pushing too softly, that you're

211
00:10:12,520 --> 00:10:15,200
 in this nice regime where moving the hand

212
00:10:15,200 --> 00:10:16,440
 moves the book on the table.

213
00:10:16,440 --> 00:10:17,600
 OK?

214
00:10:17,600 --> 00:10:19,360
 That's another example of how you pick up

215
00:10:19,360 --> 00:10:23,520
 one of these big things, move it to the side.

216
00:10:23,520 --> 00:10:24,000
 All right.

217
00:10:24,000 --> 00:10:28,240
 So this is roughly the regime that we're going to be in here.

218
00:10:28,240 --> 00:10:34,880
 Point finger, contact forces between the box and the sphere,

219
00:10:34,880 --> 00:10:35,360
 right?

220
00:10:35,360 --> 00:10:39,000
 Again, with the sphere, the small point finger,

221
00:10:39,000 --> 00:10:41,080
 then I know exactly where my contact forces are.

222
00:10:41,080 --> 00:10:44,240
 I don't have to worry about all the complicated geometry.

223
00:10:44,240 --> 00:10:46,180
 And once I've tilted up, I know exactly

224
00:10:46,180 --> 00:10:48,880
 that I'm going to have contact forces on that back corner.

225
00:10:48,880 --> 00:10:49,960
 OK?

226
00:10:49,960 --> 00:10:53,160
 So let's think about the way to work through sort of that.

227
00:10:53,160 --> 00:11:12,520
 so the entire configuration space

228
00:11:12,520 --> 00:11:16,960
 of this system, my Q vector, right?

229
00:11:16,960 --> 00:11:20,360
 It has elements for both the sphere geometry,

230
00:11:20,360 --> 00:11:23,080
 you know, the finger, and it has elements for the Cheez-It box,

231
00:11:23,080 --> 00:11:24,200
 right?

232
00:11:24,200 --> 00:11:28,440
 Since the sphere is-- we're modeling as a point here,

233
00:11:28,440 --> 00:11:30,600
 not worrying about its rotation at all,

234
00:11:30,600 --> 00:11:34,960
 I'll just write x double dot of the finger, z double dot--

235
00:11:34,960 --> 00:11:39,400
 sorry, just writing the cubes first-- z of the finger.

236
00:11:39,400 --> 00:11:45,200
 And then I've got x of the box, z of the box,

237
00:11:45,200 --> 00:11:48,040
 theta of the box, OK?

238
00:11:48,040 --> 00:11:49,640
 Because I've pinned the box.

239
00:11:49,640 --> 00:11:52,080
 I added an artificial joint just so it can only

240
00:11:52,080 --> 00:11:54,920
 move in 2D, a planar joint, OK?

241
00:11:54,920 --> 00:12:00,760
 So if I were to write-- the simulator

242
00:12:00,760 --> 00:12:03,680
 is implementing these equations we've

243
00:12:03,680 --> 00:12:05,440
 showed you many times before.

244
00:12:05,440 --> 00:12:27,800
 All right, we've got some equations of motion.

245
00:12:27,800 --> 00:12:31,040
 Some of them are due to the finger.

246
00:12:31,040 --> 00:12:33,160
 Some of them are due to the box.

247
00:12:33,160 --> 00:12:35,600
 In these equations, if you've come

248
00:12:35,600 --> 00:12:38,040
 to be a little bit more comfortable with them, right?

249
00:12:38,040 --> 00:12:39,920
 If you were to write out these equations,

250
00:12:39,920 --> 00:12:42,160
 you would see that this is-- there's

251
00:12:42,160 --> 00:12:44,200
 two systems here that are only connected

252
00:12:44,200 --> 00:12:45,840
 through the contact forces.

253
00:12:45,840 --> 00:12:49,400
 So you would see the mass matrix, for instance,

254
00:12:49,400 --> 00:12:55,480
 would have entries here for the finger,

255
00:12:55,480 --> 00:12:58,240
 entries down here for the box.

256
00:12:58,240 --> 00:13:01,000
 They don't have any coupling terms.

257
00:13:01,000 --> 00:13:05,160
 They're only coupled through the forces, right?

258
00:13:05,160 --> 00:13:09,800
 If they're not touching, wiggling the finger around

259
00:13:09,800 --> 00:13:11,120
 doesn't do anything to the box.

260
00:13:11,120 --> 00:13:14,640
 It doesn't cause any accelerations on the box.

261
00:13:14,640 --> 00:13:21,480
 OK, so let's just write the top two equations out, OK?

262
00:13:21,480 --> 00:13:25,280
 So I'll do-- there's also-- there's a mass of the finger,

263
00:13:25,280 --> 00:13:27,080
 and there's a mass of the box, OK?

264
00:13:27,080 --> 00:13:30,800
 But I'll try to remember to put my subscripts in there.

265
00:13:30,800 --> 00:13:35,920
 OK, so it's chosen intentionally to be particularly simple.

266
00:13:35,920 --> 00:13:38,600
 I'm going to assume that I have this perfect torque

267
00:13:38,600 --> 00:13:42,240
 source or force source on the coordinates of the box--

268
00:13:42,240 --> 00:13:43,920
 or of the finger, rather.

269
00:13:43,920 --> 00:13:51,000
 So I can basically just do this plus any contact forces.

270
00:13:51,000 --> 00:13:53,440
 There's only one contact, so I'll just leave it like this.

271
00:13:53,440 --> 00:13:55,000
 And it's only the x component here.

272
00:13:55,440 --> 00:14:02,400
 OK, so this is just the first row of this, OK,

273
00:14:02,400 --> 00:14:04,440
 in the x-coordinate.

274
00:14:04,440 --> 00:14:07,120
 It just happens that gravity doesn't affect me

275
00:14:07,120 --> 00:14:10,240
 at all in the x direction, so this term didn't contribute.

276
00:14:10,240 --> 00:14:13,920
 It's a point mass, so there's no Coriolis terms, OK?

277
00:14:13,920 --> 00:14:17,720
 And the Jacobian is the identity matrix, right?

278
00:14:17,720 --> 00:14:19,760
 So it's intentionally chosen to-- and of course,

279
00:14:19,760 --> 00:14:23,840
 you know this is just a free body, f equals ma, right?

280
00:14:23,840 --> 00:14:26,720
 But it fits-- it's just the first row of that.

281
00:14:26,720 --> 00:14:29,680
 OK, and similarly, mz--

282
00:14:29,680 --> 00:14:42,960
 sorry, mf z double dot f is going to be uz z.

283
00:14:42,960 --> 00:14:47,480
 And then I've got minus mg.

284
00:14:47,480 --> 00:14:52,520
 I do have gravity terms there, OK?

285
00:14:52,520 --> 00:14:57,480
 And the way I've parametrized f here, since f is positive here,

286
00:14:57,480 --> 00:15:00,000
 it is actually the way this arrow is looking here.

287
00:15:00,000 --> 00:15:02,440
 So it's-- although that's only because the arrow is

288
00:15:02,440 --> 00:15:04,560
 hidden inside there, but this direction.

289
00:15:04,560 --> 00:15:07,120
 So the force here, the coordinate frame,

290
00:15:07,120 --> 00:15:09,480
 is that positive forces are the box--

291
00:15:09,480 --> 00:15:12,400
 it's the box pushing on the sphere, OK?

292
00:15:12,400 --> 00:15:21,160
 All right, so our goal is going to be

293
00:15:21,160 --> 00:15:24,920
 to come up with a strategy to flip up the box,

294
00:15:24,920 --> 00:15:26,680
 reasoning about forces, reasoning

295
00:15:26,680 --> 00:15:28,360
 about the contact forces.

296
00:15:28,360 --> 00:15:30,440
 And we're writing a controller, right,

297
00:15:30,440 --> 00:15:34,760
 which means we're going to write some equations to be implemented

298
00:15:34,760 --> 00:15:38,920
 as u right here, or in the system's view.

299
00:15:38,920 --> 00:15:45,560
 Got my plant here with u coming in.

300
00:15:45,560 --> 00:15:48,800
 These equations are inside the plant, right?

301
00:15:48,800 --> 00:15:54,560
 And I'm going to write a force controller here, which

302
00:15:54,560 --> 00:16:01,240
 is going to take in q and q dot, potentially.

303
00:16:01,240 --> 00:16:03,080
 It might take in other things.

304
00:16:03,080 --> 00:16:05,200
 For instance, it could take in a desired force.

305
00:16:05,200 --> 00:16:15,280
 And then there's a really interesting question here

306
00:16:15,280 --> 00:16:17,040
 of what else do you give it, OK?

307
00:16:17,040 --> 00:16:19,840
 So these are sort of-- you'd expect

308
00:16:19,840 --> 00:16:22,960
 to know your position and velocity, x and z,

309
00:16:22,960 --> 00:16:27,320
 of the finger, so that's fine to give this, OK?

310
00:16:27,320 --> 00:16:29,120
 You could give it the box or not.

311
00:16:29,120 --> 00:16:31,080
 If we're only doing force control on the finger,

312
00:16:31,080 --> 00:16:33,520
 you can actually just have this be the subset

313
00:16:33,520 --> 00:16:34,880
 that is the finger.

314
00:16:34,880 --> 00:16:36,800
 But there's a big question of what else do you

315
00:16:36,800 --> 00:16:38,400
 hand your force controller, OK?

316
00:16:38,400 --> 00:16:41,320
 And some natural choices would be a force sensor.

317
00:16:45,440 --> 00:16:48,400
 And if you see a lot of robots that

318
00:16:48,400 --> 00:16:51,400
 are trying to do force control type tasks,

319
00:16:51,400 --> 00:16:54,480
 have some interesting arm, but they put a force torque

320
00:16:54,480 --> 00:16:56,520
 sensor at the wrist, right?

321
00:16:56,520 --> 00:16:59,880
 So they're only touching the world and controlling forces

322
00:16:59,880 --> 00:17:03,040
 through a specific force torque sensor.

323
00:17:03,040 --> 00:17:04,640
 If you don't have a force torque sensor,

324
00:17:04,640 --> 00:17:07,960
 you can potentially do some of the same work

325
00:17:07,960 --> 00:17:09,320
 by giving accelerations.

326
00:17:13,720 --> 00:17:14,720
 You know, q double dot.

327
00:17:14,720 --> 00:17:23,240
 That's always a little bit risky business,

328
00:17:23,240 --> 00:17:25,560
 because we've said it a few times,

329
00:17:25,560 --> 00:17:28,200
 but you kind of expect to be able to measure your joint

330
00:17:28,200 --> 00:17:28,700
 angles.

331
00:17:28,700 --> 00:17:31,720
 You kind of expect to be able to measure your joint velocities.

332
00:17:31,720 --> 00:17:33,720
 When you start trying to get joint accelerations,

333
00:17:33,720 --> 00:17:36,120
 that tends to be noisy signals, unless you're

334
00:17:36,120 --> 00:17:38,480
 measuring them very directly.

335
00:17:38,480 --> 00:17:43,680
 You don't try to inject too noisy of signals into here.

336
00:17:43,680 --> 00:17:44,320
 Some people do it.

337
00:17:44,320 --> 00:17:50,360
 You can also do a lot of interesting things

338
00:17:50,360 --> 00:17:51,680
 if you assume--

339
00:17:51,680 --> 00:17:57,000
 if you are in the mode of trying to think about it

340
00:17:57,000 --> 00:17:58,460
 as you're putting in accelerations,

341
00:17:58,460 --> 00:18:00,420
 but I'm not going to measure the accelerations.

342
00:18:00,420 --> 00:18:04,640
 I'm going to assume everything's moving pretty slowly

343
00:18:04,640 --> 00:18:07,280
 and that accelerations are effectively zero,

344
00:18:07,280 --> 00:18:09,960
 that the any terms that are being contributed

345
00:18:09,960 --> 00:18:14,200
 by the inertial dynamics are small compared

346
00:18:14,200 --> 00:18:18,560
 to the contact forces and my applied forces.

347
00:18:18,560 --> 00:18:21,120
 So there's also an idea of trying

348
00:18:21,120 --> 00:18:31,440
 to do quasi-static approximations, which

349
00:18:31,440 --> 00:18:36,440
 I'll use to start, because it's easier, which

350
00:18:36,440 --> 00:18:52,120
 is-- this is a little less precise than I'd like.

351
00:18:52,120 --> 00:18:54,000
 Maybe I should be a little bit--

352
00:18:54,000 --> 00:19:05,960
 actually, that inertial terms are small relative

353
00:19:05,960 --> 00:19:13,520
 to the other terms, to gravity, fc, and u.

354
00:19:19,520 --> 00:19:22,680
 What really matters is the mass times acceleration.

355
00:19:22,680 --> 00:19:30,160
 So let's say our goal of our force controller

356
00:19:30,160 --> 00:19:33,680
 is to take a desired force in, command a u

357
00:19:33,680 --> 00:19:35,560
 to achieve a desired force out.

358
00:19:35,560 --> 00:19:41,600
 That's a pretty-- algebraically, we

359
00:19:41,600 --> 00:19:43,320
 can do something that looks pretty natural

360
00:19:43,320 --> 00:19:45,520
 and see if we decide it makes sense.

361
00:19:45,520 --> 00:19:46,020
 OK.

362
00:19:46,020 --> 00:19:53,680
 If we assume that our accelerations are small

363
00:19:53,680 --> 00:19:57,640
 and those terms are small, then a pretty reasonable strategy

364
00:19:57,640 --> 00:20:06,000
 would be to say, I'm going to just command in the x command,

365
00:20:06,000 --> 00:20:08,800
 in my x force, something that looks like that.

366
00:20:08,800 --> 00:20:17,240
 And I'll command in my z, plus mg.

367
00:20:17,240 --> 00:20:28,800
 So if you were to assume these terms are small,

368
00:20:28,800 --> 00:20:31,200
 stick those into the equation, not think at all about

369
00:20:31,200 --> 00:20:33,760
 where force is coming from, you'd be pretty happy.

370
00:20:33,760 --> 00:20:35,920
 You could write down something that says,

371
00:20:35,920 --> 00:20:39,200
 well, force of contact is going to look

372
00:20:39,200 --> 00:20:42,520
 like force contact desired.

373
00:20:42,520 --> 00:20:45,640
 Now, of course, you can't just make force out of nowhere.

374
00:20:45,640 --> 00:20:47,160
 Those force of contact are actually

375
00:20:47,160 --> 00:20:48,640
 coming from the interaction forces.

376
00:20:48,640 --> 00:20:50,100
 The physics engine's going to solve

377
00:20:50,100 --> 00:20:53,400
 for some complicated relation to decide that.

378
00:20:53,400 --> 00:20:55,560
 But let's see what happens when we do this.

379
00:20:55,560 --> 00:20:56,060
 OK.

380
00:20:56,060 --> 00:21:02,480
 So let's think about the case of a constant force.

381
00:21:02,480 --> 00:21:15,040
 So let's say that fc of d, I'll just

382
00:21:15,040 --> 00:21:20,320
 let it be 0 in the z direction, and some constant,

383
00:21:20,320 --> 00:21:27,800
 some positive constant greater than 0 in the x direction.

384
00:21:27,800 --> 00:21:31,640
 And let's say I start off in my configuration--

385
00:21:31,640 --> 00:21:32,640
 yeah?

386
00:21:32,640 --> 00:21:34,880
 [INAUDIBLE]

387
00:21:34,880 --> 00:21:36,600
 I'm going to-- actually, that's exactly what

388
00:21:36,600 --> 00:21:37,800
 I'm asking about right now.

389
00:21:37,800 --> 00:21:39,260
 So the question was, are we assuming

390
00:21:39,260 --> 00:21:40,420
 breaking or breaking contact?

391
00:21:40,420 --> 00:21:43,040
 So great question.

392
00:21:43,040 --> 00:21:45,600
 Let's suss that out.

393
00:21:45,600 --> 00:21:56,680
 So let's start away from contact and just apply this controller.

394
00:21:56,680 --> 00:22:02,400
 So if I use this as my controller,

395
00:22:02,400 --> 00:22:07,760
 this would be my first instance of a direct force control,

396
00:22:07,760 --> 00:22:11,320
 where I'm directly trying to command a force.

397
00:22:11,320 --> 00:22:21,000
 What's going to happen?

398
00:22:21,000 --> 00:22:23,640
 So if fc desired, my desired-- I'm

399
00:22:23,640 --> 00:22:27,760
 hoping that I'm going to get a force here,

400
00:22:27,760 --> 00:22:29,480
 using this equation, which made up--

401
00:22:29,480 --> 00:22:32,480
 and just assumed I could get arbitrary forces algebraically.

402
00:22:32,480 --> 00:22:36,800
 Uz is going to be 0--

403
00:22:36,800 --> 00:22:40,480
 it's going to be mg, so the total acceleration

404
00:22:40,480 --> 00:22:41,680
 is going to be 0.

405
00:22:41,680 --> 00:22:50,360
 I'm going to get z double dot equals 0.

406
00:22:50,360 --> 00:22:55,520
 And x double dot, if I stick it all in,

407
00:22:55,520 --> 00:22:59,720
 in actuality, the contact forces are 0.

408
00:22:59,720 --> 00:23:01,480
 So I'm commanding as if I expect it

409
00:23:01,480 --> 00:23:03,680
 to be a gulp against a wall or something like this,

410
00:23:03,680 --> 00:23:07,440
 but I'm not actually touching it at all.

411
00:23:07,440 --> 00:23:10,040
 The interesting thing is that it'll actually--

412
00:23:10,040 --> 00:23:12,320
 in order to try to get a force, it's

413
00:23:12,320 --> 00:23:14,760
 actually going to push me this way.

414
00:23:14,760 --> 00:23:17,800
 I'm going to apply a force this way.

415
00:23:17,800 --> 00:23:20,560
 So when I'm off the wall here, I'll

416
00:23:20,560 --> 00:23:23,560
 get something like mx double dot equals a constant.

417
00:23:23,560 --> 00:23:30,680
 That's just putting this into those equations

418
00:23:30,680 --> 00:23:31,760
 and seeing what comes out.

419
00:23:31,760 --> 00:23:36,600
 So Charles asked the question, so what

420
00:23:36,600 --> 00:23:38,440
 happens if I'm off contact and I'm

421
00:23:38,440 --> 00:23:41,880
 trying to do force control?

422
00:23:41,880 --> 00:23:44,800
 In many cases-- this is a particularly simple example--

423
00:23:44,800 --> 00:23:47,400
 in many cases, if you command a force

424
00:23:47,400 --> 00:23:50,560
 and you're not actually making contact,

425
00:23:50,560 --> 00:23:53,520
 your controller is sort of unjustified,

426
00:23:53,520 --> 00:23:55,840
 but it tends to do the right-- you can analyze it,

427
00:23:55,840 --> 00:23:59,600
 and it tends to often do the right thing.

428
00:23:59,600 --> 00:24:02,200
 So this will actually, when I'm off contact,

429
00:24:02,200 --> 00:24:05,240
 will drive me into contact.

430
00:24:05,240 --> 00:24:09,920
 Once I'm in contact, then this is a more reasonable attempt

431
00:24:09,920 --> 00:24:11,560
 to try to regulate the contact force.

432
00:24:11,560 --> 00:24:17,080
 That's a super important point.

433
00:24:17,080 --> 00:24:22,720
 So this is, I think, a hallmark of force control.

434
00:24:22,720 --> 00:24:26,040
 So I worked on walking robots for many years,

435
00:24:26,040 --> 00:24:32,200
 and oftentimes, you would program your legs,

436
00:24:32,200 --> 00:24:35,840
 the robot's legs, to be in position control mode

437
00:24:35,840 --> 00:24:38,720
 when you're swinging, because you'd

438
00:24:38,720 --> 00:24:41,760
 like to get your foot to be at whatever foothold you've

439
00:24:41,760 --> 00:24:42,760
 been thinking about.

440
00:24:42,760 --> 00:24:45,600
 So maybe when you're in swing, you actually

441
00:24:45,600 --> 00:24:47,880
 put yourself roughly in a position control mode.

442
00:24:47,880 --> 00:24:51,120
 But then when you go to step, and when you're in stance,

443
00:24:51,120 --> 00:24:52,700
 you're often in a force control mode,

444
00:24:52,700 --> 00:24:55,360
 but especially that first step.

445
00:24:55,360 --> 00:24:57,560
 Because what happens is if you have any--

446
00:24:57,560 --> 00:25:00,280
 just like my board being a little bit off calibration,

447
00:25:00,280 --> 00:25:05,080
 if my feet are at all uncertain about the terrain,

448
00:25:05,080 --> 00:25:07,200
 if I start asking for a force and my foot

449
00:25:07,200 --> 00:25:09,480
 is a little above the ground, then it

450
00:25:09,480 --> 00:25:11,480
 has the property that it's going to try to drive

451
00:25:11,480 --> 00:25:14,120
 my robot into the ground.

452
00:25:14,120 --> 00:25:16,320
 In the DARPA robotics challenge, where

453
00:25:16,320 --> 00:25:18,880
 we had this humanoid that was walking around,

454
00:25:18,880 --> 00:25:23,040
 and we really didn't want it to fall down,

455
00:25:23,040 --> 00:25:26,440
 so we had this way to make it a little bit more conservative.

456
00:25:26,440 --> 00:25:29,720
 If we didn't trust our sensor estimates of the terrain,

457
00:25:29,720 --> 00:25:33,080
 we would put it in stompy mode, where it would actually--

458
00:25:33,080 --> 00:25:36,920
 we would just aim a little high on the terrain

459
00:25:36,920 --> 00:25:38,800
 and then lean into the force controller.

460
00:25:38,800 --> 00:25:40,120
 And you could watch from--

461
00:25:40,120 --> 00:25:42,120
 I mean, probably most people would never notice.

462
00:25:42,640 --> 00:25:44,880
 I know Scott Kindersma and I, we were watching that.

463
00:25:44,880 --> 00:25:46,280
 It's stomping like crazy.

464
00:25:46,280 --> 00:25:48,800
 And Robin Dietz, all these guys, we were on the sideline.

465
00:25:48,800 --> 00:25:50,480
 Like, it's stomping right now.

466
00:25:50,480 --> 00:25:52,360
 So it's confused about where the terrain is.

467
00:25:52,360 --> 00:25:54,800
 But it would go like this, just a little bit harder.

468
00:25:54,800 --> 00:25:58,160
 And we'd be like, oh my gosh, don't fall down.

469
00:25:58,160 --> 00:26:01,000
 But that is also the reason why we love the force control,

470
00:26:01,000 --> 00:26:05,000
 just because asking for force when there's no force to give

471
00:26:05,000 --> 00:26:06,800
 tends to drive you into contact.

472
00:26:06,800 --> 00:26:07,960
 I mean, locally, of course.

473
00:26:07,960 --> 00:26:10,200
 If I was up here, it's just going to miss.

474
00:26:10,200 --> 00:26:12,360
 But if you're close to contact, it'll get you there.

475
00:26:12,360 --> 00:26:19,160
 OK, so what's going to happen now if I--

476
00:26:19,160 --> 00:26:23,280
 so if I choose some c that's greater than 0,

477
00:26:23,280 --> 00:26:27,000
 what are all the things that could possibly happen?

478
00:26:27,000 --> 00:26:28,160
 And I'm going to accelerate.

479
00:26:28,160 --> 00:26:30,960
 We agree that for a reasonable set of initial conditions,

480
00:26:30,960 --> 00:26:33,120
 I'm going to accelerate into the box.

481
00:26:33,120 --> 00:26:34,200
 OK, what happens then?

482
00:26:38,720 --> 00:26:41,400
 Let's think about small c, think about big C.

483
00:26:41,400 --> 00:26:43,780
 What are the different things that could possibly happen?

484
00:26:43,780 --> 00:26:50,280
 It's pretty subtle.

485
00:26:50,280 --> 00:26:52,400
 I mean, there's some things that are not subtle.

486
00:26:52,400 --> 00:26:53,440
 And there's some things that are subtle.

487
00:26:53,440 --> 00:26:55,200
 Let me make this a little farther away just

488
00:26:55,200 --> 00:26:58,560
 to get you to think about it.

489
00:26:58,560 --> 00:26:59,560
 Yeah?

490
00:26:59,560 --> 00:27:00,540
 [INAUDIBLE]

491
00:27:00,540 --> 00:27:07,880
 OK, good.

492
00:27:07,880 --> 00:27:13,280
 So you said-- so first of all, maybe if c is very small

493
00:27:13,280 --> 00:27:16,320
 and your finger is light, it didn't have enough time

494
00:27:16,320 --> 00:27:19,080
 to build up a lot of momentum, it could just get there

495
00:27:19,080 --> 00:27:21,800
 and the box might just sit there, sit still.

496
00:27:21,800 --> 00:27:23,880
 That's like the lowest regime.

497
00:27:23,880 --> 00:27:26,560
 It's going to move a little bit, right, because of the collision.

498
00:27:26,560 --> 00:27:29,800
 But basically, just sit still.

499
00:27:29,800 --> 00:27:33,040
 And there's going to be some momentum effect, of course,

500
00:27:33,040 --> 00:27:34,640
 from the collision.

501
00:27:34,640 --> 00:27:37,680
 But really, we know that there's going

502
00:27:37,680 --> 00:27:41,880
 to be some amount of horizontal force from friction.

503
00:27:41,880 --> 00:27:52,120
 It's going to be maybe even just equal to-- in this case,

504
00:27:52,120 --> 00:27:59,640
 it's going to be equal to mu times mg, where m of the box.

505
00:27:59,640 --> 00:28:02,360
 So I've got my friction cones here.

506
00:28:02,360 --> 00:28:06,080
 I've got normal forces that must match mg.

507
00:28:06,080 --> 00:28:09,160
 And I'm allowed to put as much force as I can here.

508
00:28:09,160 --> 00:28:13,680
 So it's going to be less than or equal to mg.

509
00:28:13,680 --> 00:28:17,440
 So if c is small and the collision is small,

510
00:28:17,440 --> 00:28:19,320
 then it could just sit there, sit still.

511
00:28:19,320 --> 00:28:25,240
 If c is a bit larger--

512
00:28:25,240 --> 00:28:27,320
 well, sorry, if c is very large, it's

513
00:28:27,320 --> 00:28:29,280
 just going to move the box.

514
00:28:29,280 --> 00:28:31,680
 It'll be above this friction threshold.

515
00:28:31,680 --> 00:28:33,400
 It'll start moving the box until it slams

516
00:28:33,400 --> 00:28:34,880
 into the wall on the other side.

517
00:28:34,880 --> 00:28:37,280
 And then it's going to stop, in this particular example.

518
00:28:37,280 --> 00:28:42,200
 What's interesting is that you can also see--

519
00:28:42,200 --> 00:28:44,040
 if you just run the simulation, you can also

520
00:28:44,040 --> 00:28:48,160
 see a pretty big regime in c, where the impact's enough

521
00:28:48,160 --> 00:28:50,440
 to start it moving, but the drag is enough

522
00:28:50,440 --> 00:28:52,800
 that it's slowly decelerating into the point

523
00:28:52,800 --> 00:28:55,880
 where it'll just kind of come to rest,

524
00:28:55,880 --> 00:28:58,920
 move a nontrivial amount, and then come to rest.

525
00:28:58,920 --> 00:29:00,520
 So I actually just made that plot here.

526
00:29:00,520 --> 00:29:08,800
 There it is here.

527
00:29:08,800 --> 00:29:12,000
 I can make that bigger.

528
00:29:12,000 --> 00:29:13,200
 Can I make that bigger?

529
00:29:13,200 --> 00:29:22,320
 So this is different commanded forces,

530
00:29:22,320 --> 00:29:26,480
 from small, the blue one, to large.

531
00:29:26,480 --> 00:29:29,360
 When it's small, it takes a while in time

532
00:29:29,360 --> 00:29:31,560
 to even make contact with the box.

533
00:29:31,560 --> 00:29:33,320
 See, the contact with the box is always

534
00:29:33,320 --> 00:29:36,520
 going to happen at the same vertical place.

535
00:29:36,520 --> 00:29:39,920
 This is time versus x.

536
00:29:39,920 --> 00:29:42,760
 So there's an actual location of the box.

537
00:29:42,760 --> 00:29:44,800
 Horizontally, things are happening

538
00:29:44,800 --> 00:29:46,840
 all at the same location.

539
00:29:46,840 --> 00:29:48,300
 If you're accelerating slowly, it'll

540
00:29:48,300 --> 00:29:49,840
 take a while to get there.

541
00:29:49,840 --> 00:29:52,760
 And then it'll basically just stop.

542
00:29:52,760 --> 00:29:54,440
 You go a little-- hit it a little faster,

543
00:29:54,440 --> 00:29:56,440
 moves just a little bit more, but it's basically

544
00:29:56,440 --> 00:29:58,360
 a stiction regime.

545
00:29:58,360 --> 00:30:00,120
 But there's this regime where you hit it,

546
00:30:00,120 --> 00:30:03,800
 and it'll start sliding, but it'll come to rest.

547
00:30:03,800 --> 00:30:07,160
 And then there's a regime where you just

548
00:30:07,160 --> 00:30:08,520
 slam it into the back wall.

549
00:30:08,520 --> 00:30:11,440
 And that's the collision with the back wall that happens.

550
00:30:11,440 --> 00:30:14,320
 And there's lots of different forces that'll get you there.

551
00:30:14,320 --> 00:30:17,440
 Bigger and bigger will just hit that wall.

552
00:30:17,440 --> 00:30:18,840
 But it's a pretty rich--

553
00:30:18,840 --> 00:30:20,280
 it's a super simple system, but it's

554
00:30:20,280 --> 00:30:22,000
 pretty rich for all the things it can do.

555
00:30:22,000 --> 00:30:23,480
 Yeah?

556
00:30:23,480 --> 00:30:31,360
 [INAUDIBLE]

557
00:30:31,360 --> 00:30:33,840
 So the question is, am I assuming inelastic?

558
00:30:33,840 --> 00:30:37,000
 I'm not rigorously making that assumption.

559
00:30:37,000 --> 00:30:41,160
 In fact, the bouncing you see is a little bit of plasticity,

560
00:30:41,160 --> 00:30:44,240
 if you will, in that.

561
00:30:44,240 --> 00:30:44,760
 It's subtle.

562
00:30:44,760 --> 00:30:49,640
 This is coming from a time-stepping method that

563
00:30:49,640 --> 00:30:52,120
 allows a little bit of--

564
00:30:52,120 --> 00:30:54,280
 a soft contact model, those things together

565
00:30:54,280 --> 00:30:56,040
 can allow some bouncing.

566
00:30:56,040 --> 00:30:58,760
 But if you think about it, if I do bounce,

567
00:30:58,760 --> 00:31:02,040
 I'm going to push right back into myself immediately.

568
00:31:02,040 --> 00:31:03,840
 So you're not going to see a boing.

569
00:31:03,840 --> 00:31:07,360
 It's going to be shoved right back in there.

570
00:31:07,360 --> 00:31:08,520
 You're kind of pushing in.

571
00:31:08,520 --> 00:31:12,080
 It might bounce for a second, but it'll go right back in.

572
00:31:12,080 --> 00:31:12,720
 Good question.

573
00:31:20,360 --> 00:31:22,920
 And to some extent, only when you've

574
00:31:22,920 --> 00:31:26,040
 gotten all the way to the--

575
00:31:26,040 --> 00:31:27,720
 I didn't plot the force on that.

576
00:31:27,720 --> 00:31:30,920
 But only when the box really isn't moving

577
00:31:30,920 --> 00:31:34,160
 am I going to get the force that I expect out.

578
00:31:34,160 --> 00:31:36,040
 But it can still attempt to regulate the force

579
00:31:36,040 --> 00:31:39,160
 and do interesting things when it's doing that.

580
00:31:39,160 --> 00:31:42,280
 This model assumes that I'm sort of pushing up against the wall

581
00:31:42,280 --> 00:31:43,120
 and it's not moving.

582
00:31:43,120 --> 00:31:45,920
 And if I push more, I'll get more force.

583
00:31:45,920 --> 00:31:48,320
 And that's only true in the limit.

584
00:31:48,320 --> 00:31:50,720
 But the controller we got out of a very simple derivation

585
00:31:50,720 --> 00:31:51,560
 is still useful.

586
00:31:51,560 --> 00:31:58,520
 Now, but this picture I like very much.

587
00:31:58,520 --> 00:32:03,160
 I want to flip up the box.

588
00:32:03,160 --> 00:32:06,520
 Now, I originally was like, OK, I'm going to shove it

589
00:32:06,520 --> 00:32:08,120
 to the side and I'll flip it up there.

590
00:32:08,120 --> 00:32:10,160
 But my daughter, she just flipped it up

591
00:32:10,160 --> 00:32:11,320
 in the middle all the time.

592
00:32:11,320 --> 00:32:13,400
 I was like, OK, now I've got to figure out

593
00:32:13,400 --> 00:32:15,320
 how do we flip it up in the middle.

594
00:32:15,320 --> 00:32:17,480
 And it's pretty tough.

595
00:32:17,480 --> 00:32:20,920
 So I actually brought a box.

596
00:32:20,920 --> 00:32:23,240
 I brought some friction because I need friction

597
00:32:23,240 --> 00:32:24,000
 to make this work.

598
00:32:24,000 --> 00:32:30,360
 And I've got some variational principles and mechanics

599
00:32:30,360 --> 00:32:33,720
 inside the box, which is a great book, Cornelius Lenk shows,

600
00:32:33,720 --> 00:32:35,000
 if you haven't read it.

601
00:32:35,000 --> 00:32:36,960
 Good stuff.

602
00:32:36,960 --> 00:32:43,040
 OK, so if I'm pushing, it's not hard to make this thing go.

603
00:32:43,040 --> 00:32:45,000
 How do I make it flip up?

604
00:32:45,000 --> 00:32:49,040
 It's actually super hard to make it flip up.

605
00:32:49,040 --> 00:32:53,520
 OK, like I can just barely-- oh, no, I could do it upstairs.

606
00:32:53,520 --> 00:32:57,280
 Oh, man, I might have to take Lenk shows out.

607
00:32:57,280 --> 00:32:57,780
 Shoot.

608
00:32:57,780 --> 00:33:04,360
 You'd think that would be worse, but let me just try.

609
00:33:04,360 --> 00:33:07,280
 Oh, man, it's too slippery here.

610
00:33:07,280 --> 00:33:10,920
 Well, this is totally cheating.

611
00:33:10,920 --> 00:33:12,440
 But maybe I made my point, right?

612
00:33:12,440 --> 00:33:17,320
 It's pretty subtle to get this thing into a regime

613
00:33:17,320 --> 00:33:19,640
 where you're controlling the contact forces enough

614
00:33:19,640 --> 00:33:20,800
 to sort of flip it up.

615
00:33:20,800 --> 00:33:23,360
 If I have a lot of friction, my friction cone is bigger,

616
00:33:23,360 --> 00:33:27,680
 then that allows me to have a bigger range of forces

617
00:33:27,680 --> 00:33:30,680
 I can apply here to tip it up.

618
00:33:30,680 --> 00:33:33,440
 Interestingly, I want you to really appreciate,

619
00:33:33,440 --> 00:33:35,400
 like if nothing else, at the end of this class,

620
00:33:35,400 --> 00:33:39,680
 I hope you watch yourself loading the dishwasher,

621
00:33:39,680 --> 00:33:43,480
 because it's super impressive.

622
00:33:43,480 --> 00:33:45,680
 Like if I were to pick this up at the end of lecture,

623
00:33:45,680 --> 00:33:47,840
 I'm going to do something like this.

624
00:33:47,840 --> 00:33:50,800
 And I'm going to put my hand down here and provide exactly--

625
00:33:50,800 --> 00:33:52,340
 like on the free body diagram, that's

626
00:33:52,340 --> 00:33:54,160
 exactly the right thing to do.

627
00:33:54,160 --> 00:33:55,480
 I'm going to make that--

628
00:33:55,480 --> 00:33:56,880
 I'm going to help out the friction

629
00:33:56,880 --> 00:33:59,400
 by with a little bit of force here, tip it up.

630
00:33:59,400 --> 00:34:00,400
 I do it all the time.

631
00:34:00,400 --> 00:34:01,920
 People do it all the time.

632
00:34:01,920 --> 00:34:03,520
 We're so good at these things.

633
00:34:03,520 --> 00:34:05,560
 And if you think about all the subtle physics that

634
00:34:05,560 --> 00:34:09,480
 happens to make that happen, it's really, really impressive.

635
00:34:09,480 --> 00:34:11,720
 And I think it's a gap between what our robots are doing

636
00:34:11,720 --> 00:34:13,760
 and what we're doing.

637
00:34:13,760 --> 00:34:14,240
 OK.

638
00:34:14,240 --> 00:34:16,840
 But if I'm in the land of knowing the friction

639
00:34:16,840 --> 00:34:22,160
 coefficient, being able to regulate contact forces,

640
00:34:22,160 --> 00:34:24,360
 and I have a robot that can apply contact forces more

641
00:34:24,360 --> 00:34:27,100
 accurately than my hand, then I can

642
00:34:27,100 --> 00:34:29,920
 try to do this thing that I failed to do experimentally

643
00:34:29,920 --> 00:34:32,520
 right here.

644
00:34:32,520 --> 00:34:35,800
 So what's that going to look like?

645
00:34:35,800 --> 00:34:41,640
 What I'd like to do is think about having only friction

646
00:34:41,640 --> 00:34:43,640
 here.

647
00:34:43,640 --> 00:34:46,960
 So I'm allowed to have friction here and the normal force

648
00:34:46,960 --> 00:34:49,280
 here.

649
00:34:49,280 --> 00:34:52,600
 I'm going to apply a force here.

650
00:34:52,600 --> 00:34:55,760
 I also have a friction cone here based on my normal forces,

651
00:34:55,760 --> 00:34:57,160
 right?

652
00:34:57,160 --> 00:34:59,760
 Equal and opposite force.

653
00:34:59,760 --> 00:35:01,960
 So I'm only allowed to apply-- that's partly what happens.

654
00:35:01,960 --> 00:35:03,260
 This box is a little slippery.

655
00:35:03,260 --> 00:35:06,600
 I'm only allowed to apply forces inside this friction cone.

656
00:35:06,600 --> 00:35:10,600
 Otherwise, my finger will slip right up the box.

657
00:35:10,600 --> 00:35:14,080
 So the game becomes, can you find

658
00:35:14,080 --> 00:35:16,680
 a force in this friction cone that

659
00:35:16,680 --> 00:35:18,800
 stays inside that friction cone--

660
00:35:18,800 --> 00:35:22,480
 so there's enough force to keep my point from slipping--

661
00:35:22,480 --> 00:35:24,960
 that will rotate up the box?

662
00:35:24,960 --> 00:35:25,760
 OK.

663
00:35:25,760 --> 00:35:27,340
 Now, you're not going to be surprised.

664
00:35:27,340 --> 00:35:29,420
 And I wrote the whole derivation out in the notes.

665
00:35:29,420 --> 00:35:32,280
 But I like doing that with constrained least squares.

666
00:35:32,280 --> 00:35:36,520
 That's a good-- locally, it looks like a least squares

667
00:35:36,520 --> 00:35:37,440
 problem.

668
00:35:37,440 --> 00:35:38,960
 And this friction cone constraint

669
00:35:38,960 --> 00:35:44,400
 can be locally approximated as a linear constraint.

670
00:35:44,400 --> 00:35:46,640
 And I basically wrote a little controller

671
00:35:46,640 --> 00:35:48,840
 that sort of flips up the box.

672
00:35:48,840 --> 00:35:49,340
 OK?

673
00:35:49,340 --> 00:36:00,680
 I hope you run these yourselves, because they're fun

674
00:36:00,680 --> 00:36:02,320
 and they're good to think about, too.

675
00:36:02,320 --> 00:36:04,640
 But-- oops.

676
00:36:04,640 --> 00:36:12,040
 Oh, nice.

677
00:36:12,040 --> 00:36:13,240
 That happened last time, too.

678
00:36:13,240 --> 00:36:13,740
 Sorry.

679
00:36:13,740 --> 00:36:14,240
 OK.

680
00:36:15,240 --> 00:36:16,740
 [CLICKS TONGUE]

681
00:36:16,740 --> 00:36:46,620
 Um-- it's worth it.

682
00:36:46,620 --> 00:36:47,120
 I promise.

683
00:36:47,120 --> 00:37:08,120
 OK.

684
00:37:08,120 --> 00:37:09,620
 Why would that not work?

685
00:37:10,620 --> 00:37:11,120
 Hm.

686
00:37:11,120 --> 00:37:20,120
 I'll just do it again.

687
00:37:20,120 --> 00:37:21,780
 I'm going to run out of NGROC licenses.

688
00:37:21,780 --> 00:37:22,860
 So I shouldn't do that.

689
00:37:22,860 --> 00:37:41,360
 [CLEARS THROAT]

690
00:37:41,360 --> 00:37:42,360
 I have an idea.

691
00:37:42,360 --> 00:37:58,840
 [CLICKS TONGUE]

692
00:37:58,840 --> 00:37:59,340
 Darn it.

693
00:37:59,340 --> 00:38:06,360
 Would you guys try to click on it, maybe, for a second,

694
00:38:06,360 --> 00:38:08,860
 if I keep talking?

695
00:38:08,860 --> 00:38:11,200
 Well, I guess I can just-- I'll just restart the notebook

696
00:38:11,200 --> 00:38:14,960
 and talk, and then I'll redo it here.

697
00:38:14,960 --> 00:38:23,440
 That's the bad one, but I'll do it.

698
00:38:23,440 --> 00:38:33,460
 OK.

699
00:38:33,460 --> 00:38:39,800
 Suspend your disbelief for a second.

700
00:38:39,800 --> 00:38:42,280
 That'll work in, like, 3 and 1/2 minutes or something.

701
00:38:42,280 --> 00:38:50,040
 But-- OK.

702
00:38:50,040 --> 00:38:54,000
 So, I mean, the controller that I wrote for this

703
00:38:54,000 --> 00:39:02,120
 is effectively thinking about a virtual angle like this.

704
00:39:02,120 --> 00:39:04,200
 I can parameterize the orientation of the box

705
00:39:04,200 --> 00:39:05,760
 however I like.

706
00:39:05,760 --> 00:39:08,400
 But if I do it relative to vertical,

707
00:39:08,400 --> 00:39:12,400
 I basically implemented a small PID controller

708
00:39:12,400 --> 00:39:17,600
 that tries to say, I'm going to apply a force that is making--

709
00:39:17,600 --> 00:39:24,280
 I made theta desired be some slow from the initial angle

710
00:39:24,280 --> 00:39:26,400
 up to the top.

711
00:39:26,400 --> 00:39:28,280
 And then I followed theta desired.

712
00:39:28,280 --> 00:39:31,520
 I wrote a controller that was thinking about tracking theta

713
00:39:31,520 --> 00:39:36,960
 desired with my torque about theta

714
00:39:36,960 --> 00:39:45,160
 is like k theta desired minus theta actual estimated,

715
00:39:45,160 --> 00:39:49,640
 plus b theta dot desired minus theta dot,

716
00:39:49,640 --> 00:39:54,240
 in this, like, simplified coordinates.

717
00:39:54,240 --> 00:39:57,240
 I took that as a command, asked for the closest

718
00:39:57,240 --> 00:40:00,320
 I could do to executing this, subject to the friction cone

719
00:40:00,320 --> 00:40:01,920
 constraints.

720
00:40:01,920 --> 00:40:04,760
 And I give myself something that I can actually just sort of

721
00:40:04,760 --> 00:40:07,920
 follow, almost prescribe the theta trajectory up

722
00:40:07,920 --> 00:40:09,440
 to some friction limits.

723
00:40:09,440 --> 00:40:12,080
 If you start-- and I hope you do play with the notebook, right?

724
00:40:12,080 --> 00:40:14,240
 So if you start making mu small, then it's

725
00:40:14,240 --> 00:40:16,640
 going to, at some point, say, I can't find you a solution.

726
00:40:16,640 --> 00:40:17,920
 I can't execute that controller.

727
00:40:17,920 --> 00:40:22,560
 Even zero force would violate something.

728
00:40:22,560 --> 00:40:27,200
 But in the regime where that is happy and good,

729
00:40:27,200 --> 00:40:28,080
 it's pretty fun.

730
00:40:28,080 --> 00:40:29,040
 It works pretty well.

731
00:40:29,040 --> 00:40:35,320
 OK, almost there.

732
00:40:35,320 --> 00:40:43,160
 Ask some questions for a second, because I really

733
00:40:43,160 --> 00:40:45,080
 don't want to-- I want to show you that before I go on too

734
00:40:45,080 --> 00:40:45,280
 much.

735
00:40:45,280 --> 00:40:45,780
 Yeah?

736
00:40:45,780 --> 00:40:46,680
 AUDIENCE: [INAUDIBLE]

737
00:40:46,680 --> 00:40:57,800
 PROFESSOR: Great question.

738
00:40:57,800 --> 00:41:00,800
 So the question was, isn't it always

739
00:41:00,800 --> 00:41:03,440
 going to be the case that I should

740
00:41:03,440 --> 00:41:05,960
 be applying a force that's on the boundary of the friction

741
00:41:05,960 --> 00:41:07,640
 cone?

742
00:41:07,640 --> 00:41:09,920
 Yes, but the question is how hard--

743
00:41:09,920 --> 00:41:12,840
 so the direction of the force, I would expect,

744
00:41:12,840 --> 00:41:14,760
 would always want to be on the friction cone.

745
00:41:14,760 --> 00:41:16,800
 Or certainly, there's a solution that would always

746
00:41:16,800 --> 00:41:18,320
 want to be on the friction cone.

747
00:41:18,320 --> 00:41:20,240
 But if you push too hard there, when

748
00:41:20,240 --> 00:41:21,740
 you're on that friction cone, you're

749
00:41:21,740 --> 00:41:24,800
 pushing both this way and that way.

750
00:41:24,800 --> 00:41:26,920
 So there's some limit based on the geometry

751
00:41:26,920 --> 00:41:31,920
 of that friction cone for which you can achieve some rate.

752
00:41:31,920 --> 00:41:35,720
 And the faster you go here, the faster you turn up.

753
00:41:35,720 --> 00:41:38,040
 But at some point, you'll slip.

754
00:41:38,040 --> 00:41:38,880
 So you're right.

755
00:41:38,880 --> 00:41:46,200
 Yep, I think you're right.

756
00:41:46,200 --> 00:41:48,480
 I might have even done that.

757
00:41:48,480 --> 00:41:48,980
 Yeah?

758
00:41:48,980 --> 00:41:50,600
 AUDIENCE: When you set it up like this,

759
00:41:50,600 --> 00:41:52,440
 can you account for the fact that increasing

760
00:41:52,440 --> 00:41:54,560
 the force of the push will change the friction cone

761
00:41:54,560 --> 00:41:55,200
 at the bottom?

762
00:41:55,200 --> 00:41:56,560
 It'll reduce the normal force?

763
00:41:56,560 --> 00:41:57,800
 PROFESSOR: Yeah, yes, good.

764
00:41:57,800 --> 00:42:00,760
 So the total force here, the force balance,

765
00:42:00,760 --> 00:42:02,640
 is that this is also contributing to vertical.

766
00:42:02,640 --> 00:42:03,960
 That's a super good point.

767
00:42:03,960 --> 00:42:06,120
 So that's also contributing to vertical,

768
00:42:06,120 --> 00:42:09,720
 which is then fighting against mg, which reduces

769
00:42:09,720 --> 00:42:11,920
 the total friction here.

770
00:42:11,920 --> 00:42:14,120
 And I think all those are in the equations.

771
00:42:14,120 --> 00:42:17,040
 These are all simple enough that the free body diagram is just

772
00:42:17,040 --> 00:42:19,040
 completely written out.

773
00:42:25,720 --> 00:42:27,920
 OK, back in business.

774
00:42:27,920 --> 00:42:29,560
 Kind of takes the oomph out of my demo,

775
00:42:29,560 --> 00:42:33,400
 but the next one is also important.

776
00:42:33,400 --> 00:42:39,040
 So yay.

777
00:42:39,040 --> 00:42:49,760
 OK, oops, other side's better.

778
00:42:49,760 --> 00:42:50,800
 Look at that.

779
00:42:50,800 --> 00:42:55,400
 Beautiful contact forces, little sphere finger,

780
00:42:55,400 --> 00:42:57,560
 moving up the Cheez-It box.

781
00:42:57,560 --> 00:42:59,960
 Always staying right on the boundary of the--

782
00:42:59,960 --> 00:43:00,960
 let's watch, actually.

783
00:43:00,960 --> 00:43:02,800
 I mean, I think that force you're

784
00:43:02,800 --> 00:43:06,800
 going to see is always sort of on that margin.

785
00:43:06,800 --> 00:43:07,920
 It's kind of funny, though.

786
00:43:07,920 --> 00:43:09,480
 If you keep running the controller

787
00:43:09,480 --> 00:43:12,600
 after it goes up to the top--

788
00:43:12,600 --> 00:43:14,920
 I did make one linearization assumption there,

789
00:43:14,920 --> 00:43:17,320
 which goes bad when you're all the way at the top.

790
00:43:17,320 --> 00:43:23,040
 But yeah, you get this beautiful control that I must say

791
00:43:23,040 --> 00:43:27,000
 would be very hard to implement with position control.

792
00:43:27,000 --> 00:43:30,280
 So it's explicitly reasoning about--

793
00:43:30,280 --> 00:43:32,480
 like all these terms you guys mentioned,

794
00:43:32,480 --> 00:43:34,560
 the vertical force, what's the total amount

795
00:43:34,560 --> 00:43:36,440
 admissible friction in the corner in order

796
00:43:36,440 --> 00:43:38,480
 to command that trajectory.

797
00:43:38,480 --> 00:43:42,280
 Now, once the finger left the Cheez-It box,

798
00:43:42,280 --> 00:43:44,840
 it did something ridiculous, because it's

799
00:43:44,840 --> 00:43:48,600
 commanding forces, and that's not

800
00:43:48,600 --> 00:43:51,720
 so good for moving around the position of the world.

801
00:43:51,720 --> 00:44:00,960
 But OK, so that is strategy one, inspired by my daughter.

802
00:44:00,960 --> 00:44:04,560
 But it's just a simple example of a general principle,

803
00:44:04,560 --> 00:44:09,960
 of directly commanding forces, direct force control.

804
00:44:09,960 --> 00:44:13,760
 Now, direct force control, you can do that, again,

805
00:44:13,760 --> 00:44:18,720
 with the force sensor, or with this quasi-static assumption,

806
00:44:18,720 --> 00:44:20,880
 or by actually using the accelerations

807
00:44:20,880 --> 00:44:22,840
 and including them in the equation.

808
00:44:22,840 --> 00:44:27,160
 OK, there are lots of details, basically,

809
00:44:27,160 --> 00:44:29,600
 about how you derive that actual controller when

810
00:44:29,600 --> 00:44:31,280
 it's the full robot.

811
00:44:31,280 --> 00:44:34,200
 And those details really matter, like the difference

812
00:44:34,200 --> 00:44:38,240
 between a sensor that's high bandwidth and super clean,

813
00:44:38,240 --> 00:44:40,240
 implemented well at a high frequency,

814
00:44:40,240 --> 00:44:43,160
 compared to something that's not, is night and day.

815
00:44:43,160 --> 00:44:43,660
 Yeah?

816
00:44:43,660 --> 00:44:50,580
 [INAUDIBLE]

817
00:44:50,580 --> 00:44:51,700
 Yep.

818
00:44:51,700 --> 00:44:53,020
 I mean, I could ask for something

819
00:44:53,020 --> 00:44:56,180
 that would be too fast, I think, and it would just

820
00:44:56,180 --> 00:44:58,580
 refuse to execute faster than it could,

821
00:44:58,580 --> 00:45:00,620
 because of the thresholds from the friction cones.

822
00:45:00,620 --> 00:45:06,500
 I didn't repeat that.

823
00:45:06,500 --> 00:45:09,180
 She asked if the speed it rotated up

824
00:45:09,180 --> 00:45:11,940
 was given by theta desired, or something more subtle.

825
00:45:11,940 --> 00:45:16,540
 And it's mostly theta desired, up to some limit.

826
00:45:16,540 --> 00:45:22,020
 OK, so that ridiculousness of the finger afterwards,

827
00:45:22,020 --> 00:45:26,100
 I think, is something we can address.

828
00:45:26,100 --> 00:45:29,460
 And in general, commanding forces only

829
00:45:29,460 --> 00:45:32,260
 is potentially a slightly limiting view of the world.

830
00:45:32,260 --> 00:45:35,020
 And there's a generalization, which

831
00:45:35,020 --> 00:45:37,460
 tends to be called indirect force control.

832
00:45:37,460 --> 00:45:40,260
 There's a class of models, indirect force control,

833
00:45:40,260 --> 00:45:42,460
 that where you program the force,

834
00:45:42,460 --> 00:45:49,620
 but you do it indirectly, so by a surrogate objective.

835
00:45:49,620 --> 00:45:53,700
 So the simplest and one of the most powerful examples

836
00:45:53,700 --> 00:45:54,900
 would be stiffness control.

837
00:45:54,900 --> 00:46:06,180
 So it's an example of indirect force control.

838
00:46:06,180 --> 00:46:17,580
 All right, we've still got our equations up there,

839
00:46:17,580 --> 00:46:22,140
 the mx double dot equals ux fc, whatever.

840
00:46:22,140 --> 00:46:25,340
 If instead of saying my goal is to regulate this fictitious

841
00:46:25,340 --> 00:46:29,020
 force, if we said instead, I would

842
00:46:29,020 --> 00:46:32,220
 like that if you came up and pushed on my finger,

843
00:46:32,220 --> 00:46:37,140
 my little red circular finger, that the response you would get

844
00:46:37,140 --> 00:46:38,700
 would be like it was a spring.

845
00:46:38,700 --> 00:46:58,580
 And the rest length of that spring

846
00:46:58,580 --> 00:47:03,100
 is going to become the input to my control system.

847
00:47:03,100 --> 00:47:07,500
 So if I want the finger to come into contact with the box

848
00:47:07,500 --> 00:47:09,380
 and then potentially move the box around,

849
00:47:09,380 --> 00:47:13,220
 I can do that by just making my finger act like a spring

850
00:47:13,220 --> 00:47:15,820
 and then moving the rest position of that spring

851
00:47:15,820 --> 00:47:16,980
 into the box.

852
00:47:16,980 --> 00:47:19,860
 And it'll start pulling me, just like with the spring's dynamics,

853
00:47:19,860 --> 00:47:21,780
 into the box.

854
00:47:21,780 --> 00:47:24,300
 So if the rest length was inside the box,

855
00:47:24,300 --> 00:47:26,100
 it would be applying a force to the box.

856
00:47:26,100 --> 00:47:29,180
 The force it would apply is proportional to how far

857
00:47:29,180 --> 00:47:32,100
 into the box my rest length is.

858
00:47:32,100 --> 00:47:35,540
 That's a sort of indirect way to command a force,

859
00:47:35,540 --> 00:47:37,140
 but it turns out to be super useful.

860
00:47:37,140 --> 00:47:45,420
 So if I want my new mechanical system

861
00:47:45,420 --> 00:47:56,060
 to look like my sort of textbook spring mass damper system,

862
00:47:56,060 --> 00:47:56,560
 OK?

863
00:47:56,560 --> 00:48:14,860
 And I think of this now as the virtual positions,

864
00:48:14,860 --> 00:48:23,540
 or the rest length is like the input to my stiffness control.

865
00:48:23,540 --> 00:48:24,040
 OK?

866
00:48:24,040 --> 00:48:33,820
 In general, actually, I've added-- this

867
00:48:33,820 --> 00:48:36,780
 is the stiffness component, right,

868
00:48:36,780 --> 00:48:40,660
 where I'm acting like a spring.

869
00:48:40,660 --> 00:48:42,860
 This is a damping element I've added here.

870
00:48:42,860 --> 00:48:49,020
 If you really look-- if you want to be careful,

871
00:48:49,020 --> 00:48:51,020
 then there's this thing called stiffness control.

872
00:48:51,020 --> 00:48:52,300
 There's a thing called damping control.

873
00:48:52,300 --> 00:48:53,840
 If you put them together, maybe you're

874
00:48:53,840 --> 00:48:55,980
 technically doing compliance control.

875
00:48:55,980 --> 00:48:56,900
 Doesn't really matter.

876
00:48:56,900 --> 00:48:58,500
 This is the idea, right?

877
00:48:58,500 --> 00:49:01,060
 Call it what you will.

878
00:49:01,060 --> 00:49:01,580
 Right?

879
00:49:01,580 --> 00:49:05,620
 So the model is, if the world is pushing on me,

880
00:49:05,620 --> 00:49:08,220
 whatever the world is pushing on me,

881
00:49:08,220 --> 00:49:11,380
 I have a well-defined response.

882
00:49:11,380 --> 00:49:13,540
 I'm going to act like a mechanical spring.

883
00:49:13,540 --> 00:49:16,700
 I'm going to replace the dynamics of my robot

884
00:49:16,700 --> 00:49:18,180
 with the dynamics of a spring.

885
00:49:18,180 --> 00:49:21,380
 That's a very important intuitive idea.

886
00:49:21,380 --> 00:49:23,900
 One of the things that's very nice about it

887
00:49:23,900 --> 00:49:29,060
 is that springs are well-behaved for any reasonable forces.

888
00:49:29,060 --> 00:49:29,560
 Right?

889
00:49:29,560 --> 00:49:30,780
 If the world is not--

890
00:49:30,780 --> 00:49:31,900
 I mean, you can--

891
00:49:31,900 --> 00:49:33,340
 if the world were to come up and try

892
00:49:33,340 --> 00:49:34,740
 to hit your resonant frequency or something,

893
00:49:34,740 --> 00:49:35,440
 maybe that's bad.

894
00:49:35,440 --> 00:49:39,420
 But if the world is sort of like passive, energy-conserving,

895
00:49:39,420 --> 00:49:43,260
 right, and you are energy-conserving,

896
00:49:43,260 --> 00:49:45,340
 then you have some guarantees that even

897
00:49:45,340 --> 00:49:47,320
 if you don't know exactly what's happening

898
00:49:47,320 --> 00:49:49,100
 on with your contact forces, you can

899
00:49:49,100 --> 00:49:51,620
 guarantee that things aren't going to go too bad.

900
00:49:51,620 --> 00:49:52,460
 Right?

901
00:49:52,460 --> 00:49:55,780
 And in general, there's a deep literature

902
00:49:55,780 --> 00:50:03,980
 on this about passivity-based control,

903
00:50:03,980 --> 00:50:09,100
 where you try to say that each of my elements of my control

904
00:50:09,100 --> 00:50:11,820
 system, including the world-- if I say the world is

905
00:50:11,820 --> 00:50:14,780
 energy-conserving and my system is energy-conserving,

906
00:50:14,780 --> 00:50:17,260
 it's passive or potentially even dissipative.

907
00:50:17,260 --> 00:50:17,760
 Right?

908
00:50:17,760 --> 00:50:19,820
 There's friction in it, or damping.

909
00:50:19,820 --> 00:50:22,220
 Then you can make guarantees about the stability

910
00:50:22,220 --> 00:50:25,820
 of the entire system, even when they're in complex composition.

911
00:50:25,820 --> 00:50:28,180
 So that's a very powerful idea.

912
00:50:28,180 --> 00:50:30,420
 And there's a couple of references in the notes

913
00:50:30,420 --> 00:50:31,700
 about it.

914
00:50:31,700 --> 00:50:35,640
 There's also Hamiltonian-- Port Hamiltonian theory

915
00:50:35,640 --> 00:50:40,060
 is like this taken to an extreme.

916
00:50:40,060 --> 00:50:42,780
 So there's a lot-- there's a deep literature there.

917
00:50:42,780 --> 00:50:45,660
 OK, but this is just an intuitive idea.

918
00:50:45,660 --> 00:50:49,540
 Let's try to act like a spring.

919
00:50:49,540 --> 00:50:51,700
 And it turns out to be way useful.

920
00:50:51,700 --> 00:50:55,780
 OK, so I put in here, assuming I'm--

921
00:50:55,780 --> 00:50:58,380
 I think it should definitely not have disconnected yet.

922
00:50:58,380 --> 00:51:01,300
 So I didn't do teleop with force control,

923
00:51:01,300 --> 00:51:05,120
 because if I put a little slider and commanded the force,

924
00:51:05,120 --> 00:51:07,540
 the demo would be very short, because my finger would just

925
00:51:07,540 --> 00:51:11,060
 either slam into something, or it would just

926
00:51:11,060 --> 00:51:14,780
 kind of off the screen, and I'd be kind of done.

927
00:51:14,780 --> 00:51:16,060
 But with stiffness control, I can

928
00:51:16,060 --> 00:51:18,020
 move that set point of the spring around

929
00:51:18,020 --> 00:51:19,660
 and do totally reasonable things.

930
00:51:19,660 --> 00:51:26,380
 So I give myself a little desired position of the--

931
00:51:26,380 --> 00:51:32,780
 wakey, wakey.

932
00:51:43,980 --> 00:51:46,020
 It's a little scary, but let's--

933
00:51:46,020 --> 00:51:46,540
 there we go.

934
00:51:46,540 --> 00:51:47,040
 OK.

935
00:51:47,040 --> 00:51:54,180
 That's got like an old mesh cat talking to me.

936
00:51:54,180 --> 00:52:04,660
 Oh, I hit play.

937
00:52:04,660 --> 00:52:07,140
 Stop.

938
00:52:07,140 --> 00:52:10,060
 OK, let's try that again.

939
00:52:10,060 --> 00:52:11,500
 Dang.

940
00:52:11,500 --> 00:52:14,500
 These things went so well in my head.

941
00:52:14,500 --> 00:52:15,180
 OK, good.

942
00:52:15,180 --> 00:52:21,380
 Now I'm in a mode where I have my robot.

943
00:52:21,380 --> 00:52:22,620
 I've got my finger.

944
00:52:22,620 --> 00:52:24,420
 I can teleop the set point of the finger.

945
00:52:24,420 --> 00:52:27,460
 I made the box transparent.

946
00:52:27,460 --> 00:52:28,540
 Jeez, too many boxes.

947
00:52:28,540 --> 00:52:29,040
 OK.

948
00:52:29,040 --> 00:52:36,020
 OK.

949
00:52:36,020 --> 00:52:37,980
 The box is more transparent, because we're going to stick

950
00:52:37,980 --> 00:52:39,300
 our set point inside it.

951
00:52:39,300 --> 00:52:41,180
 There's the red finger, but there's also

952
00:52:41,180 --> 00:52:42,260
 a little gold finger here.

953
00:52:42,260 --> 00:52:44,820
 So the gold finger is my set point,

954
00:52:44,820 --> 00:52:46,300
 and it's going to track it around.

955
00:52:46,300 --> 00:52:49,500
 And I've got yesterday's finger there, too.

956
00:52:49,500 --> 00:52:59,500
 I'll ignore the finger at the top there.

957
00:52:59,500 --> 00:53:00,500
 OK.

958
00:53:00,500 --> 00:53:03,260
 All right, so now this is a pretty intuitive interface.

959
00:53:03,260 --> 00:53:04,620
 So I can move this thing around.

960
00:53:04,620 --> 00:53:05,840
 It does good position control.

961
00:53:05,840 --> 00:53:07,220
 It doesn't do crazy things.

962
00:53:07,220 --> 00:53:10,460
 But I can also generate forces.

963
00:53:10,460 --> 00:53:12,380
 I'm up against the static friction,

964
00:53:12,380 --> 00:53:15,220
 but I'm not yet exceeding the static friction.

965
00:53:15,220 --> 00:53:18,380
 If I push a little bit harder by moving it farther into the box,

966
00:53:18,380 --> 00:53:21,500
 I can start moving the box around.

967
00:53:21,500 --> 00:53:23,980
 If I try to do what we did a minute ago,

968
00:53:23,980 --> 00:53:26,060
 it's not going to go super well.

969
00:53:26,060 --> 00:53:28,100
 I'm a human.

970
00:53:28,100 --> 00:53:31,700
 Oh, man, look at that.

971
00:53:31,700 --> 00:53:34,300
 OK, but you get the point.

972
00:53:34,300 --> 00:53:37,220
 So this is actually a pretty nice interface for me.

973
00:53:37,220 --> 00:53:39,660
 It's also a pretty nice interface for the robot,

974
00:53:39,660 --> 00:53:45,140
 in the sense that a large number of choices for this,

975
00:53:45,140 --> 00:53:47,940
 and this, and this give very reasonable behaviors.

976
00:53:47,940 --> 00:53:51,260
 So you don't have to dial it in too carefully.

977
00:53:51,260 --> 00:53:55,820
 OK, but it gives me the sort of, I think, the best part--

978
00:53:55,820 --> 00:53:58,260
 hopefully it runs on the first try.

979
00:53:58,260 --> 00:54:00,180
 Let's try a different flip-up strategy.

980
00:54:00,180 --> 00:54:06,620
 That I think really captures the idea

981
00:54:06,620 --> 00:54:11,020
 that if you program the mechanics of your interaction,

982
00:54:11,020 --> 00:54:14,100
 you can do something just way better

983
00:54:14,100 --> 00:54:18,460
 than if you're trying to program the forces or the positions

984
00:54:18,460 --> 00:54:18,960
 slowly.

985
00:54:18,960 --> 00:54:24,020
 So here's a different flip-up strategy.

986
00:54:24,020 --> 00:54:33,020
 I'm going to drive the box like I was doing there,

987
00:54:33,020 --> 00:54:35,380
 but I'm going to drive it all the way to the edge here.

988
00:54:35,380 --> 00:54:42,260
 Then I'm going to start pushing up.

989
00:54:42,260 --> 00:54:44,700
 Rather than-- it can't rotate around here anymore.

990
00:54:44,700 --> 00:54:48,180
 It's going to rotate around here.

991
00:54:48,180 --> 00:54:50,020
 So it's going to start tipping up like this.

992
00:54:50,020 --> 00:54:53,940
 If I'm successful, it's going to start tipping up like this.

993
00:54:53,940 --> 00:54:58,300
 I can do that just by having my set point of my spring

994
00:54:58,300 --> 00:55:00,380
 so it's pushing in here, and then just lifting that up

995
00:55:00,380 --> 00:55:02,900
 a little bit.

996
00:55:02,900 --> 00:55:05,860
 That will cause a vertical component of my spring force,

997
00:55:05,860 --> 00:55:07,660
 because it's trying to go here.

998
00:55:07,660 --> 00:55:10,340
 So exactly what we did before.

999
00:55:10,340 --> 00:55:13,460
 But here's what's really cool.

1000
00:55:13,460 --> 00:55:15,420
 What happens when I get to the top,

1001
00:55:15,420 --> 00:55:16,980
 when I start getting high up here?

1002
00:55:16,980 --> 00:55:23,620
 At some point, this is going to exceed its friction cone.

1003
00:55:23,620 --> 00:55:26,500
 So I'm going to have no ability to push here and stay

1004
00:55:26,500 --> 00:55:27,540
 inside the friction cone.

1005
00:55:27,540 --> 00:55:29,540
 You just can't do that.

1006
00:55:29,540 --> 00:55:31,820
 So this is going to slip.

1007
00:55:31,820 --> 00:55:35,060
 In the previous model, if I was monitoring the forces,

1008
00:55:35,060 --> 00:55:37,100
 monitoring the accelerations, trying to estimate

1009
00:55:37,100 --> 00:55:40,860
 the moment of that slip, that's not a good way to go.

1010
00:55:40,860 --> 00:55:46,060
 So if you have to wait for slip, detect slip instantaneously,

1011
00:55:46,060 --> 00:55:48,300
 and then make a control decision,

1012
00:55:48,300 --> 00:55:51,740
 you're not going to be successful in life.

1013
00:55:51,740 --> 00:55:52,420
 People try that.

1014
00:55:52,420 --> 00:55:53,620
 It's very, very hard to do.

1015
00:55:53,620 --> 00:55:54,780
 The moment of slip is hard.

1016
00:55:54,780 --> 00:55:55,940
 They call it incipient slip.

1017
00:55:55,940 --> 00:55:58,220
 It's like the signals right before slip.

1018
00:55:58,220 --> 00:56:01,700
 But that's a hard way to go.

1019
00:56:01,700 --> 00:56:03,180
 Here's the cool thing.

1020
00:56:03,180 --> 00:56:06,500
 If I can program my interaction in the right way

1021
00:56:06,500 --> 00:56:11,180
 with enough colors of chalk, so that I'm here pulling on this,

1022
00:56:11,180 --> 00:56:16,060
 and I've got virtual set point in some reasonably chosen

1023
00:56:16,060 --> 00:56:19,780
 configuration, then it's going to push me into the wall.

1024
00:56:19,780 --> 00:56:21,460
 It's going to tip me up.

1025
00:56:21,460 --> 00:56:23,740
 But the moment this slips, I don't

1026
00:56:23,740 --> 00:56:26,420
 have to change my controller.

1027
00:56:26,420 --> 00:56:29,300
 It's going to be pushing down.

1028
00:56:29,300 --> 00:56:33,860
 And it's still going to just try to pull itself here.

1029
00:56:33,860 --> 00:56:36,500
 But I will convince you, I hope, that it

1030
00:56:36,500 --> 00:56:37,780
 does exactly the right thing.

1031
00:56:37,780 --> 00:56:47,740
 I have to stop and tell you.

1032
00:56:48,740 --> 00:56:49,220
 OK.

1033
00:56:49,220 --> 00:56:49,740
 Here we go.

1034
00:56:49,740 --> 00:56:52,860
 See that?

1035
00:56:52,860 --> 00:56:54,140
 Watch the set point here.

1036
00:56:54,140 --> 00:56:56,100
 All I'm doing is moving straight here.

1037
00:56:56,100 --> 00:56:57,260
 And I'm moving straight up.

1038
00:56:57,260 --> 00:57:01,420
 Watch what happens.

1039
00:57:01,420 --> 00:57:05,340
 Boom.

1040
00:57:05,340 --> 00:57:05,860
 OK.

1041
00:57:05,860 --> 00:57:09,500
 So at the moment of getting near the top,

1042
00:57:09,500 --> 00:57:11,300
 it's still doing exactly the right thing.

1043
00:57:11,300 --> 00:57:13,580
 All it's going to do is going to push me so

1044
00:57:13,580 --> 00:57:14,820
 that the box is in the corner.

1045
00:57:14,860 --> 00:57:17,860
 Push me so that the box is in the corner.

1046
00:57:17,860 --> 00:57:19,100
 Solves the entire task.

1047
00:57:19,100 --> 00:57:21,940
 No detailed reasoning about forces.

1048
00:57:21,940 --> 00:57:24,580
 No detailed estimation of friction contacts,

1049
00:57:24,580 --> 00:57:26,260
 friction cones, or whatever.

1050
00:57:26,260 --> 00:57:26,980
 Easy solution.

1051
00:57:26,980 --> 00:57:28,580
 That's not the one my daughter took.

1052
00:57:28,580 --> 00:57:30,820
 But if she had a point finger, maybe.

1053
00:57:30,820 --> 00:57:38,460
 This strategy is like a narrow example of the big concept.

1054
00:57:38,460 --> 00:57:44,700
 But I think the concept of programming your interactions

1055
00:57:44,700 --> 00:57:47,100
 instead of programming the forces directly, I think,

1056
00:57:47,100 --> 00:57:50,500
 does work for a lot of different shapes, objects, tasks.

1057
00:57:50,500 --> 00:57:52,660
 There are some classic ones.

1058
00:57:52,660 --> 00:57:57,100
 People talk about wall following or welding or painting.

1059
00:57:57,100 --> 00:57:59,420
 These kind of tasks that are done by traditional robotic

1060
00:57:59,420 --> 00:58:03,100
 arms are well suited to these kind of controllers.

1061
00:58:03,100 --> 00:58:11,660
 Does that make sense?

1062
00:58:11,660 --> 00:58:13,380
 Yeah?

1063
00:58:13,380 --> 00:58:15,340
 There's a paradigm shift of instead

1064
00:58:15,340 --> 00:58:17,300
 of programming the forces directly,

1065
00:58:17,300 --> 00:58:21,020
 you program the dynamics.

1066
00:58:21,020 --> 00:58:23,580
 And what's interesting is when we go away-- on Thursday,

1067
00:58:23,580 --> 00:58:25,580
 when we talk about going away from just assuming

1068
00:58:25,580 --> 00:58:28,380
 you're a point contact, the controller that implemented

1069
00:58:28,380 --> 00:58:30,680
 this, if we had to think about how

1070
00:58:30,680 --> 00:58:36,020
 to take the equations of motion and implement this controller,

1071
00:58:36,020 --> 00:58:37,020
 it's not hard.

1072
00:58:37,020 --> 00:58:42,220
 It's going to be like if I just write the u, z component,

1073
00:58:42,220 --> 00:58:46,980
 it's basically-- these terms have to go on the other side.

1074
00:58:46,980 --> 00:58:56,980
 I get like a b z dot f minus k z minus z desired, which

1075
00:58:56,980 --> 00:59:00,620
 looks a lot like a PD controller.

1076
00:59:00,620 --> 00:59:04,860
 But I also have this gravity compensation.

1077
00:59:04,860 --> 00:59:06,900
 So the way that this got implemented

1078
00:59:06,900 --> 00:59:12,500
 was something that looks like a PD control for the point

1079
00:59:12,500 --> 00:59:15,620
 finger case plus a gravity compensation.

1080
00:59:15,620 --> 00:59:27,780
 And more generally, it's going to look

1081
00:59:27,780 --> 00:59:31,100
 like a bunch of terms that are trying to cancel out

1082
00:59:31,100 --> 00:59:35,660
 the dynamics of your robot and replace them, typically

1083
00:59:35,660 --> 00:59:38,220
 in an end effector coordinates, with the dynamics

1084
00:59:38,220 --> 00:59:39,300
 of a spring.

1085
00:59:39,300 --> 00:59:43,020
 So if I had to do this with joints and make myself

1086
00:59:43,020 --> 00:59:44,480
 act like a spring at the end point,

1087
00:59:44,480 --> 00:59:46,700
 it's not going to be just a simple PD controller.

1088
00:59:46,700 --> 00:59:48,980
 It's going to be mapped through some transformation

1089
00:59:48,980 --> 00:59:49,980
 to the joints.

1090
00:59:49,980 --> 00:59:54,540
 But I can still-- if I master my own robot's dynamics,

1091
00:59:54,540 --> 00:59:57,140
 then I can control the contact forces, the contact

1092
00:59:57,140 --> 00:59:57,820
 interactions.

1093
00:59:57,820 --> 01:00:03,820
 Do people know what impedance control is?

1094
01:00:03,820 --> 01:00:06,140
 I know there's a few people that had better

1095
01:00:06,140 --> 01:00:07,860
 know what impedance control is if you're

1096
01:00:07,860 --> 01:00:11,060
 working in Neville's lab, yeah?

1097
01:00:11,060 --> 01:00:13,380
 So how does impedance control relate to this,

1098
01:00:13,380 --> 01:00:14,140
 if anybody knows?

1099
01:00:30,220 --> 01:00:33,260
 Impedance control is basically a generalization of this.

1100
01:00:33,260 --> 01:00:38,900
 In fact, I would call this an impedance controller.

1101
01:00:38,900 --> 01:00:40,660
 So it's only a generalization.

1102
01:00:40,660 --> 01:00:46,780
 So the thing I did here is I just

1103
01:00:46,780 --> 01:00:49,260
 changed the stiffness and damping.

1104
01:00:49,260 --> 01:00:55,380
 And I didn't try to change the effective mass of the sphere.

1105
01:00:55,380 --> 01:00:58,660
 So I can, with a pretty simple controller that

1106
01:00:58,660 --> 01:01:03,500
 doesn't have to know too much, I can make my sphere

1107
01:01:03,500 --> 01:01:05,620
 act like a spring mass damper with the same mass

1108
01:01:05,620 --> 01:01:10,860
 it originally had, and just act as if it's

1109
01:01:10,860 --> 01:01:13,540
 got a spring attached to it.

1110
01:01:13,540 --> 01:01:17,020
 More generally, if you have a real mastery of your dynamics,

1111
01:01:17,020 --> 01:01:19,500
 you can even change the effective mass.

1112
01:01:19,500 --> 01:01:20,900
 So if someone were to push on me,

1113
01:01:20,900 --> 01:01:22,320
 even if my robot's very heavy, you

1114
01:01:22,320 --> 01:01:24,500
 can make it act very light.

1115
01:01:24,500 --> 01:01:26,180
 That's a harder thing to implement.

1116
01:01:26,180 --> 01:01:29,380
 And depending on how you implement it,

1117
01:01:29,380 --> 01:01:32,340
 with acceleration terms or force terms or anything like this,

1118
01:01:32,340 --> 01:01:36,140
 it can be subtle to get right.

1119
01:01:36,140 --> 01:01:38,780
 And it's also subtle in the bandwidth

1120
01:01:38,780 --> 01:01:41,300
 of your controller sense.

1121
01:01:41,300 --> 01:01:45,380
 So I think impedance control is the right--

1122
01:01:45,380 --> 01:01:48,380
 you could use impedance control for the stiffness control

1123
01:01:48,380 --> 01:01:50,020
 and be completely OK.

1124
01:01:50,020 --> 01:01:51,900
 You could talk to your friends at conferences,

1125
01:01:51,900 --> 01:01:53,440
 say impedance control, and mean that.

1126
01:01:53,440 --> 01:01:54,060
 It would be OK.

1127
01:01:54,060 --> 01:01:55,460
 People do that.

1128
01:01:55,460 --> 01:01:58,140
 Strictly, the full glory of impedance control

1129
01:01:58,140 --> 01:02:01,620
 is realized if you're also trying to change your mass.

1130
01:02:01,620 --> 01:02:03,820
 And I think that's less common, actually.

1131
01:02:03,820 --> 01:02:05,660
 The full glory of impedance control, I think,

1132
01:02:05,660 --> 01:02:08,220
 is maybe less realized, just because changing

1133
01:02:08,220 --> 01:02:10,380
 masses is nasty business.

1134
01:02:10,380 --> 01:02:11,580
 I think IWA doesn't do that.

1135
01:02:11,580 --> 01:02:13,380
 I think they went-- you could sort of watch

1136
01:02:13,380 --> 01:02:15,540
 the series of progression of their papers.

1137
01:02:15,540 --> 01:02:16,700
 And there were times where they were really

1138
01:02:16,700 --> 01:02:17,820
 trying to cancel that mass.

1139
01:02:17,820 --> 01:02:19,820
 And the final controller just didn't do it.

1140
01:02:23,820 --> 01:02:28,060
 OK, so you know what impedance control is, right?

1141
01:02:28,060 --> 01:02:28,580
 I hope.

1142
01:02:28,580 --> 01:02:33,380
 I mean, there is a very different way to teach that.

1143
01:02:33,380 --> 01:02:36,300
 This is maybe a much more intuitive--

1144
01:02:36,300 --> 01:02:39,980
 trying to appeal to your intuition way to do it.

1145
01:02:39,980 --> 01:02:41,860
 But I think that is the core idea.

1146
01:02:41,860 --> 01:02:53,740
 OK, let me just move to remote-centered compliance.

1147
01:02:53,740 --> 01:02:56,940
 OK, so one of the best--

1148
01:02:56,940 --> 01:03:00,660
 this is a line of work, all this force control and impedance

1149
01:03:00,660 --> 01:03:02,060
 control.

1150
01:03:02,060 --> 01:03:06,140
 Neville Hogan wrote the famous impedance control papers

1151
01:03:06,140 --> 01:03:09,420
 in the early '80s, up to like '85.

1152
01:03:09,420 --> 01:03:13,780
 This is core robotics wisdom.

1153
01:03:13,780 --> 01:03:15,500
 It's also super relevant today.

1154
01:03:15,500 --> 01:03:17,820
 If you're programming-- if you're

1155
01:03:17,820 --> 01:03:19,700
 trying to train an RL controller,

1156
01:03:19,700 --> 01:03:22,700
 and you have a choice, given your task,

1157
01:03:22,700 --> 01:03:25,620
 about choosing a position command, an impedance command,

1158
01:03:25,620 --> 01:03:27,420
 a torque command, those are going

1159
01:03:27,420 --> 01:03:30,140
 to work very differently in your training procedures.

1160
01:03:30,140 --> 01:03:32,020
 Knowing a few things about impedance control

1161
01:03:32,020 --> 01:03:33,900
 is going to serve you well for a lot of tasks

1162
01:03:33,900 --> 01:03:36,900
 that are contact-rich.

1163
01:03:36,900 --> 01:03:38,580
 You have to understand when they work

1164
01:03:38,580 --> 01:03:39,620
 and when they don't work.

1165
01:03:39,620 --> 01:03:45,540
 But this is really core foundational knowledge.

1166
01:03:45,540 --> 01:03:49,820
 And I would say, in that spirit of the '80s, where everybody

1167
01:03:49,820 --> 01:03:52,140
 was trying to figure out all the different ways to think

1168
01:03:52,140 --> 01:03:55,900
 about force control and do rich tasks,

1169
01:03:55,900 --> 01:03:57,460
 there was a canonical task, which

1170
01:03:57,460 --> 01:03:58,780
 was this peg-and-hole task.

1171
01:03:58,780 --> 01:03:59,280
 Right?

1172
01:03:59,280 --> 01:04:17,180
 It actually motivated some great work in motion planning,

1173
01:04:17,180 --> 01:04:18,980
 in addition to great work in control.

1174
01:04:18,980 --> 01:04:19,620
 OK?

1175
01:04:19,620 --> 01:04:23,180
 So you've got a hole in the world,

1176
01:04:23,180 --> 01:04:25,220
 and you've got a peg that's roughly the same size

1177
01:04:25,220 --> 01:04:28,900
 as the hole in the world.

1178
01:04:28,900 --> 01:04:31,740
 And you've got to get this in here.

1179
01:04:31,740 --> 01:04:32,240
 Right?

1180
01:04:32,240 --> 01:04:35,660
 And if you try to do that with pure position control mode,

1181
01:04:35,660 --> 01:04:37,980
 it can be nasty.

1182
01:04:37,980 --> 01:04:39,540
 Nasty things happen.

1183
01:04:39,540 --> 01:04:40,020
 OK?

1184
01:04:40,020 --> 01:04:44,860
 So how do we think about how to do this?

1185
01:04:44,860 --> 01:04:47,380
 Well, first off, if you're actually

1186
01:04:47,380 --> 01:04:49,780
 trying to do peg-and-hole, then it's

1187
01:04:49,780 --> 01:04:51,100
 OK to cheat a little bit.

1188
01:04:51,100 --> 01:04:55,220
 You kind of chamfer the corners, because that's just worth--

1189
01:04:55,220 --> 01:04:57,100
 it doesn't take any effort, really,

1190
01:04:57,100 --> 01:04:58,780
 and it's going to make everything better.

1191
01:04:58,780 --> 01:05:00,940
 You might do it up here, too.

1192
01:05:00,940 --> 01:05:02,060
 OK, that's fine.

1193
01:05:02,060 --> 01:05:04,580
 But still, all this weird stuff happens.

1194
01:05:04,580 --> 01:05:07,060
 In particular, the bad case--

1195
01:05:07,060 --> 01:05:10,500
 if I'm coming down and I'm just a little bit out of alignment,

1196
01:05:10,500 --> 01:05:14,660
 I might make contact here early.

1197
01:05:14,660 --> 01:05:15,380
 Right?

1198
01:05:15,380 --> 01:05:17,340
 Get some contact forces here.

1199
01:05:17,340 --> 01:05:18,780
 If I were to continue to push down

1200
01:05:18,780 --> 01:05:20,300
 without paying much attention, I'm

1201
01:05:20,300 --> 01:05:22,220
 going to get very large forces out.

1202
01:05:22,220 --> 01:05:23,260
 OK?

1203
01:05:23,260 --> 01:05:29,060
 Even worse is if I get myself in this configuration,

1204
01:05:29,060 --> 01:05:33,340
 where I'm making contact here.

1205
01:05:33,340 --> 01:05:35,780
 I'm getting potentially large contact forces here.

1206
01:05:35,780 --> 01:05:38,180
 I'm getting potentially large contact forces here.

1207
01:05:38,180 --> 01:05:40,820
 You can actually get the peg jammed in the hole.

1208
01:05:40,820 --> 01:05:43,620
 Just absolutely-- it's also in a place

1209
01:05:43,620 --> 01:05:47,460
 where Coulomb friction isn't going to give you--

1210
01:05:47,460 --> 01:05:50,420
 it's going to sort of be in the underdetermined problem

1211
01:05:50,420 --> 01:05:51,740
 for Coulomb friction.

1212
01:05:51,740 --> 01:05:54,620
 And in practice, your peg's going to get stuck.

1213
01:05:54,620 --> 01:05:56,940
 OK?

1214
01:05:56,940 --> 01:05:59,420
 So it was decided early on that it

1215
01:05:59,420 --> 01:06:01,500
 pays to be compliant when you're doing this,

1216
01:06:01,500 --> 01:06:04,740
 to try to be in a forced control mode or a compliant control

1217
01:06:04,740 --> 01:06:06,540
 mode.

1218
01:06:06,540 --> 01:06:10,460
 And in particular, you can do stiffness control

1219
01:06:10,460 --> 01:06:11,740
 in orientation, too.

1220
01:06:12,740 --> 01:06:25,900
 So you can program a rotational stiffness of the hand.

1221
01:06:25,900 --> 01:06:26,900
 OK?

1222
01:06:26,900 --> 01:06:30,260
 So in position, you'd like for the case--

1223
01:06:30,260 --> 01:06:38,500
 you've estimated things just a little bit wrong,

1224
01:06:38,500 --> 01:06:41,260
 and you're coming down like this.

1225
01:06:41,260 --> 01:06:41,760
 OK?

1226
01:06:41,760 --> 01:06:46,740
 You'd like to have some stiffness--

1227
01:06:46,740 --> 01:06:49,620
 a spring sort of in the horizontal stiffness

1228
01:06:49,620 --> 01:06:53,340
 so that the controller is OK with sliding a little bit

1229
01:06:53,340 --> 01:06:55,100
 in order to go in.

1230
01:06:55,100 --> 01:06:58,220
 That's the translational version.

1231
01:06:58,220 --> 01:07:05,620
 And then up here, you'd like in that initial contact

1232
01:07:05,620 --> 01:07:11,420
 to have some ability to have some rotational stiffness

1233
01:07:11,420 --> 01:07:16,820
 so that the peg will align itself and go in.

1234
01:07:16,820 --> 01:07:18,780
 But if you think for a few minutes

1235
01:07:18,780 --> 01:07:24,580
 about how that rotational stiffness needs to look,

1236
01:07:24,580 --> 01:07:30,220
 it needs to-- you need to have some center of your rotation,

1237
01:07:30,220 --> 01:07:33,140
 some coordinate frame to represent the rotation about.

1238
01:07:33,140 --> 01:07:34,140
 OK?

1239
01:07:34,140 --> 01:07:37,340
 If you choose a rotational stiffness around here

1240
01:07:37,340 --> 01:07:39,740
 and say that if I'm deviating from this,

1241
01:07:39,740 --> 01:07:43,900
 I will pull myself back, that's going to do the wrong thing.

1242
01:07:43,900 --> 01:07:45,380
 When I come down and go like this,

1243
01:07:45,380 --> 01:07:49,540
 it's going to allow me to go to bend more this way.

1244
01:07:49,540 --> 01:07:52,340
 That's not what you want.

1245
01:07:52,340 --> 01:07:56,700
 What you need instead is to have an effective center

1246
01:07:56,700 --> 01:07:59,340
 of compliance that's over here.

1247
01:07:59,340 --> 01:08:01,220
 OK?

1248
01:08:01,220 --> 01:08:05,900
 Typically at the end point, I've got too many pegs

1249
01:08:05,900 --> 01:08:06,740
 lying around here.

1250
01:08:06,740 --> 01:08:21,580
 Pegs coming in a little bit out of alignment.

1251
01:08:21,580 --> 01:08:22,780
 OK?

1252
01:08:22,780 --> 01:08:25,180
 Typically at the end or even beyond the end,

1253
01:08:25,180 --> 01:08:30,580
 I want to think about having a stiffness programmed like this

1254
01:08:30,580 --> 01:08:33,420
 so that if I were to push here, it will actually

1255
01:08:33,420 --> 01:08:38,900
 cause the peg to rotate this way in order to come down and in.

1256
01:08:38,900 --> 01:08:40,220
 OK?

1257
01:08:40,220 --> 01:08:52,300
 So that concept is called a remote centered compliance,

1258
01:08:52,300 --> 01:08:54,700
 often RCC.

1259
01:08:54,700 --> 01:08:58,100
 It's really just the choice of where you parameterized

1260
01:08:58,100 --> 01:08:58,820
 your orientation.

1261
01:08:58,820 --> 01:08:59,820
 Yes?

1262
01:08:59,820 --> 01:09:00,320
 [INAUDIBLE]

1263
01:09:00,320 --> 01:09:12,900
 So let me draw it in.

1264
01:09:12,900 --> 01:09:16,460
 Let's say that-- yeah, let me draw it more carefully.

1265
01:09:16,460 --> 01:09:17,380
 Thank you for asking.

1266
01:09:17,380 --> 01:09:21,060
 The question was, what the heck are you drawing?

1267
01:09:21,060 --> 01:09:23,860
 So let's say I've got a desired orientation like this.

1268
01:09:23,860 --> 01:09:24,340
 OK?

1269
01:09:24,340 --> 01:09:28,860
 Now I come down, and I get some deviation from that position.

1270
01:09:28,860 --> 01:09:32,540
 OK, so I'm getting some forces here.

1271
01:09:32,540 --> 01:09:35,700
 That could cause me to deviate like this.

1272
01:09:35,700 --> 01:09:36,500
 OK?

1273
01:09:36,500 --> 01:09:40,420
 So I want to basically pull myself in this direction.

1274
01:09:40,420 --> 01:09:44,620
 So if I get a force that's shoving me in that way,

1275
01:09:44,620 --> 01:09:46,700
 I want it to act like a spring that's

1276
01:09:46,700 --> 01:09:50,820
 pulling me towards that configuration.

1277
01:09:50,820 --> 01:09:51,320
 OK?

1278
01:09:51,320 --> 01:09:53,220
 And that'll align me and bring me down in.

1279
01:09:53,220 --> 01:09:58,840
 OK.

1280
01:09:58,840 --> 01:10:03,180
 So you can program that with stiffness control

1281
01:10:03,180 --> 01:10:05,700
 and have some success.

1282
01:10:05,700 --> 01:10:08,180
 But I would say one of the best things that happened

1283
01:10:08,180 --> 01:10:10,780
 in all of this work is that people went through

1284
01:10:10,780 --> 01:10:13,700
 and realized, actually, I don't even have to program that.

1285
01:10:13,700 --> 01:10:17,660
 I can build a mechanical device that

1286
01:10:17,660 --> 01:10:23,500
 acts like a spring that has a center of rotation

1287
01:10:23,500 --> 01:10:25,340
 off the end of the tip.

1288
01:10:25,340 --> 01:10:25,820
 OK?

1289
01:10:25,820 --> 01:10:28,880
 So this is a passive remote center compliance.

1290
01:10:28,880 --> 01:10:31,960
 And I just have to show you some of these old videos.

1291
01:10:31,960 --> 01:10:32,560
 They're so good.

1292
01:10:32,560 --> 01:10:38,480
 First of all, I was super--

1293
01:10:38,480 --> 01:10:41,440
 I had forgotten, but it's totally

1294
01:10:41,440 --> 01:10:44,880
 done by a guy named Drake, which is--

1295
01:10:44,880 --> 01:10:46,960
 OK, so yeah, this is a thesis.

1296
01:10:46,960 --> 01:10:51,400
 A lot of this work was done at MIT for some reason.

1297
01:10:51,400 --> 01:10:54,760
 A lot of the Pagan-Hall early work on impedance control

1298
01:10:54,760 --> 01:10:56,160
 was at MIT.

1299
01:10:56,160 --> 01:10:58,000
 All the motion planning stuff was done at MIT.

1300
01:10:58,000 --> 01:11:02,160
 And Pagan-Halls were big at MIT in the '70s and '80s.

1301
01:11:02,160 --> 01:11:03,320
 OK?

1302
01:11:03,320 --> 01:11:05,440
 And these are the pictures I was trying to show you.

1303
01:11:05,440 --> 01:11:10,200
 So the horizontal stiffness, it looks like this.

1304
01:11:10,200 --> 01:11:13,960
 It allows me to change my translational position.

1305
01:11:13,960 --> 01:11:17,560
 This is right out of Drake's 1978 thesis.

1306
01:11:17,560 --> 01:11:18,480
 OK?

1307
01:11:18,480 --> 01:11:20,560
 And you have an orientational stiffness

1308
01:11:20,560 --> 01:11:23,680
 that looks like this that allows me to align.

1309
01:11:23,680 --> 01:11:24,880
 OK?

1310
01:11:24,880 --> 01:11:28,520
 This is the device he built. OK?

1311
01:11:28,520 --> 01:11:29,360
 It's crazy.

1312
01:11:29,360 --> 01:11:32,120
 How do you make springs that are up here

1313
01:11:32,120 --> 01:11:34,720
 act like the center of the spring is down here?

1314
01:11:34,720 --> 01:11:35,960
 Right?

1315
01:11:35,960 --> 01:11:36,720
 You can do it.

1316
01:11:36,720 --> 01:11:39,760
 It's just a-- it's a geometric puzzle, roughly,

1317
01:11:39,760 --> 01:11:42,560
 of how do you align the springs and counterweight this

1318
01:11:42,560 --> 01:11:44,140
 and counterbalance this and whatever.

1319
01:11:44,140 --> 01:11:46,280
 And you can build a device purely

1320
01:11:46,280 --> 01:11:48,120
 in the end effector of the robot that

1321
01:11:48,120 --> 01:11:52,160
 acts like it had its center of its rotation down here.

1322
01:11:52,160 --> 01:11:53,960
 Remote-centered compliance.

1323
01:11:53,960 --> 01:11:54,460
 OK?

1324
01:11:54,460 --> 01:12:00,600
 The instant center side beam deflections are down here.

1325
01:12:00,600 --> 01:12:01,100
 OK?

1326
01:12:01,100 --> 01:12:06,320
 And this is kind of what they look like today.

1327
01:12:06,320 --> 01:12:08,520
 If you were to go-- you can buy these devices still,

1328
01:12:08,520 --> 01:12:10,160
 and they're still super useful to buy

1329
01:12:10,160 --> 01:12:14,360
 a device that's got these sort of lined up springs like this.

1330
01:12:14,360 --> 01:12:16,480
 And even-- I love these older videos.

1331
01:12:16,480 --> 01:12:16,960
 OK?

1332
01:12:16,960 --> 01:12:19,400
 This is the ATI, the company that will sell you one, right?

1333
01:12:19,400 --> 01:12:20,200
 One of these devices.

1334
01:12:20,200 --> 01:12:26,480
 And in parts assembly, right?

1335
01:12:26,480 --> 01:12:28,280
 This is a case where--

1336
01:12:28,280 --> 01:12:31,320
 I won't play the audio, but it's great.

1337
01:12:31,320 --> 01:12:34,360
 But they have some mating--

1338
01:12:34,360 --> 01:12:36,440
 they've got some small holes in the part that's

1339
01:12:36,440 --> 01:12:41,240
 in the robot's hand, some small stand-ups right there

1340
01:12:41,240 --> 01:12:42,400
 that they have to--

1341
01:12:42,400 --> 01:12:44,920
 and they just sort of jam it down and just

1342
01:12:44,920 --> 01:12:48,960
 rely on the passive compliance, remote-centered compliance

1343
01:12:48,960 --> 01:12:50,560
 of this to do all that alignment,

1344
01:12:50,560 --> 01:12:54,360
 both the horizontal and the rotational.

1345
01:12:54,360 --> 01:12:56,280
 And they can do that--

1346
01:12:56,280 --> 01:12:58,320
 all the controllers, especially then,

1347
01:12:58,320 --> 01:12:59,640
 had bandwidth limitations.

1348
01:12:59,640 --> 01:13:01,960
 Like, implementing that in software

1349
01:13:01,960 --> 01:13:03,780
 is going to get you only so far, right?

1350
01:13:03,780 --> 01:13:05,720
 You can only be so fast.

1351
01:13:05,720 --> 01:13:08,480
 But the physical springs are instantaneous,

1352
01:13:08,480 --> 01:13:10,400
 continuous time, right?

1353
01:13:10,400 --> 01:13:12,880
 So for high-speed assembly operations,

1354
01:13:12,880 --> 01:13:15,640
 these physical devices made the difference.

1355
01:13:15,640 --> 01:13:16,140
 Yeah?

1356
01:13:16,140 --> 01:13:16,640
 [INAUDIBLE]

1357
01:13:16,640 --> 01:13:22,280
 Are the ligaments in my fingers doing remote-centered

1358
01:13:22,280 --> 01:13:22,760
 compliance?

1359
01:13:22,760 --> 01:13:23,260
 Is that--

1360
01:13:23,260 --> 01:13:23,760
 [INAUDIBLE]

1361
01:13:23,760 --> 01:13:30,960
 Right?

1362
01:13:30,960 --> 01:13:33,080
 There's pretty complicated stuff going on there.

1363
01:13:33,080 --> 01:13:37,280
 I don't know if they're really tuned up

1364
01:13:37,280 --> 01:13:39,280
 to be remote-centered, right?

1365
01:13:39,280 --> 01:13:40,440
 And they're also, of course--

1366
01:13:40,440 --> 01:13:44,000
 I have an example.

1367
01:13:44,000 --> 01:13:45,320
 OK.

1368
01:13:45,320 --> 01:13:47,080
 There is actually a great example, maybe.

1369
01:13:47,080 --> 01:13:48,760
 So it's one of my--

1370
01:13:48,760 --> 01:13:51,400
 throughout the years, I've watched for cool animal tricks,

1371
01:13:51,400 --> 01:13:56,680
 and eagles pulling mountain goats off the side of a mountain

1372
01:13:56,680 --> 01:13:57,520
 and stuff like that.

1373
01:13:57,520 --> 01:13:58,520
 I've got all those videos.

1374
01:13:58,520 --> 01:14:00,920
 OK.

1375
01:14:00,920 --> 01:14:05,720
 Have you ever thought about how a bird sits on a perch

1376
01:14:05,720 --> 01:14:09,440
 and falls asleep and doesn't fall off?

1377
01:14:09,440 --> 01:14:10,880
 It's actually really awesome.

1378
01:14:10,880 --> 01:14:11,360
 OK.

1379
01:14:11,360 --> 01:14:13,520
 So it's a little bit like this, right?

1380
01:14:13,520 --> 01:14:19,280
 So they have a tendon that wraps around their talon,

1381
01:14:19,280 --> 01:14:20,360
 up around--

1382
01:14:20,360 --> 01:14:24,080
 it looks like the knee, but it's actually kind of their heel--

1383
01:14:24,080 --> 01:14:26,720
 up into their torso, right?

1384
01:14:26,720 --> 01:14:31,140
 So when they relax, it clamps their hands, right?

1385
01:14:31,140 --> 01:14:33,040
 And provides all the clamping force they need,

1386
01:14:33,040 --> 01:14:35,120
 so they don't fall off the perch.

1387
01:14:35,120 --> 01:14:37,040
 That's kind of like a remote center compliance.

1388
01:14:37,040 --> 01:14:38,720
 It's like a grasp thing.

1389
01:14:38,720 --> 01:14:40,640
 So I have learned over the years--

1390
01:14:40,640 --> 01:14:42,520
 there's other examples.

1391
01:14:42,520 --> 01:14:45,960
 The reason that a horse can run faster than us

1392
01:14:45,960 --> 01:14:48,280
 is because they have this huge tendon running down

1393
01:14:48,280 --> 01:14:50,640
 the backside of their hip.

1394
01:14:50,640 --> 01:14:52,920
 Typically, the understanding of how fast

1395
01:14:52,920 --> 01:14:55,260
 you can swing your leg forward if you're a runner

1396
01:14:55,260 --> 01:14:57,680
 is based on your muscle dynamics, and that's limiting.

1397
01:14:57,680 --> 01:15:00,200
 You can only accelerate so fast.

1398
01:15:00,200 --> 01:15:03,900
 But if you load up a catapult tendon during stance,

1399
01:15:03,900 --> 01:15:06,880
 and you're basically winding up the catapult,

1400
01:15:06,880 --> 01:15:09,760
 and then you lift it up and it goes and shoots it forward,

1401
01:15:09,760 --> 01:15:11,760
 then you can run faster than a human, obviously.

1402
01:15:11,760 --> 01:15:13,920
 So that's how horses do it.

1403
01:15:13,920 --> 01:15:16,440
 And over and over and over, I've seen examples in animals

1404
01:15:16,440 --> 01:15:20,220
 where there's very clever mechanical designs

1405
01:15:20,220 --> 01:15:24,720
 and wirings of the tendons that make these things just amazing.

1406
01:15:24,720 --> 01:15:26,600
 So I totally believe it.

1407
01:15:26,600 --> 01:15:28,400
 Is it remote center compliance?

1408
01:15:28,400 --> 01:15:29,280
 Something like that.

1409
01:15:32,560 --> 01:15:37,300
 OK, I'm going to not mention hybrid force position control

1410
01:15:37,300 --> 01:15:39,020
 now just because it's another thing,

1411
01:15:39,020 --> 01:15:41,900
 but I think that's a pretty good place.

1412
01:15:41,900 --> 01:15:45,660
 I mean, I just talked about birds on perches.

1413
01:15:45,660 --> 01:15:47,480
 What else can you do beyond that?

1414
01:15:47,480 --> 01:15:51,260
 So let's call it for today, and we will see you on Thursday.

