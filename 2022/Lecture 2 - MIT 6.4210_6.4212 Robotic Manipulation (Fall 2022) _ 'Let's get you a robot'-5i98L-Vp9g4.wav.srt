1
00:00:00,000 --> 00:00:10,000
 [BLANK_AUDIO]

2
00:00:10,000 --> 00:00:20,000
 [BLANK_AUDIO]

3
00:00:20,000 --> 00:00:30,000
 [BLANK_AUDIO]

4
00:00:30,000 --> 00:00:40,000
 [BLANK_AUDIO]

5
00:00:40,000 --> 00:00:50,000
 [BLANK_AUDIO]

6
00:00:50,000 --> 00:01:00,000
 [BLANK_AUDIO]

7
00:01:00,000 --> 00:01:10,000
 [BLANK_AUDIO]

8
00:01:10,000 --> 00:01:20,000
 [BLANK_AUDIO]

9
00:01:20,000 --> 00:01:30,000
 [BLANK_AUDIO]

10
00:01:30,000 --> 00:01:40,000
 [BLANK_AUDIO]

11
00:01:40,000 --> 00:01:50,000
 [BLANK_AUDIO]

12
00:01:50,000 --> 00:02:00,000
 [BLANK_AUDIO]

13
00:02:00,000 --> 00:02:10,000
 [BLANK_AUDIO]

14
00:02:10,000 --> 00:02:20,000
 [BLANK_AUDIO]

15
00:02:20,000 --> 00:02:30,000
 [BLANK_AUDIO]

16
00:02:30,000 --> 00:02:40,000
 [BLANK_AUDIO]

17
00:02:40,000 --> 00:02:50,000
 [BLANK_AUDIO]

18
00:02:50,000 --> 00:03:00,000
 [BLANK_AUDIO]

19
00:03:00,000 --> 00:03:10,000
 [BLANK_AUDIO]

20
00:03:10,000 --> 00:03:20,000
 [BLANK_AUDIO]

21
00:03:20,000 --> 00:03:30,000
 [BLANK_AUDIO]

22
00:03:30,000 --> 00:03:40,000
 [BLANK_AUDIO]

23
00:03:40,000 --> 00:03:50,000
 [BLANK_AUDIO]

24
00:03:50,000 --> 00:04:00,000
 [BLANK_AUDIO]

25
00:04:00,000 --> 00:04:10,000
 [BLANK_AUDIO]

26
00:04:10,000 --> 00:04:20,000
 [BLANK_AUDIO]

27
00:04:20,000 --> 00:04:30,000
 [BLANK_AUDIO]

28
00:04:30,000 --> 00:04:40,000
 [BLANK_AUDIO]

29
00:04:40,000 --> 00:04:50,000
 [BLANK_AUDIO]

30
00:04:50,000 --> 00:05:00,000
 [BLANK_AUDIO]

31
00:05:00,000 --> 00:05:10,000
 [BLANK_AUDIO]

32
00:05:10,000 --> 00:05:20,000
 [BLANK_AUDIO]

33
00:05:20,000 --> 00:05:30,000
 [BLANK_AUDIO]

34
00:05:30,000 --> 00:05:40,000
 [BLANK_AUDIO]

35
00:05:40,000 --> 00:05:50,000
 [BLANK_AUDIO]

36
00:05:50,000 --> 00:06:00,000
 [BLANK_AUDIO]

37
00:06:00,000 --> 00:06:10,000
 [BLANK_AUDIO]

38
00:06:10,000 --> 00:06:20,000
 [BLANK_AUDIO]

39
00:06:20,000 --> 00:06:30,000
 [BLANK_AUDIO]

40
00:06:30,000 --> 00:06:40,000
 [BLANK_AUDIO]

41
00:06:40,000 --> 00:06:50,000
 [BLANK_AUDIO]

42
00:06:50,000 --> 00:07:00,000
 [BLANK_AUDIO]

43
00:07:00,000 --> 00:07:10,000
 [BLANK_AUDIO]

44
00:07:10,000 --> 00:07:20,000
 [BLANK_AUDIO]

45
00:07:20,000 --> 00:07:30,000
 [BLANK_AUDIO]

46
00:07:30,000 --> 00:07:40,000
 [BLANK_AUDIO]

47
00:07:40,000 --> 00:07:50,000
 [BLANK_AUDIO]

48
00:07:50,000 --> 00:08:00,000
 [BLANK_AUDIO]

49
00:08:00,000 --> 00:08:10,000
 [BLANK_AUDIO]

50
00:08:10,000 --> 00:08:20,000
 [BLANK_AUDIO]

51
00:08:20,000 --> 00:08:30,000
 [BLANK_AUDIO]

52
00:08:30,000 --> 00:08:40,000
 [BLANK_AUDIO]

53
00:08:40,000 --> 00:08:50,000
 [BLANK_AUDIO]

54
00:08:50,000 --> 00:09:00,000
 [BLANK_AUDIO]

55
00:09:00,000 --> 00:09:10,000
 [BLANK_AUDIO]

56
00:09:10,000 --> 00:09:20,000
 [BLANK_AUDIO]

57
00:09:20,000 --> 00:09:30,000
 [BLANK_AUDIO]

58
00:09:30,000 --> 00:09:40,000
 [BLANK_AUDIO]

59
00:09:40,000 --> 00:09:50,000
 [BLANK_AUDIO]

60
00:09:50,000 --> 00:10:00,000
 [BLANK_AUDIO]

61
00:10:00,000 --> 00:10:10,000
 [BLANK_AUDIO]

62
00:10:10,000 --> 00:10:20,000
 [BLANK_AUDIO]

63
00:10:20,000 --> 00:10:30,000
 [BLANK_AUDIO]

64
00:10:30,000 --> 00:10:40,000
 [BLANK_AUDIO]

65
00:10:40,000 --> 00:10:50,000
 [BLANK_AUDIO]

66
00:10:50,000 --> 00:11:00,000
 [BLANK_AUDIO]

67
00:11:00,000 --> 00:11:10,000
 [BLANK_AUDIO]

68
00:11:10,000 --> 00:11:20,000
 [BLANK_AUDIO]

69
00:11:20,000 --> 00:11:30,000
 [BLANK_AUDIO]

70
00:11:30,000 --> 00:11:40,000
 [BLANK_AUDIO]

71
00:11:40,000 --> 00:11:50,000
 [BLANK_AUDIO]

72
00:11:50,000 --> 00:12:00,000
 [BLANK_AUDIO]

73
00:12:00,000 --> 00:12:10,000
 [BLANK_AUDIO]

74
00:12:10,000 --> 00:12:20,000
 [BLANK_AUDIO]

75
00:12:20,000 --> 00:12:30,000
 [BLANK_AUDIO]

76
00:12:30,000 --> 00:12:40,000
 [BLANK_AUDIO]

77
00:12:40,000 --> 00:12:50,000
 [BLANK_AUDIO]

78
00:12:50,000 --> 00:13:00,000
 [BLANK_AUDIO]

79
00:13:00,000 --> 00:13:10,000
 [BLANK_AUDIO]

80
00:13:10,000 --> 00:13:20,000
 [BLANK_AUDIO]

81
00:13:20,000 --> 00:13:30,000
 [BLANK_AUDIO]

82
00:13:30,000 --> 00:13:40,000
 [BLANK_AUDIO]

83
00:13:40,000 --> 00:13:50,000
 [BLANK_AUDIO]

84
00:13:50,000 --> 00:13:53,000
 [BLANK_AUDIO]

85
00:13:53,000 --> 00:13:56,000
 So we tried to learn a few lessons from last time.

86
00:13:56,000 --> 00:14:01,000
 The screen was too dim on the video stream.

87
00:14:01,000 --> 00:14:04,000
 We thought, oh, we'll just turn the lights down, that'll fix it.

88
00:14:04,000 --> 00:14:08,000
 Turns out the big skylight is the offender, not the lights in the room.

89
00:14:08,000 --> 00:14:11,000
 So we probably didn't fix it, and I apologize.

90
00:14:11,000 --> 00:14:14,000
 We posted on Piazza, though, hopefully, the link to the slides,

91
00:14:14,000 --> 00:14:17,000
 if you want to follow along that way.

92
00:14:17,000 --> 00:14:20,000
 I also thought I wrote too small last time, so

93
00:14:20,000 --> 00:14:24,000
 I'm going to try to write comically big.

94
00:14:24,000 --> 00:14:27,000
 We'll see how that goes.

95
00:14:27,000 --> 00:14:33,000
 Okay, so it makes sense that there's, sort of the words make perfect sense.

96
00:14:33,000 --> 00:14:36,000
 I could command my robots by sending position commands.

97
00:14:36,000 --> 00:14:40,000
 When I say a position in terms, in the sense of a robotic arm,

98
00:14:40,000 --> 00:14:44,000
 I'm actually sending the positions or the joint angles of the robot.

99
00:14:44,000 --> 00:14:47,000
 So I could command saying, go to this joint angle, go to this joint angle,

100
00:14:47,000 --> 00:14:50,000
 follow this time series of joint angles.

101
00:14:50,000 --> 00:14:53,000
 These are the ways you talk to a position controlled robot.

102
00:14:53,000 --> 00:14:56,000
 That is very different than saying, I want you to apply these forces or

103
00:14:56,000 --> 00:14:59,000
 these torques at the joints, okay?

104
00:14:59,000 --> 00:15:04,000
 And in order to do torque control, you have to have a certain type of robot.

105
00:15:04,000 --> 00:15:08,000
 In fact, if you care very much about torque control and torque sensing,

106
00:15:08,000 --> 00:15:14,000
 that sort of quickly reduces the field of robots that are viable for you.

107
00:15:14,000 --> 00:15:19,000
 And only a few of these are actually torque sensing and torque controlled robots.

108
00:15:19,000 --> 00:15:21,000
 And I wonder if you know why that is.

109
00:15:21,000 --> 00:15:26,000
 Why is it that so many robots are position controlled, right?

110
00:15:26,000 --> 00:15:29,000
 Why are so many robot arms position controlled?

111
00:15:29,000 --> 00:15:33,000
 It's actually fairly, there's a fairly sophisticated argument behind it.

112
00:15:33,000 --> 00:15:35,000
 I'll give you a light version of it.

113
00:15:35,000 --> 00:15:40,000
 There's a slightly more dense version of it in the notes if you care to read.

114
00:15:40,000 --> 00:15:44,000
 But there's a couple big ideas that I think do affect the way we talk to our

115
00:15:44,000 --> 00:15:48,000
 robots that I want you to make to understand.

116
00:15:48,000 --> 00:15:53,000
 All of the robots on this screen are driven by electric motors, okay?

117
00:15:53,000 --> 00:15:55,000
 I think that's true, yeah.

118
00:15:55,000 --> 00:16:01,000
 So the core thing that is sort of supplying power to our joints is an electric motor.

119
00:16:01,000 --> 00:16:08,000
 An electric motor, you would think the standard model of an electric motor

120
00:16:08,000 --> 00:16:11,000
 would be that there's some sort of simple relationship.

121
00:16:11,000 --> 00:16:16,000
 If I put in some current into the motor,

122
00:16:16,000 --> 00:16:23,000
 it should be proportional to the torque at the joint.

123
00:16:23,000 --> 00:16:25,000
 Okay?

124
00:16:25,000 --> 00:16:33,000
 Similarly, the voltage you'd expect to be proportional to the speed of the joint.

125
00:16:33,000 --> 00:16:36,000
 And these are fairly simple relationships.

126
00:16:36,000 --> 00:16:39,000
 When you're in the sort of right spot in the torque speed curves,

127
00:16:39,000 --> 00:16:46,000
 then these things actually are pretty good models of how the motors we build today operate.

128
00:16:46,000 --> 00:16:49,000
 Okay, so if we have this sort of nice proportional relationship,

129
00:16:49,000 --> 00:16:52,000
 I mean, they're often even just a linear relationship or

130
00:16:52,000 --> 00:16:55,000
 affine relationship between current and torque.

131
00:16:55,000 --> 00:16:58,000
 Then it seems kind of silly to say, well, most of these robots,

132
00:16:58,000 --> 00:17:00,000
 most robots today aren't actually torque controlled.

133
00:17:00,000 --> 00:17:03,000
 Because why, if I, certainly I could just supply, you know,

134
00:17:03,000 --> 00:17:05,000
 control the current I'm sending to the motor, right?

135
00:17:05,000 --> 00:17:08,000
 Why can't I then control the torque of the motor?

136
00:17:08,000 --> 00:17:14,000
 And the reason is that electric motors like to spin fast,

137
00:17:14,000 --> 00:17:17,000
 thousands of RPMs, right?

138
00:17:17,000 --> 00:17:23,000
 And robots, you probably don't want that guy moving at thousands of RPMs, right?

139
00:17:23,000 --> 00:17:26,000
 And they don't like to produce a lot of torque, right?

140
00:17:26,000 --> 00:17:30,000
 So actually, it's very important to put a big transmission, a big gearbox,

141
00:17:30,000 --> 00:17:32,000
 something that looks like this.

142
00:17:32,000 --> 00:17:35,000
 You know, this is just a particular planetary gearbox.

143
00:17:35,000 --> 00:17:46,000
 But we typically have between the motor and the actual joint that's moving a big gearbox, okay?

144
00:17:46,000 --> 00:17:53,000
 Which we'll often just call the transmission.

145
00:17:53,000 --> 00:17:58,000
 And that gearbox is meant to turn the super high revolution count of the robot

146
00:17:58,000 --> 00:18:01,000
 into a low revolution count on the joint and to amplify,

147
00:18:01,000 --> 00:18:05,000
 similarly amplify the torques that you can, so you can apply it.

148
00:18:05,000 --> 00:18:12,000
 And the, it's very common on the robots that we see today to have this be in excess of,

149
00:18:12,000 --> 00:18:15,000
 you know, 100 or even 1,000 to 1 ratios, okay?

150
00:18:15,000 --> 00:18:18,000
 The gear ratios.

151
00:18:18,000 --> 00:18:24,000
 Now that turns out to have a profound effect on the way that we think about the dynamics of our robot.

152
00:18:24,000 --> 00:18:27,000
 Okay? For a handful of reasons, I want to make sure I get it right.

153
00:18:27,000 --> 00:18:32,000
 So I want to, you know, call them out, highlight them carefully here.

154
00:18:32,000 --> 00:18:50,000
 So the first thing is that it turns out that some of the gearbox dynamics are hard to model.

155
00:18:50,000 --> 00:18:52,000
 Okay, why are they hard to model?

156
00:18:52,000 --> 00:18:55,000
 Because if you think about what's happening inside there,

157
00:18:55,000 --> 00:18:58,000
 there's a lot of friction of gears rubbing against each other.

158
00:18:58,000 --> 00:19:00,000
 There's actually backlash.

159
00:19:00,000 --> 00:19:02,000
 You know what backlash is, right?

160
00:19:02,000 --> 00:19:05,000
 So you have teeth of our gears going like this,

161
00:19:05,000 --> 00:19:07,000
 and when they're pushing in this direction, everything's good.

162
00:19:07,000 --> 00:19:09,000
 They're applying sort of a constant force.

163
00:19:09,000 --> 00:19:13,000
 If you change directions, there's a momentary gap where they move

164
00:19:13,000 --> 00:19:16,000
 and make contact with the other teeth, for instance, right?

165
00:19:16,000 --> 00:19:23,000
 And if you don't model that, then you're going to get weird effects, okay?

166
00:19:23,000 --> 00:19:25,000
 There's all kinds of things that happen inside there.

167
00:19:25,000 --> 00:19:28,000
 There's flexing of the gears and stuff like this, okay?

168
00:19:28,000 --> 00:19:39,000
 In particular, friction, backlash.

169
00:19:39,000 --> 00:19:44,000
 But because of these, you know, there's already hard, difficult to model effects,

170
00:19:44,000 --> 00:19:51,000
 and then the thing that happens is that you have a compounding sort of importance of these effects

171
00:19:51,000 --> 00:19:56,000
 because you take some of these dynamic features and you multiply them by some big numbers,

172
00:19:56,000 --> 00:20:17,000
 and suddenly they're a very significant part of your dynamics, okay?

173
00:20:17,000 --> 00:20:20,000
 There's another effect that goes along with having this big gear ratio,

174
00:20:20,000 --> 00:20:30,000
 which is called reflected inertia.

175
00:20:30,000 --> 00:20:33,000
 Okay, I'm going to tell you what that means in a second here.

176
00:20:33,000 --> 00:20:49,000
 What these sort of all boil down to is that it turns out that on these robots, position control,

177
00:20:49,000 --> 00:21:10,000
 like for instance a PID controller, where this is a proportional integral derivative controller,

178
00:21:10,000 --> 00:21:18,000
 these work really well, okay?

179
00:21:18,000 --> 00:21:27,000
 In a strange way, the magnification of the gearbox actually makes PID control work better

180
00:21:27,000 --> 00:21:32,000
 than you would expect if you didn't have the transmission or the big gearbox, okay?

181
00:21:32,000 --> 00:21:35,000
 So I want you to understand that in a minute.

182
00:21:35,000 --> 00:21:36,000
 These things combine.

183
00:21:36,000 --> 00:21:43,000
 So PID, which is a very simple position control idea in this sense,

184
00:21:43,000 --> 00:21:47,000
 becomes a dominant force in sort of controlling robots,

185
00:21:47,000 --> 00:21:52,000
 and it takes a lot of work and cost actually to do better and add extra,

186
00:21:52,000 --> 00:21:54,000
 to actually achieve some sort of torque control.

187
00:21:54,000 --> 00:21:59,000
 So most robots out there, if their goal is to do precise motions over and over again,

188
00:21:59,000 --> 00:22:08,000
 are perfectly happy to stick with the stuff that works very well, which is this position control.

189
00:22:08,000 --> 00:22:13,000
 Okay, so let me just step through that in one level of detail, but not in its full glory,

190
00:22:13,000 --> 00:22:20,000
 but let's just make that argument and make sure you understand some of those points.

191
00:22:20,000 --> 00:22:26,000
 Okay, so I say that transmissions are difficult to model, okay?

192
00:22:26,000 --> 00:22:28,000
 Gearboxes are hard to model.

193
00:22:28,000 --> 00:22:30,000
 So what is the implication of that?

194
00:22:30,000 --> 00:22:34,000
 Now, some of you today are, you know, say,

195
00:22:34,000 --> 00:22:36,000
 "I know how to train a neural network to model anything.

196
00:22:36,000 --> 00:22:39,000
 I'm not afraid of some hard-to-model gearbox."

197
00:22:39,000 --> 00:22:44,000
 And I actually, I love that because people are starting to make progress here,

198
00:22:44,000 --> 00:22:49,000
 where traditionally we've just said, "Don't try to model the gearbox. It's too hard."

199
00:22:49,000 --> 00:22:52,000
 Some people are making progress in modeling these really hard things,

200
00:22:52,000 --> 00:22:57,000
 and we've seen some success there, and I actually think that can be great.

201
00:22:57,000 --> 00:23:00,000
 So we might see a revolution in those kind of technologies.

202
00:23:00,000 --> 00:23:05,000
 But classically, we've said, "Those things are hard to model. Don't even try."

203
00:23:05,000 --> 00:23:12,000
 And so if you don't try to model that, then your alternative is to add another sensor.

204
00:23:12,000 --> 00:23:18,000
 So basically, if I'm applying current and voltage at the source of the motor,

205
00:23:18,000 --> 00:23:21,000
 and I want to regulate the position, and I've got something difficult to model,

206
00:23:21,000 --> 00:23:27,000
 what I need is a sensor on the other side of the difficult-to-model event, right?

207
00:23:28,000 --> 00:23:41,000
 [typing]

208
00:23:41,000 --> 00:23:47,000
 Is that OK, you think, to see? I guess you'll know in two minutes or something.

209
00:23:47,000 --> 00:23:59,000
 OK. The most common and easiest sensor to add after the motor is a position sensor.

210
00:23:59,000 --> 00:24:14,000
 Back in the day, we had a lot of potentiometers. These days, they're mostly encoders.

211
00:24:14,000 --> 00:24:22,000
 And then we can use feedback, a simple feedback rule,

212
00:24:22,000 --> 00:24:36,000
 with this PID, that's what the PID is, to regulate the joint angle.

213
00:24:36,000 --> 00:24:42,000
 So I don't have a perfect model of the gearboxes, but I know some very, very basic properties.

214
00:24:42,000 --> 00:24:49,000
 Like, if I apply more torque, then I'll get, you know, I'll have a monotonic relationship

215
00:24:49,000 --> 00:24:52,000
 between the torque I'm applying at the motor and the output, right?

216
00:24:52,000 --> 00:24:56,000
 It's not that I'm going to, somehow it's going to suddenly go backwards or anything like that.

217
00:24:56,000 --> 00:25:09,000
 So actually, it's enough to add a simple feedback loop around it and do some basic control.

218
00:25:09,000 --> 00:25:18,000
 What's interesting, though, is that, you know, there's actually a science of trying to do control without the big motors.

219
00:25:18,000 --> 00:25:32,000
 So, there was a time where people were saying,

220
00:25:32,000 --> 00:25:40,000
 "This path we're going down with big gearboxes seems wrong-headed. Maybe we can actually just scale up our motors big enough

221
00:25:40,000 --> 00:25:46,000
 that we can actually get very low gear ratios and avoid some of this and then achieve high-bandwidth torque control."

222
00:25:46,000 --> 00:25:52,000
 And actually, the leaders of that are on our faculty in mechanical engineering.

223
00:25:52,000 --> 00:25:57,000
 That's Harry Asada and Kamal Yusuf Toomey. I don't know why I picked a picture of him with fish.

224
00:25:57,000 --> 00:26:03,000
 But I think it was hard to find something different.

225
00:26:03,000 --> 00:26:08,000
 He doesn't always have fish, but he's often found in building, too, I guess.

226
00:26:08,000 --> 00:26:14,000
 And they wrote a book, it was actually Kamal's thesis, was a book about direct-drive robots.

227
00:26:14,000 --> 00:26:18,000
 And they're saying, "Keep your gear ratios under 10," for instance.

228
00:26:18,000 --> 00:26:23,000
 And the reason is, and the analysis they did in that book, which I think is extremely important to understand,

229
00:26:23,000 --> 00:26:30,000
 is that if I look at the equations of motion of my robot, and this is worked out in a little bit of detail in the notes,

230
00:26:30,000 --> 00:26:39,000
 then I get, when you see these equations, I want you to basically see F, so MA equals a bunch of forces.

231
00:26:39,000 --> 00:27:01,000
 And instead of the mass, he's writing J arm, which is the inertia of the arm, which is the mass-like quantity.

232
00:27:01,000 --> 00:27:08,000
 And the double dot is his angular velocity.

233
00:27:08,000 --> 00:27:15,000
 And he's relating that to the torques that come from gravity, friction, Coriolis terms, and stuff like this.

234
00:27:15,000 --> 00:27:27,000
 And then NI, in this, is the gear ratio, the transmission ratio.

235
00:27:27,000 --> 00:27:34,000
 You're right. So he wrote alpha double dot, angular acceleration.

236
00:27:34,000 --> 00:27:39,000
 I'm going to call it Q double dot everywhere, so let me use that here, angular acceleration.

237
00:27:39,000 --> 00:27:44,000
 Thank you for catching that.

238
00:27:44,000 --> 00:27:47,000
 Okay, and NI is the gear ratio.

239
00:27:47,000 --> 00:27:57,000
 And the only important thing I want you to get here is that the gear ratio pops into this equation in what I thought initially was a surprising way.

240
00:27:57,000 --> 00:28:01,000
 It multiplies some of the terms in the equation by N squared.

241
00:28:01,000 --> 00:28:07,000
 I would have thought, okay, if I've got a hundred to one gear ratio, then I'm getting some terms in my equation that are scaled by a hundred.

242
00:28:07,000 --> 00:28:09,000
 That's pretty bad, right?

243
00:28:09,000 --> 00:28:17,000
 Turns out the scaling is actually, on some of the terms, is actually squared of that, right?

244
00:28:17,000 --> 00:28:21,000
 So dramatic change to the dynamics.

245
00:28:21,000 --> 00:28:26,000
 In particular, so J rotor is the inertia of the motor.

246
00:28:26,000 --> 00:28:29,000
 J arm is the inertia of the arm.

247
00:28:29,000 --> 00:28:35,000
 And because the gear ratio affects the arm, but not the motor,

248
00:28:35,000 --> 00:28:43,000
 even though if I'm looking at the robot and I'm thinking, okay, I'm going to, you know, the dynamics of my robot are dominated by where the mass is on my arm.

249
00:28:43,000 --> 00:28:44,000
 It's actually not like that.

250
00:28:44,000 --> 00:28:49,000
 If you look at the dynamics of the robot from the viewpoint of the motor,

251
00:28:49,000 --> 00:28:55,000
 all the stuff that's happening down at your arms is reduced by the squared of the gear ratio.

252
00:28:55,000 --> 00:29:03,000
 And just the inertia of your motor moving around is actually on par with the inertia of your arm moving around.

253
00:29:03,000 --> 00:29:07,000
 Your motor is a simple thing that's sort of spinning around its axis.

254
00:29:07,000 --> 00:29:11,000
 It's not changing dramatically depending on the configuration of the robot.

255
00:29:11,000 --> 00:29:14,000
 So it has a big effect on the dynamics of the robot.

256
00:29:14,000 --> 00:29:21,000
 It turns out, you know, when I go to pick things up, you'd think I would need very different control gains if I'm picking up something heavy or not.

257
00:29:21,000 --> 00:29:26,000
 But a lot of these robots, if you have a big gear ratio, you can just use the same control gains everywhere

258
00:29:26,000 --> 00:29:33,000
 because picking stuff up is actually kind of lost in some of the gear ratio, you know, squishes that out.

259
00:29:33,000 --> 00:29:41,000
 And in fact, the dynamics look fairly constant over the workspace because the coordinate varying terms are getting squished out.

260
00:29:41,000 --> 00:29:47,000
 Okay. Even more, the dynamics end up being diagonalized.

261
00:29:47,000 --> 00:29:53,000
 Okay. So you can almost think of controlling every joint independently instead of all the couplings between the joints.

262
00:29:53,000 --> 00:29:58,000
 Again, because the coupling terms relatively get damped out.

263
00:29:58,000 --> 00:30:01,000
 Okay. So it means--yeah, please.

264
00:30:01,000 --> 00:30:02,000
 No, you're good.

265
00:30:02,000 --> 00:30:14,000
 [ Inaudible ]

266
00:30:14,000 --> 00:30:18,000
 That's great. No, no, it's good. I appreciate you calling me on it.

267
00:30:18,000 --> 00:30:23,000
 Okay. So think of this schematic here. I've got a big motor. This is actually a tiny motor.

268
00:30:23,000 --> 00:30:28,000
 Okay. I've got the robot arm, tiny arm in this case. Okay.

269
00:30:28,000 --> 00:30:30,000
 And then I've got a whole bunch of gears in between it.

270
00:30:30,000 --> 00:30:35,000
 So I'm going to call this my motor, this my arm, and this my transmission in between.

271
00:30:35,000 --> 00:30:40,000
 When the motor turns a thousand times or a hundred times, when I say the gear ratio is a hundred to one,

272
00:30:40,000 --> 00:30:46,000
 that means that every hundred turns of the robot is going to only turn the arm once, fully around.

273
00:30:46,000 --> 00:30:48,000
 So that's my gear ratio.

274
00:30:48,000 --> 00:30:53,000
 And what I'm saying is that--so that if you think about the physics of this system,

275
00:30:53,000 --> 00:30:56,000
 there's some inertia in the arm.

276
00:30:56,000 --> 00:31:01,000
 It's going to take some torque in order to start causing accelerations here at the arm.

277
00:31:01,000 --> 00:31:06,000
 Okay. It turns out that even if there's a lot of mass over here,

278
00:31:06,000 --> 00:31:14,000
 it has a relatively small effect because the gearbox makes the effect it has on current at the motor small

279
00:31:14,000 --> 00:31:18,000
 compared to just the magnets that are in here that have to move around.

280
00:31:18,000 --> 00:31:20,000
 Those magnets have some inertia.

281
00:31:20,000 --> 00:31:26,000
 Now you'd think if it's tucked inside my robot and I've got a big heavy robot arm and a little motor inside here,

282
00:31:26,000 --> 00:31:30,000
 clearly the mass of the arm should dominate the motor, but it's not the case.

283
00:31:30,000 --> 00:31:33,000
 It turns out that the relatively smaller magnets,

284
00:31:33,000 --> 00:31:37,000
 even though it's a small percentage of the total mass of the robot,

285
00:31:37,000 --> 00:31:44,000
 it actually has an inordinate effect on the dynamics of the robot when you have a big gear ratio.

286
00:31:44,000 --> 00:31:45,000
 Thank you.

287
00:31:45,000 --> 00:31:53,000
 And the direct drive robot story was actually, let's see if we can build robots differently.

288
00:31:53,000 --> 00:31:56,000
 Let's keep the gear ratio extremely small.

289
00:31:56,000 --> 00:32:00,000
 And over the years, there's been various ways to accomplish that.

290
00:32:00,000 --> 00:32:04,000
 The first ones actually back in Kamal's thesis were like--had enormous armatures.

291
00:32:04,000 --> 00:32:09,000
 They had these big old motors in order to achieve direct drive.

292
00:32:09,000 --> 00:32:12,000
 People have done it with cable drives.

293
00:32:12,000 --> 00:32:18,000
 There's a famous series of robots like the Barrett Wham, if you've heard the whole arm manipulator,

294
00:32:18,000 --> 00:32:24,000
 that achieved it by having a very low distal mass.

295
00:32:24,000 --> 00:32:29,000
 So if you keep the weight of your robot very low and you put your motors on the table and you run cables,

296
00:32:29,000 --> 00:32:33,000
 then you can reduce the torque requirements and get away with relatively smaller motors.

297
00:32:33,000 --> 00:32:35,000
 That's another way people have done it.

298
00:32:35,000 --> 00:32:44,000
 And the reason this is actually coming back now in 2020 is that there's more motors out there that are working extremely well.

299
00:32:44,000 --> 00:32:53,000
 These outrunner motors, if anybody knows from hobbyists, the UAV world has popularized outrunner motors,

300
00:32:53,000 --> 00:32:58,000
 where it's just a different configuration of the motors, which are capable--

301
00:32:58,000 --> 00:33:02,000
 or they're happier producing higher torque for their mass.

302
00:33:02,000 --> 00:33:09,000
 So you actually--we're starting to see some new robots being designed again that are trying to be closer to direct drive.

303
00:33:09,000 --> 00:33:15,000
 But most of the research robots you see right now are in the very high gear ratio regime.

304
00:33:15,000 --> 00:33:33,000
 [INAUDIBLE]

305
00:33:33,000 --> 00:33:39,000
 Yeah, that's a great question. So I'll just repeat it for the video.

306
00:33:39,000 --> 00:33:41,000
 Yeah, so the question is, if--that sounds great.

307
00:33:41,000 --> 00:33:47,000
 You're taking all the complexity of the world, you're kind of driving it down to small, and the dynamics become easier.

308
00:33:47,000 --> 00:33:49,000
 Why would you want to do anything else besides that?

309
00:33:49,000 --> 00:33:54,000
 So your ability to control the forces in the world then is also diminished.

310
00:33:54,000 --> 00:34:03,000
 So if you want to do more sensitive, if you want to control the forces you're applying to the world or be more force sensitive or other things,

311
00:34:03,000 --> 00:34:06,000
 that's where this starts becoming a problem.

312
00:34:06,000 --> 00:34:11,000
 If you're just trying to control positions, then it's a great thing to do.

313
00:34:11,000 --> 00:34:20,000
 So when you want to hug Rod Brooks, then you need to be a little different, I think.

314
00:34:20,000 --> 00:34:24,000
 Okay.

315
00:34:24,000 --> 00:34:29,000
 This is the blown out picture of one of the IWA joints.

316
00:34:29,000 --> 00:34:32,000
 Okay, so IWA's taken a different approach.

317
00:34:32,000 --> 00:34:42,000
 And there's a series of robots that do a similar thing, but I actually think that this robot was one of the first ones that really changed people's mind about this approach being high performance and viable.

318
00:34:42,000 --> 00:34:48,000
 It was originally done at the DLR, the German space agency, and then KUKA turned it into a product.

319
00:34:48,000 --> 00:34:59,000
 So they basically said, well, we can keep a big gearbox that keeps the ergonomics of our motor where we want them.

320
00:34:59,000 --> 00:35:12,000
 But in addition to putting a position sensor on the joint, let's go ahead and put a torque sensor also on the joint.

321
00:35:12,000 --> 00:35:13,000
 Now that seems like an obvious thing to do.

322
00:35:13,000 --> 00:35:15,000
 Why wouldn't everybody do that?

323
00:35:15,000 --> 00:35:22,000
 Well, torque sensing is a bit of a black art, and they did an extremely good job to make it work and make it package well.

324
00:35:22,000 --> 00:35:29,000
 So the IWA is actually written all in lowercase.

325
00:35:29,000 --> 00:35:34,000
 And it drives me nuts, but that's how they write it, and I'll try to respect that.

326
00:35:34,000 --> 00:35:42,000
 Okay, so the IWA still has a high gear ratio.

327
00:35:42,000 --> 00:35:57,000
 But they've added both position and torque sensing at the joint side, or across the transmission.

328
00:35:57,000 --> 00:36:05,000
 So if they can measure the torque directly, then they can close a feedback loop on the torque and try to regulate the torque.

329
00:36:05,000 --> 00:36:12,000
 Now, to do that, they had this beautiful design with strain gauges.

330
00:36:12,000 --> 00:36:21,000
 Strain gauges, again, are, you know, I think people have gotten better at it, but they're generally hard to get high performance and hold calibration and all these things.

331
00:36:21,000 --> 00:36:38,000
 In order to do that, there's always, if you're trying to measure force, there's always going to be a tradeoff in deflection, how flexible your shaft is, versus how rigid, and your ability to measure torque.

332
00:36:38,000 --> 00:36:48,000
 So the key thing that happened on this robot is they were able to make, they call it a flexible spine, and they think of this as a flexible joint robot.

333
00:36:48,000 --> 00:36:59,000
 They put a component in that shaft, which is actually a stiff spring.

334
00:36:59,000 --> 00:37:08,000
 When I say stiff spring, I think it's like, I don't know, 5,000 Newton meters per radian or something like that.

335
00:37:08,000 --> 00:37:22,000
 And they achieved performance in terms of position commands and other things that would make anybody who wanted to use it on a factory floor still happy, but they were able to still get torque control for people who wanted that.

336
00:37:22,000 --> 00:37:35,000
 They did that not only with the beautiful design, but with some really good control, which we'll talk about later when we talk about force control and the like.

337
00:37:35,000 --> 00:37:52,000
 If we keep going down this spectrum, there's another type of robot out there, which actually Baxter is a version of, which uses series elastic actuators.

338
00:37:52,000 --> 00:38:07,000
 You could call this a series elastic actuator, but we typically don't because this is a very stiff spring, and we want to think of it as a flexible joint and admit that it's flexible, but mostly think of this as something that's capable of doing high bandwidth control.

339
00:38:07,000 --> 00:38:12,000
 So if you needed to follow a very fast trajectory, you could.

340
00:38:12,000 --> 00:38:36,000
 If we're saying that we're in a different operating regime when we're operating around humans and we don't need the ability to control very high frequency things, then you can maybe make the problem easier by having a soft spring, taking this down a huge range into a much softer spring.

341
00:38:36,000 --> 00:38:44,000
 So these are more like 100 newton meters per radian, orders of magnitude softer, let's say.

342
00:38:44,000 --> 00:38:53,000
 And then really just, you can even just use position sensors on both sides to measure the deflection of the spring and have a torque sensor.

343
00:38:53,000 --> 00:38:59,000
 This was the go ahead idea in series elastic actuator, and it owns a certain part of the design space.

344
00:38:59,000 --> 00:39:13,000
 You wouldn't want to be doing, like I say, super high performance, super high bandwidth things with a series of elastic actuators, but I guess for hugging Rod Brooks it was appropriate, right?

345
00:39:13,000 --> 00:39:19,000
 Does that make sense? Any questions on just sort of the high level architectures of these? Yeah.

346
00:39:19,000 --> 00:39:23,000
 [ Inaudible ]

347
00:39:23,000 --> 00:39:29,000
 >> Because, so you imagine, this is a great question, why wouldn't you want to, why couldn't you do something maybe high performance?

348
00:39:29,000 --> 00:39:35,000
 So from a linear systems perspective, you basically have a low pass filter.

349
00:39:35,000 --> 00:39:39,000
 The spring is going to look like a low pass filter between your motor and the shaft.

350
00:39:39,000 --> 00:39:45,000
 So if you were to try to do something very fast with your motor, it would be a, you'd only see the decayed response of the output shaft.

351
00:39:45,000 --> 00:39:50,000
 Because that spring exactly looks like a, you know, the first order looks like just a low pass filter.

352
00:39:50,000 --> 00:39:56,000
 And so you're, you do give up your ability to do bandwidth, high bandwidth control. Yes.

353
00:39:56,000 --> 00:40:00,000
 [ Inaudible ]

354
00:40:00,000 --> 00:40:01,000
 >> Correct.

355
00:40:01,000 --> 00:40:03,000
 [ Inaudible ]

356
00:40:03,000 --> 00:40:09,000
 >> That's exactly right. The maximum torque is not affected. It's your, it's the rate at which you control that torque.

357
00:40:09,000 --> 00:40:16,000
 Yeah. And so some people say series elastic actuators or any elasticity is almost, it makes the robot safer.

358
00:40:16,000 --> 00:40:21,000
 But that's a little bit of a dangerous argument because you can actually store a lot of energy.

359
00:40:21,000 --> 00:40:25,000
 And you can't stop applying that energy very fast. Right.

360
00:40:25,000 --> 00:40:33,000
 So you might couple that with weaker motors and other things that keep you in a safety.

361
00:40:33,000 --> 00:40:38,000
 I think it's not enough. You don't make a safety case purely by saying I have series elastic.

362
00:40:38,000 --> 00:40:46,000
 You need some extra requirements to be met. Good question.

363
00:40:46,000 --> 00:40:54,000
 So once you have a robot that has torque sensing, then, you know, they really made, they did make a safety case with this.

364
00:40:54,000 --> 00:40:57,000
 This is when it was at the DLR. That's Sammy Haddad.

365
00:40:57,000 --> 00:41:05,000
 And he was trying to argue that the torque sensing on this robot is good enough that it becomes suddenly safe to be around humans.

366
00:41:05,000 --> 00:41:09,000
 And the torque sensing is good and the bandwidth is high.

367
00:41:09,000 --> 00:41:15,000
 So if you were to sense, did that end already? Here we go.

368
00:41:15,000 --> 00:41:21,000
 So he made an impact with this work by basically just starting to have the robot hit him at high speeds.

369
00:41:21,000 --> 00:41:28,000
 And showing that even if it somehow collides with him at high speeds, it can so quickly measure the torque,

370
00:41:28,000 --> 00:41:36,000
 realize it's made it contact and stop those things combined, made it an effective safety case.

371
00:41:36,000 --> 00:41:43,000
 If you go on, he starts hitting himself in the head. And then if you look hard enough on the Web, I think you can find something with the knife.

372
00:41:43,000 --> 00:41:56,000
 Not his head, not his head, but, you know. And this was one of the first arms to get certified by some industrial standards committees in Europe in particular.

373
00:41:56,000 --> 00:42:03,000
 This was the German project. OK. And that's a really big deal if you want to be around humans.

374
00:42:03,000 --> 00:42:11,000
 For me, too, I care a lot about robots. I mean, stop that so I can have your attention.

375
00:42:11,000 --> 00:42:23,000
 So if you think about trying to do delicate control, even if you're not manipulating a human, but you're manipulating objects and you're trying to control the contact forces in order to crack an egg or other things like this.

376
00:42:23,000 --> 00:42:29,000
 I have chosen IWA in our lab and in the class here because it gives you the ability to do that potentially.

377
00:42:29,000 --> 00:42:35,000
 Now, that's a fairly expensive arm. That's like 80 K or something for that arm. The hands get it up to.

378
00:42:35,000 --> 00:42:46,000
 OK, so it's not on the low cost side, but it's on a high performance side for what we want to do.

379
00:42:46,000 --> 00:43:00,000
 The way you know. Oh, yeah. You have a question.

380
00:43:00,000 --> 00:43:09,000
 Right. I think that that once you have that big transmission, the current is a very poor indicator of what's happening at the output shaft.

381
00:43:09,000 --> 00:43:16,000
 So just because there's so basically if you write the equations of motion, you say I've got a motor torque and a current.

382
00:43:16,000 --> 00:43:24,000
 There's some terms in there that are that dominate because they get multiplied by the big number and you just can't trust that relationship anymore.

383
00:43:24,000 --> 00:43:38,000
 Yeah. So the way you know, I mean, in addition to hitting yourself, the way you make a rock star torque control robot demo is you you convince people that you can pretend that your robot's not there.

384
00:43:38,000 --> 00:43:47,000
 OK, so this is gravity compensation. Let me restart that. This is like on the KUKA website, right?

385
00:43:47,000 --> 00:43:59,000
 The standard thing you'll see when people are trying to show you they built the robot that's capable of accurate torque control is that they model the equations of motion of the arm and they try to cancel them out.

386
00:43:59,000 --> 00:44:03,000
 So therefore, you can take this big, heavy robot, push it around as if it's not there.

387
00:44:03,000 --> 00:44:15,000
 OK, and if you can do that, it really is a fairly good test. I mean, for him to push it with a pinky or something like that, you know, there's a lot of transmission dynamics here that are being canceled out by the ability to sense torque and close that feedback loop.

388
00:44:15,000 --> 00:44:26,000
 So that's very impressive. The earlier the earlier arms that claimed to have torque control, you would have been better than a rigid robot, but nowhere close to that.

389
00:44:26,000 --> 00:44:34,000
 OK. Right. So that was called gravity in their video, gravity compensation.

390
00:44:34,000 --> 00:44:45,000
 But you can they're actually doing a little bit more than that. They're canceling out friction terms and other aspects, too.

391
00:44:45,000 --> 00:45:03,000
 Great. I think more questions if you have.

392
00:45:03,000 --> 00:45:08,000
 Good. So the question is, so what so what is the difference between the stiff and the soft?

393
00:45:08,000 --> 00:45:19,000
 So the soft, the EWA is an expensive, carefully engineered system that achieved high accurate torque sensing with it, even though it had stiffness.

394
00:45:19,000 --> 00:45:29,000
 You can get away with much cheaper designs, much less accurate designs, much cheaper sensors if your spring is soft because you just have to measure a large deflection.

395
00:45:29,000 --> 00:45:34,000
 And so it's like it's just easier to measure torque.

396
00:45:34,000 --> 00:45:41,000
 You may imagine if you if I apply certain torque and my spring only changes a hundredth of a degree, then I need a really accurate sensor.

397
00:45:41,000 --> 00:45:48,000
 If I change the same amount of torque and it flexes like this, then it's a simple sensor to get the job done.

398
00:45:48,000 --> 00:45:55,000
 Electric motors aren't the only game in town, although they're winning. They're definitely winning.

399
00:45:55,000 --> 00:46:00,000
 Oops, I'll go out of order, but Atlas, for instance, is a torque controlled robot.

400
00:46:00,000 --> 00:46:04,000
 We actually use position control in the arms, but its legs were torque controlled.

401
00:46:04,000 --> 00:46:09,000
 But that was a hydraulic robot. This is the earlier version, actually, even the new version of Atlas.

402
00:46:09,000 --> 00:46:16,000
 OK, so they're they're pumping fluid through the through the valves, through valves, and they're measuring the pressure in the fluid.

403
00:46:16,000 --> 00:46:23,000
 The differential pressure of the fluid across a valve is roughly proportional to the force that's being exerted.

404
00:46:23,000 --> 00:46:30,000
 So that's another way to sort of get achieved classically a torque control or force controlled robot is with hydraulics.

405
00:46:30,000 --> 00:46:38,000
 But electric motors are definitely even at Boston Dynamics, they you know, the humanoid is still hydraulic, but the quadrupeds are now electric.

406
00:46:38,000 --> 00:46:44,000
 And I wouldn't be surprised to see an electric humanoid coming soon.

407
00:46:44,000 --> 00:46:48,000
 Now, the ability to do that torque control, it's important if you want to hit yourself in the head.

408
00:46:48,000 --> 00:46:53,000
 It's also just important in practice for the type of robot manipulation we want to do.

409
00:46:53,000 --> 00:47:03,000
 So as an example of this, just if I remind you of this, this floating example, and this is particular that one move right there.

410
00:47:03,000 --> 00:47:10,000
 We we don't know accurately the position, size, everything of the dishwasher.

411
00:47:10,000 --> 00:47:14,000
 In fact, every time we actually had a bunch of these robots doing the task and every robot was in a little different,

412
00:47:14,000 --> 00:47:20,000
 every dishwasher was in a little different place relative to the robot.

413
00:47:20,000 --> 00:47:26,000
 All we had to do was sort of get the robot sort of to get its hand around the handle.

414
00:47:26,000 --> 00:47:33,000
 That wasn't too bad. But then as we're moving through the arc of the dishwasher, we're in a very compliant mode.

415
00:47:33,000 --> 00:47:40,000
 We're using those torque sensors where we're letting KUKA's low level feedback controller put the robot in a relatively compliant mode.

416
00:47:40,000 --> 00:47:48,000
 The joint angles are probably deviating from our planned trajectory quite a bit, but they're complying to the door, dishwasher door.

417
00:47:48,000 --> 00:47:57,000
 And that's just very important. Right. There's a lot of tasks like that, that if you don't let you know, if you can see robots that kind of get jammed.

418
00:47:57,000 --> 00:48:01,000
 Right. They're like actually if there's rigid on rigid, you know, bad things happen.

419
00:48:01,000 --> 00:48:09,000
 And the ability to do this sort of soft thing and let the world go with the flow a little bit is a big deal for making these things work.

420
00:48:09,000 --> 00:48:17,000
 People are doing well with position control robots. I'm just singing the praises of of of torque control.

421
00:48:17,000 --> 00:48:29,000
 OK. So let's think about I just, you know, argued that the hardware is important the way you actually even the way they write a controller around the hardware is important.

422
00:48:29,000 --> 00:48:33,000
 So let's just connect that back to what you're doing on your problem set. You know, we have this manipulation station.

423
00:48:33,000 --> 00:48:41,000
 You've been looking at the inputs and outputs. Right. You were takes in in this manipulation station system.

424
00:48:41,000 --> 00:48:48,000
 Right. There are input ports that take the position. So if you want to send a position command, it will close a feedback loop around position.

425
00:48:48,000 --> 00:48:56,000
 That's fine. It's capable of doing that, too. But the extra feature is it has this optional feed forward torque.

426
00:48:56,000 --> 00:49:03,000
 OK. So actually inside the system, inside this big box here, they're right.

427
00:49:03,000 --> 00:49:09,000
 They're running their own low level controller that is trying to regulate the gravity out, regulate the friction.

428
00:49:09,000 --> 00:49:13,000
 And they're allowing you to think about only the torques not required to move the robot.

429
00:49:13,000 --> 00:49:21,000
 So this is the feed forward torque in addition. OK. And then you can measure position, velocity, torque.

430
00:49:21,000 --> 00:49:26,000
 Right. You have the torque, commanded torque measured and some sense of external torque.

431
00:49:26,000 --> 00:49:31,000
 So which is the difference between the torque they expected given their model of the robot.

432
00:49:31,000 --> 00:49:35,000
 This is the torque that was required to move the robot. And these are the other torques that came from the world.

433
00:49:35,000 --> 00:49:43,000
 So if I get measured some torque and I subtract out the robots dynamics, then you're getting the torque external forces, extra forces from the world.

434
00:49:43,000 --> 00:49:49,000
 And you'll see that as you play with it more. OK. But if we go to simulate this,

435
00:49:49,000 --> 00:49:52,000
 let's just think about how do you actually simulate that.

436
00:49:52,000 --> 00:49:55,000
 The first piece of simulating this, of course, is the physics engine.

437
00:49:55,000 --> 00:50:17,000
 We need to have the equations of motion of the robot.

438
00:50:17,000 --> 00:50:24,000
 So let's simulate first the EWA. OK. And actually, if I want you to take one thing away from this,

439
00:50:24,000 --> 00:50:28,000
 I put it on that title slide and I'll put it up again at the end here,

440
00:50:28,000 --> 00:50:33,000
 is that simulating the EWA will require a physics engine, no doubt.

441
00:50:33,000 --> 00:50:40,000
 But it's more than simulating the physics. It's somehow more than just simulating physics.

442
00:50:40,000 --> 00:50:48,000
 Physics is the first step. But having a physics engine is not enough to simulate a robot of this complexity.

443
00:50:48,000 --> 00:50:55,000
 You have to simulate the controllers, the sensors, all that other stuff in order to have a good, faithful simulation.

444
00:50:55,000 --> 00:51:18,000
 OK. In practice, in Drake, the physics engine is called the multibody plant.

445
00:51:18,000 --> 00:51:23,000
 This is doing the sum of the forces equals mass times acceleration,

446
00:51:23,000 --> 00:51:31,000
 including contact forces, including the friction, these kind of things. OK.

447
00:51:31,000 --> 00:51:39,000
 If I take a description of the robot and put it into multibody plant, this is how I do it. OK.

448
00:51:39,000 --> 00:51:48,000
 In practice, all you have to do is you just say, make a multibody plant, add EWA from file.

449
00:51:48,000 --> 00:51:54,000
 There's a few different collision models we have. Sometimes you can have a lot of times we ignore the collision on the arm,

450
00:51:54,000 --> 00:52:00,000
 but just put the collision on the hand. It just keeps the modeling simpler.

451
00:52:00,000 --> 00:52:06,000
 If we just add an EWA into the physics engine and you say simulate, then guess what's going to happen?

452
00:52:06,000 --> 00:52:13,000
 EWA is going to fall into the abyss. Right. So you need one more line, which is say, and by the way,

453
00:52:13,000 --> 00:52:19,000
 why don't you weld it to the table? OK. And or weld it to the world at the origin is what this is doing.

454
00:52:19,000 --> 00:52:26,000
 And then go. OK. And what's happening behind the scenes there is that somebody, KUKA,

455
00:52:26,000 --> 00:52:32,000
 provided a description file in one of the standard robot formats of the EWA dynamics.

456
00:52:32,000 --> 00:52:38,000
 Typically, we people had to clean them up. OK. But if you go in and dig in or if you need a new robot or a new environment

457
00:52:38,000 --> 00:52:43,000
 and you want to add to it, there are these description formats that you might have seen.

458
00:52:43,000 --> 00:52:52,000
 We handle SDF, URDF, Joko format are the three that we handle directly.

459
00:52:52,000 --> 00:52:58,000
 And it's just a simple description file. Actually, it's not as simple as it should be. XML is kind of gross.

460
00:52:58,000 --> 00:53:06,000
 But it's a description format that allows you to say what the mass is, what the inertia is, what the geometry looks like.

461
00:53:06,000 --> 00:53:11,000
 Importantly, you can set a different visual geometry from a collision geometry.

462
00:53:11,000 --> 00:53:16,000
 Maybe you want the robot to look like one thing, but the physics you want to actually use, let's say, simpler geometry.

463
00:53:16,000 --> 00:53:24,000
 So you don't have like some weird artifact in your mesh that causes you to get your arm caught on the table or something like that.

464
00:53:24,000 --> 00:53:30,000
 OK. And then you just list the links, links the joints. It's a pretty simple description format.

465
00:53:30,000 --> 00:53:36,000
 Normally, the robot providers give those to you. In practice, the robot providers often provide something

466
00:53:36,000 --> 00:53:40,000
 and then the community cleans it up a little bit and you can find online something good.

467
00:53:40,000 --> 00:53:49,000
 Beware if you find one online. A lot of times they're pretty bad. I'm sort of shocked at how bad they are.

468
00:53:49,000 --> 00:53:54,000
 A lot of, even the kinematics can be wrong, but almost certainly the inertias are often wrong.

469
00:53:54,000 --> 00:54:03,000
 MuJoCo, if you load, MuJoCo is another simulator. By default, I think it ignores the inertia in the file and just recomputes its own,

470
00:54:03,000 --> 00:54:08,000
 because that's certainly an option you can turn on. I think it's on by default, just because they don't trust.

471
00:54:08,000 --> 00:54:16,000
 There's so many bad inertia files out there. You can write numbers into the SDF, not Sine Distance,

472
00:54:16,000 --> 00:54:23,000
 but the Sine Description format, which are not possible for any physical system.

473
00:54:23,000 --> 00:54:31,000
 There are constraints that these numbers have to satisfy to be generated by physics, and often they don't.

474
00:54:31,000 --> 00:54:38,000
 And sometimes you'll put a file in, so Drake, for instance, will say, "You told me this is a nonsensical inertia."

475
00:54:38,000 --> 00:54:42,000
 And MuJoCo would just be like, "I'll just ignore that," and simulate a different one.

476
00:54:42,000 --> 00:54:50,000
 They're different design philosophies. But these files are out there, they're sometimes wrong.

477
00:54:50,000 --> 00:54:58,000
 And then we have the other thing that you saw in your files, and you'll be able to use in your projects and the like,

478
00:54:58,000 --> 00:55:08,000
 is we just have a simple, shorter YAML language that just says if you want to add a robot with some bins,

479
00:55:08,000 --> 00:55:13,000
 and then you add a foam brick, you'll see there's one extra little modeling language that makes it fast

480
00:55:13,000 --> 00:55:20,000
 to add lots of different models together into one simulation.

481
00:55:20,000 --> 00:55:37,000
 So, Multibody Plant is the physics engine. You also need a geometry engine.

482
00:55:37,000 --> 00:55:44,000
 It's called the Scene Graph in many gaming engines, and in Drake also, it's called Scene Graph.

483
00:55:44,000 --> 00:55:51,000
 This handles all of the—so this handles the masses, inertias, and kinematics, but this handles all the geometry queries.

484
00:55:51,000 --> 00:55:58,000
 And if you want to talk to a renderer, if you want to render a high-quality picture, if you want to talk to the visualizer,

485
00:55:58,000 --> 00:56:05,000
 if you want to compute collision geometries, that's the geometry engine that's in Scene Graph.

486
00:56:05,000 --> 00:56:11,000
 They both manifest themselves as systems in your system diagram.

487
00:56:11,000 --> 00:56:21,000
 Multibody Plant, the physics engine, is just a system. It has a lot of mostly optional input and output ports.

488
00:56:21,000 --> 00:56:29,000
 Scene Graph is just a simpler system where you can add in—you should just make connections from other systems,

489
00:56:29,000 --> 00:56:32,000
 saying I'm going to declare some geometry, I'm going to tell you its pose,

490
00:56:32,000 --> 00:56:37,000
 and then you can ask questions about collisions, about rendering, and stuff like that.

491
00:56:37,000 --> 00:56:41,000
 It's kind of interesting, actually, to think about why did we separate those two.

492
00:56:41,000 --> 00:56:45,000
 You could maybe say all of those should go together in the same physics engine,

493
00:56:45,000 --> 00:56:52,000
 but there's actually a lot of cases where you'd like to, let's say, have powerful sensor models and geometry rendering and stuff like that,

494
00:56:52,000 --> 00:56:55,000
 but maybe use a different physics engine.

495
00:56:55,000 --> 00:57:00,000
 Like in the underactuated class, we often write our own simple dynamic equations,

496
00:57:00,000 --> 00:57:05,000
 or if you have an autonomous driving project, you probably want to use a very simple model of the car.

497
00:57:05,000 --> 00:57:10,000
 You don't want to simulate tire mechanics, and the full physics model would be overkill.

498
00:57:10,000 --> 00:57:17,000
 So you can have one Scene Graph and multiple physics engines all feeding the geometry into the single Scene Graph.

499
00:57:17,000 --> 00:57:21,000
 So that's why there's two systems, if that seems weird.

500
00:57:21,000 --> 00:57:48,000
 So you put those together, and you have a basic simulator.

501
00:57:48,000 --> 00:57:54,000
 Okay, so if I just populate my system with an EWA model,

502
00:57:54,000 --> 00:57:57,000
 first of all, you remember what I said about the context?

503
00:57:57,000 --> 00:58:01,000
 The context is just the state, the time, the input, whatever.

504
00:58:01,000 --> 00:58:06,000
 What's the state of the physics engine?

505
00:58:06,000 --> 00:58:12,000
 For EWA, which is a seven degree of freedom robot, you can see, you can just print out the state.

506
00:58:12,000 --> 00:58:15,000
 It has 14 states.

507
00:58:15,000 --> 00:58:21,000
 For most physics engines, the state is going to be the positions and the velocities.

508
00:58:21,000 --> 00:58:25,000
 It has actually a bunch of parameters.

509
00:58:25,000 --> 00:58:37,000
 You can change the parameters and take gradients with respect to parameters and stuff like that.

510
00:58:37,000 --> 00:58:42,000
 If you simulate with just the multi-body plant, then you can see what the next,

511
00:58:42,000 --> 00:58:47,000
 you can see how the state evolves. The physics engine is complete in that sense.

512
00:58:47,000 --> 00:58:50,000
 But there's no rendering yet because I haven't added the Scene Graph.

513
00:58:50,000 --> 00:58:56,000
 If I want to visualize the scene, I'm just going to add two systems.

514
00:58:56,000 --> 00:59:00,000
 I'm going to add the multi-body plant and the Scene Graph.

515
00:59:00,000 --> 00:59:08,000
 And then I can call publish, and suddenly now I've got a rendering of the EWA in the visualizer.

516
00:59:08,000 --> 00:59:27,000
 And now if I simulate, this is what happens.

517
00:59:27,000 --> 00:59:31,000
 The next thing I say, oh yeah, here's how you do an animation.

518
00:59:31,000 --> 00:59:35,000
 So you can save and record in the player and everything like this.

519
00:59:35,000 --> 00:59:40,000
 So this is what happens when you simulate just the physics of the EWA.

520
00:59:40,000 --> 00:59:46,000
 That robot will never do this. Thank God.

521
00:59:46,000 --> 00:59:52,000
 So simulating the physics is not enough to simulate a robot of this complexity.

522
00:59:52,000 --> 00:59:56,000
 This model is a model that says, give me your torque input.

523
00:59:56,000 --> 01:00:00,000
 And currently the torque input is just set to zero because there's nothing else happening.

524
01:00:00,000 --> 01:00:04,000
 And then given that torque input, I'm going to compute the equations of motion,

525
01:00:04,000 --> 01:00:08,000
 figure out how the positions and velocities change, and then I'm going to send them to the geometry engine.

526
01:00:08,000 --> 01:00:12,000
 That's all we've done so far. But that's not enough.

527
01:00:12,000 --> 01:00:17,000
 So in practice, what's happening is that we have a big old box down here that's running their controller,

528
01:00:17,000 --> 01:00:20,000
 that's doing something like gravity comp and friction comp, whatever.

529
01:00:20,000 --> 01:00:27,000
 And we need to add that to the system, add that EWA controller into the system,

530
01:00:27,000 --> 01:00:29,000
 which is an additional bit of complexity.

531
01:00:29,000 --> 01:00:39,000
 A lot of simulators don't provide the infrastructure to write all these controllers and everything, too.

532
01:00:39,000 --> 01:00:49,000
 You get a bigger class diagram. Now we have a PID controller, an inverse dynamics controller, and the like.

533
01:00:49,000 --> 01:00:54,000
 Those are then connected to my multi-body plant and scene graph.

534
01:00:54,000 --> 01:01:02,000
 It's just a diagram. The dynamical systems language puts everything together.

535
01:01:02,000 --> 01:01:16,000
 And now if I send the zero command not directly to the plant, but to the EWA controller module,

536
01:01:16,000 --> 01:01:20,000
 then the robot simulates like this.

537
01:01:20,000 --> 01:01:27,000
 That's the zero command going into the EWA controller is now much more like what happens on the real robot.

538
01:01:27,000 --> 01:01:31,000
 There are levels of fidelity which you can simulate all of the details of the controller.

539
01:01:31,000 --> 01:01:36,000
 In fact, someone asked on Piazza, there are actually mechanical brakes inside that.

540
01:01:36,000 --> 01:01:42,000
 So if you were to just have a motor trying to hold position on an arm for a long time,

541
01:01:42,000 --> 01:01:45,000
 that motor is going to heat up and burn out.

542
01:01:45,000 --> 01:01:49,000
 So a lot of robots that are designed to be doing these kind of operations,

543
01:01:49,000 --> 01:01:53,000
 as soon as the robot stops, a brake will be engaged.

544
01:01:53,000 --> 01:01:56,000
 We largely ignore that in the simulation of our robot.

545
01:01:56,000 --> 01:01:59,000
 You could model that, but that's just from my perspective.

546
01:01:59,000 --> 01:02:01,000
 As soon as I send a command, it starts moving.

547
01:02:01,000 --> 01:02:05,000
 There's something down in the details that lock and unlock that brake,

548
01:02:05,000 --> 01:02:09,000
 but it's never influenced the motion of the robot from the level of detail I've looked at.

549
01:02:09,000 --> 01:02:12,000
 If we needed to model it, we could.

550
01:02:12,000 --> 01:02:16,000
 Even the way that we think about the detailed flexion in the joints,

551
01:02:16,000 --> 01:02:21,000
 their controller, their low-level controller, cancels that out well enough

552
01:02:21,000 --> 01:02:25,000
 that I typically ignore the flexible joint dynamics.

553
01:02:25,000 --> 01:02:32,000
 If we really wanted to be moving it at the limits of the robot, we would add that in.

554
01:02:32,000 --> 01:02:36,000
 Okay? Is that cool?

555
01:02:36,000 --> 01:02:41,000
 So the manipulation station, this thing that has the input/output ports,

556
01:02:41,000 --> 01:02:47,000
 is just the combination of those controllers,

557
01:02:47,000 --> 01:02:50,000
 of the controller, the scene graph, and the dynamics,

558
01:02:50,000 --> 01:02:56,000
 the three things that you're going to almost always use.

559
01:02:56,000 --> 01:02:58,000
 Right?

560
01:02:58,000 --> 01:03:02,000
 I'll have my multi-body plant,

561
01:03:02,000 --> 01:03:04,000
 my scene graph,

562
01:03:04,000 --> 01:03:07,000
 physics engine, geometry engine,

563
01:03:07,000 --> 01:03:13,000
 my controller,

564
01:03:13,000 --> 01:03:16,000
 which is implemented in a few pieces, right?

565
01:03:16,000 --> 01:03:20,000
 And all I do is I put a diagram around this

566
01:03:20,000 --> 01:03:28,000
 and provide the input ports that are at the level of abstraction that you would have,

567
01:03:28,000 --> 01:03:40,000
 that give you this level of abstraction.

568
01:03:40,000 --> 01:03:43,000
 This is the thing you've seen and that you're probing on the problem set.

569
01:03:43,000 --> 01:03:50,000
 All that is is just making the diagram that does the details of the robot

570
01:03:50,000 --> 01:03:53,000
 expose some ports so that you have a new level of abstraction.

571
01:03:53,000 --> 01:03:58,000
 You can just think of the manipulation station as one system that has all those details inside it.

572
01:03:58,000 --> 01:04:02,000
 The cool thing is, of course, that I can take this system out of my code,

573
01:04:02,000 --> 01:04:07,000
 put a different system in that just talks directly to the robot,

574
01:04:07,000 --> 01:04:10,000
 and the same inputs and outputs will just drive the robot around.

575
01:04:10,000 --> 01:04:14,000
 We do have enough of these. We have a handful of these robots upstairs.

576
01:04:14,000 --> 01:04:21,000
 There was an early prototype version of this course before COVID and before you guys multiplied,

577
01:04:21,000 --> 01:04:24,000
 where we were going to have everything run on hardware.

578
01:04:24,000 --> 01:04:29,000
 And I would say at the end of the year, if you've demonstrated sufficiently in simulation something

579
01:04:29,000 --> 01:04:34,000
 and want to try it on the hardware, that sim-to-real gap is small enough that we could consider doing that.

580
01:04:34,000 --> 01:04:38,000
 So that's kind of the power of the modeling.

581
01:04:38,000 --> 01:04:40,000
 Computer science is all about abstraction.

582
01:04:40,000 --> 01:04:44,000
 In dynamical systems, the block diagrams are the way you accomplish that abstraction.

583
01:04:44,000 --> 01:04:50,000
 Okay?

584
01:04:50,000 --> 01:04:52,000
 Questions about that?

585
01:04:52,000 --> 01:04:53,000
 Oh, good.

586
01:04:53,000 --> 01:04:56,000
 [ Inaudible ]

587
01:04:56,000 --> 01:05:05,000
 I chicken-scratched it because the details are on the slides or in the notes.

588
01:05:05,000 --> 01:05:08,000
 I wrote EWA position and EWA position measured,

589
01:05:08,000 --> 01:05:14,000
 but that's actually one of many input ports and many more output ports, actually.

590
01:05:14,000 --> 01:05:18,000
 And even once you put a hand on the robot, there's going to be another detail.

591
01:05:18,000 --> 01:05:25,000
 The controller for the hand is also going to be here.

592
01:05:25,000 --> 01:05:26,000
 Okay?

593
01:05:26,000 --> 01:05:33,000
 There's a few more little systems in here that provide that total abstraction.

594
01:05:33,000 --> 01:05:43,000
 Okay, so let's talk about hands.

595
01:05:43,000 --> 01:05:44,000
 Oh, there you go.

596
01:05:44,000 --> 01:05:45,000
 It's right there.

597
01:05:45,000 --> 01:05:48,000
 That picture has the answer.

598
01:05:48,000 --> 01:05:54,000
 I wrote the first -- almost the first one on both sides.

599
01:05:54,000 --> 01:05:55,000
 Okay.

600
01:05:55,000 --> 01:05:57,000
 We talked about arms.

601
01:05:57,000 --> 01:06:01,000
 We talked about physics is only a subset of simulation.

602
01:06:01,000 --> 01:06:02,000
 Right?

603
01:06:02,000 --> 01:06:04,000
 Let's talk about robot hands.

604
01:06:04,000 --> 01:06:09,000
 And why did I pick this simple WSG?

605
01:06:09,000 --> 01:06:13,000
 So, of course, when people think about robot hands, they think about this.

606
01:06:13,000 --> 01:06:14,000
 Right?

607
01:06:14,000 --> 01:06:20,000
 They think about a dexterous hand, always holding a light bulb or something, you know,

608
01:06:20,000 --> 01:06:24,000
 something fragile, an egg or something in the glamour shots.

609
01:06:24,000 --> 01:06:25,000
 Okay?

610
01:06:25,000 --> 01:06:26,000
 This is the shadow hand.

611
01:06:26,000 --> 01:06:27,000
 I don't have one of those here.

612
01:06:27,000 --> 01:06:31,000
 I do have the Allegro hand in the middle there, here.

613
01:06:31,000 --> 01:06:32,000
 This one costs a lot more money.

614
01:06:32,000 --> 01:06:35,000
 That's why I don't have it.

615
01:06:35,000 --> 01:06:36,000
 Okay?

616
01:06:36,000 --> 01:06:39,000
 This is -- the shadow hand is the one that was in this -- you might have seen this famous

617
01:06:39,000 --> 01:06:41,000
 open AI Rubik's cube.

618
01:06:41,000 --> 01:06:44,000
 Well, this is just the letters.

619
01:06:44,000 --> 01:06:47,000
 But then they did a Rubik's cube after that.

620
01:06:47,000 --> 01:06:51,000
 And it was -- I think they were operating at the very limits of what that hand was capable of.

621
01:06:51,000 --> 01:06:55,000
 And they spent a lot of time fixing the hand and working with the hand provider in order to make that

622
01:06:55,000 --> 01:06:58,000
 endurance testing happen.

623
01:06:58,000 --> 01:07:00,000
 Okay?

624
01:07:00,000 --> 01:07:02,000
 But there's an argument out there.

625
01:07:02,000 --> 01:07:07,000
 Matt Mason used to make it, you know, maybe the most strongly.

626
01:07:07,000 --> 01:07:14,000
 But I think you could argue that a lot of the things we want to be done with manipulation in the home,

627
01:07:14,000 --> 01:07:19,000
 if I were to give you one of these things from the Toy Star and send you into my home,

628
01:07:19,000 --> 01:07:20,000
 you'd be pretty useful.

629
01:07:20,000 --> 01:07:21,000
 Right?

630
01:07:21,000 --> 01:07:26,000
 If I said you can only operate in the world with this little two-finger gripper thing,

631
01:07:26,000 --> 01:07:31,000
 you'd be way more useful than Rubik's cube twiddler.

632
01:07:31,000 --> 01:07:32,000
 Right?

633
01:07:32,000 --> 01:07:37,000
 So there's something to be said that I think our robot hand technology will mature.

634
01:07:37,000 --> 01:07:40,000
 It will enable great things.

635
01:07:40,000 --> 01:07:45,000
 But I don't think we can say robots aren't good at manipulation yet because of the hands.

636
01:07:45,000 --> 01:07:48,000
 I think if you put a powerful enough brain behind the hands,

637
01:07:48,000 --> 01:07:52,000
 then we should be expecting more than we're seeing so far.

638
01:07:52,000 --> 01:07:55,000
 And one of the best examples that sort of made that point,

639
01:07:55,000 --> 01:07:56,000
 this was the PR-1.

640
01:07:56,000 --> 01:08:01,000
 This is actually, if some of you know the PR-2 robot, this was an early prototype.

641
01:08:01,000 --> 01:08:07,000
 And the robot went in and with simple two-finger grippers, little claw hands,

642
01:08:07,000 --> 01:08:10,000
 did all kinds of super useful things in the home.

643
01:08:10,000 --> 01:08:13,000
 It cleaned up the living room.

644
01:08:13,000 --> 01:08:17,000
 There's another one where it gets a beer out of the fridge.

645
01:08:17,000 --> 01:08:18,000
 It mops.

646
01:08:18,000 --> 01:08:20,000
 There's like incredible things that this thing did.

647
01:08:20,000 --> 01:08:23,000
 What's the secret?

648
01:08:23,000 --> 01:08:24,000
 Tele-op.

649
01:08:24,000 --> 01:08:28,000
 That was all driven by somebody behind the scenes.

650
01:08:28,000 --> 01:08:30,000
 They were moving the arms.

651
01:08:30,000 --> 01:08:32,000
 But the hardware was capable.

652
01:08:32,000 --> 01:08:34,000
 And they demonstrated that a long time ago.

653
01:08:34,000 --> 01:08:38,000
 And that was, I think, that's just really eye-opening that we can't blame the hardware.

654
01:08:38,000 --> 01:08:41,000
 Simple hardware can do a lot of useful things.

655
01:08:41,000 --> 01:08:49,000
 So in that sort of spirit, we've gone with a simple but high-quality hand for most of the experiments.

656
01:08:49,000 --> 01:08:51,000
 We can play with dexterous hands, and I put some in the notebooks

657
01:08:51,000 --> 01:08:53,000
 if you want to play with the Allegro hand or whatever.

658
01:08:53,000 --> 01:08:56,000
 We're doing some research on more dexterous hands.

659
01:08:56,000 --> 01:09:01,000
 But I think a lot of the manipulation problems that get towards intelligence can be studied

660
01:09:01,000 --> 01:09:05,000
 avoiding the complexity of the hand and focusing on the complexity of the manipulation

661
01:09:05,000 --> 01:09:07,000
 with a two-fingered gripper.

662
01:09:07,000 --> 01:09:09,000
 So this is the Shunk WSG50.

663
01:09:09,000 --> 01:09:16,000
 It's kind of the EWA class, you know, way too expensive but high-quality sensing,

664
01:09:16,000 --> 01:09:23,000
 torque control, it's force control now in the fingers.

665
01:09:23,000 --> 01:09:28,000
 I actually, I forgot to make, I kind of made the point about the reflected inertia.

666
01:09:28,000 --> 01:09:33,000
 But actually the Shunk gripper is an amazing example of reflected inertia.

667
01:09:33,000 --> 01:09:40,000
 So I said that the reflected inertia is that the motor's inertia reflected through the joint

668
01:09:40,000 --> 01:09:46,000
 looks bigger than it should be because it's multiplied by the square of the gear ratio.

669
01:09:46,000 --> 01:09:51,000
 Or similarly, the inertia of the arm reflected back into the joint coordinates

670
01:09:51,000 --> 01:09:53,000
 is much smaller by the square of the inertia.

671
01:09:53,000 --> 01:09:58,000
 Okay, and I think the EWA, or the WSG makes that point beautifully.

672
01:09:58,000 --> 01:10:00,000
 So these are tiny little fingers.

673
01:10:00,000 --> 01:10:03,000
 Maybe I can, no I can't turn it.

674
01:10:03,000 --> 01:10:05,000
 Okay, these are tiny little fingers.

675
01:10:05,000 --> 01:10:07,000
 They weigh very little in terms of mass.

676
01:10:07,000 --> 01:10:13,000
 But if I push on them, they feel very inertial.

677
01:10:13,000 --> 01:10:17,000
 What's happening there, right, is that there's a big gear ratio inside here

678
01:10:17,000 --> 01:10:21,000
 and there's a motor, and I'm doing most of my work to turn the,

679
01:10:21,000 --> 01:10:26,000
 I'm sorry for you guys, that was badly posed by me,

680
01:10:26,000 --> 01:10:28,000
 but the fingers are moving slowly and I'm pushing hard.

681
01:10:28,000 --> 01:10:30,000
 That's what's happening.

682
01:10:30,000 --> 01:10:31,000
 Right?

683
01:10:31,000 --> 01:10:34,000
 And it feels like there's a large mass.

684
01:10:34,000 --> 01:10:37,000
 Okay, and that is the effect of the reflected inertia.

685
01:10:37,000 --> 01:10:42,000
 In fact, we actually don't simulate that super well in the first notebooks

686
01:10:42,000 --> 01:10:45,000
 that I released, and I'm embarrassed because

687
01:10:45,000 --> 01:10:50,000
 there's a newer version of the dynamics engine that I could turn on

688
01:10:50,000 --> 01:10:53,000
 and it would simulate that reflected inertia beautifully.

689
01:10:53,000 --> 01:10:55,000
 But right now, if you notice in the Tele-Op demo,

690
01:10:55,000 --> 01:10:59,000
 how many people actually ran the Tele-Op demo in the first notebook?

691
01:10:59,000 --> 01:11:01,000
 Okay, everybody else run it.

692
01:11:01,000 --> 01:11:03,000
 I worked really hard on that.

693
01:11:03,000 --> 01:11:06,000
 But if you go down, you'll get in a situation where

694
01:11:06,000 --> 01:11:08,000
 the fingers look kind of wiggly and loose.

695
01:11:08,000 --> 01:11:12,000
 And these fingers will never look wiggly and loose.

696
01:11:12,000 --> 01:11:16,000
 And the difference is, it's actually the dynamics of that simulation

697
01:11:16,000 --> 01:11:21,000
 are dominated by my light little fingers.

698
01:11:21,000 --> 01:11:23,000
 I have to choose a small time step.

699
01:11:23,000 --> 01:11:28,000
 I mean, it's pretty reasonable, but the size of the time step I choose

700
01:11:28,000 --> 01:11:32,000
 to simulate the dynamics is dominated because of the light mass

701
01:11:32,000 --> 01:11:34,000
 that we're simulating in the fingers.

702
01:11:34,000 --> 01:11:37,000
 And if I in fact add that reflected inertia,

703
01:11:37,000 --> 01:11:40,000
 then they feel much more massive and I can take bigger time steps

704
01:11:40,000 --> 01:11:42,000
 and I can simulate faster.

705
01:11:42,000 --> 01:11:44,000
 Speed wasn't an issue for those little simulations,

706
01:11:44,000 --> 01:11:47,000
 but that dominates.

707
01:11:47,000 --> 01:11:49,000
 It actually reminds me of a story.

708
01:11:49,000 --> 01:11:51,000
 So when we were doing the DARPA challenge,

709
01:11:51,000 --> 01:11:54,000
 the first part of the DARPA challenge was actually running our code

710
01:11:54,000 --> 01:11:57,000
 on somebody else's simulator in the cloud.

711
01:11:57,000 --> 01:12:01,000
 And we were working super hard on these balancing control.

712
01:12:01,000 --> 01:12:03,000
 Part of the game, if you get to know me,

713
01:12:03,000 --> 01:12:05,000
 part of my game is to try to understand the mechanics,

714
01:12:05,000 --> 01:12:07,000
 understand the structure of the mechanics,

715
01:12:07,000 --> 01:12:12,000
 how do I write better optimizations that exploit the structure of the mechanics.

716
01:12:12,000 --> 01:12:13,000
 We worked really hard.

717
01:12:13,000 --> 01:12:15,000
 We did fairly well in the competition.

718
01:12:15,000 --> 01:12:18,000
 But I heard a talk from the guys that wrote the simulator

719
01:12:18,000 --> 01:12:20,000
 later after the competition.

720
01:12:20,000 --> 01:12:23,000
 And they were like, "Oh, you know, we realized somewhere in the middle

721
01:12:23,000 --> 01:12:27,000
 that it's pretty hard to have a heavy robot and light fingers.

722
01:12:27,000 --> 01:12:29,000
 So we just realized you could take some of the mass from here

723
01:12:29,000 --> 01:12:31,000
 and throw it in the fingers."

724
01:12:31,000 --> 01:12:34,000
 And I'm a pretty chill guy, but I was like,

725
01:12:34,000 --> 01:12:36,000
 "All the blood's running to that."

726
01:12:36,000 --> 01:12:38,000
 I'm like, "What did you do to my beautiful dynamics?

727
01:12:38,000 --> 01:12:42,000
 That's not how you should simulate it."

728
01:12:42,000 --> 01:12:45,000
 So simulators do weird things to make it happen,

729
01:12:45,000 --> 01:12:49,000
 but physically the right way to model that is as a reflected inertia.

730
01:12:49,000 --> 01:12:54,000
 Because if you add mass to the fingers, that if I lift,

731
01:12:54,000 --> 01:12:57,000
 I should only feel the mass of the motor

732
01:12:57,000 --> 01:13:00,000
 and the mass of the fingers when I lift.

733
01:13:00,000 --> 01:13:05,000
 But when I push, I should feel the force of the extra inertia of the motor.

734
01:13:05,000 --> 01:13:08,000
 So you can't just add mass and get the same effect.

735
01:13:08,000 --> 01:13:11,000
 It's wrong.

736
01:13:11,000 --> 01:13:14,000
 But there are these beautiful hands out there.

737
01:13:14,000 --> 01:13:16,000
 I brought a series of them here.

738
01:13:16,000 --> 01:13:19,000
 One of them is the Sandia hand.

739
01:13:19,000 --> 01:13:22,000
 It's a little bit big, sort of dexterous hand there.

740
01:13:22,000 --> 01:13:24,000
 It's got some cameras in its fingers.

741
01:13:24,000 --> 01:13:26,000
 That was a pretty fun hand to work with.

742
01:13:26,000 --> 01:13:28,000
 This is the iHi.

743
01:13:28,000 --> 01:13:30,000
 This is one of the first under-actuated--

744
01:13:30,000 --> 01:13:33,000
 not one of the first, but one of the most successful, I think,

745
01:13:33,000 --> 01:13:35,000
 early under-actuated hands.

746
01:13:35,000 --> 01:13:38,000
 It's actually--if you people know Right Hand Robotics,

747
01:13:38,000 --> 01:13:40,000
 the people--that's a startup--

748
01:13:40,000 --> 01:13:43,000
 I mean, it's a mature startup at this point--

749
01:13:43,000 --> 01:13:47,000
 that's in town, and they were the original designers of this hand,

750
01:13:47,000 --> 01:13:49,000
 created a company called Right Hand Robotics,

751
01:13:49,000 --> 01:13:53,000
 and they're doing logistics and have a newer, much better version of that hand now.

752
01:13:53,000 --> 01:13:55,000
 This is the Robotique three-fingered gripper.

753
01:13:55,000 --> 01:13:59,000
 It's actually an incredibly clever hand.

754
01:13:59,000 --> 01:14:01,000
 It's got these four-bar linkages.

755
01:14:01,000 --> 01:14:03,000
 It's hard to see, but you can come down and see it afterwards.

756
01:14:03,000 --> 01:14:09,000
 So if you just squeeze, it has less degrees of freedom than joints,

757
01:14:09,000 --> 01:14:14,000
 but it has four-bar linkages so that when you collapse on an object,

758
01:14:14,000 --> 01:14:21,000
 it will close, but it'll adapt its geometry to the hand--to the object.

759
01:14:21,000 --> 01:14:23,000
 And this one, too.

760
01:14:23,000 --> 01:14:24,000
 This one does it with tendons.

761
01:14:24,000 --> 01:14:26,000
 This one does it with rigid links.

762
01:14:26,000 --> 01:14:29,000
 And there's a great series of hands out there.

763
01:14:29,000 --> 01:14:33,000
 I put descriptions of them in the notes.

764
01:14:33,000 --> 01:14:37,000
 This one is maybe out of the box one of the cooler ones,

765
01:14:37,000 --> 01:14:40,000
 so of an unconventional gripper.

766
01:14:40,000 --> 01:14:43,000
 I don't know why it started in the middle here, but--

767
01:14:43,000 --> 01:14:49,000
 because that's what people used to do, I guess.

768
01:14:49,000 --> 01:14:54,000
 Now they have just a balloon full of coffee grounds,

769
01:14:54,000 --> 01:14:58,000
 and the idea is that when you suck on the coffee grounds,

770
01:14:58,000 --> 01:15:00,000
 it goes through a phase transition.

771
01:15:00,000 --> 01:15:03,000
 The thing is very compliant and conformant when it's loose.

772
01:15:03,000 --> 01:15:07,000
 When you suck, the granular media jams, and it holds position,

773
01:15:07,000 --> 01:15:10,000
 and they can use that to basically pick up anything

774
01:15:10,000 --> 01:15:13,000
 with this bag of coffee grounds.

775
01:15:13,000 --> 01:15:16,000
 And that's one of a million--not a million, but a handful of really--

776
01:15:16,000 --> 01:15:19,000
 see, there's always an egg--

777
01:15:19,000 --> 01:15:22,000
 of really cool hands that are out there.

778
01:15:22,000 --> 01:15:27,000
 That was not good, I guess.

779
01:15:27,000 --> 01:15:31,000
 And then you'll see more and more soft hands.

780
01:15:31,000 --> 01:15:33,000
 I think the soft hands are moving towards the place

781
01:15:33,000 --> 01:15:35,000
 where they can be more and more dexterous.

782
01:15:35,000 --> 01:15:38,000
 So this was a play on the OpenAI demo,

783
01:15:38,000 --> 01:15:41,000
 but now with a hand that's just balloon-actuated effectively.

784
01:15:41,000 --> 01:15:47,000
 These are soft materials where the actuators are just

785
01:15:47,000 --> 01:15:53,000
 expanding and contracting the air inside the fingers.

786
01:15:53,000 --> 01:15:55,000
 And who knows--I mean, I would have said before

787
01:15:55,000 --> 01:15:58,000
 that soft hands are awesome,

788
01:15:58,000 --> 01:16:02,000
 but they aren't dexterous enough to button my shirt.

789
01:16:02,000 --> 01:16:05,000
 It'd be good for picking up an egg, but not for buttoning my shirt.

790
01:16:05,000 --> 01:16:10,000
 And people are trying to challenge that.

791
01:16:10,000 --> 01:16:15,000
 We'll have a session later about tactile sensors.

792
01:16:15,000 --> 01:16:19,000
 I haven't talked much about sensing in the hardware thing today.

793
01:16:19,000 --> 01:16:22,000
 We'll talk about cameras and tactile sensing later.

794
01:16:22,000 --> 01:16:24,000
 But one of the big trends in tactile sensing

795
01:16:24,000 --> 01:16:28,000
 is actually sensing with a camera that's behind your skin.

796
01:16:28,000 --> 01:16:31,000
 They call it visual tactile sensing.

797
01:16:31,000 --> 01:16:37,000
 And we'll talk about what's good and bad about that when the time comes.

798
01:16:37,000 --> 01:16:40,000
 Okay, the other thing that we won't spend--

799
01:16:40,000 --> 01:16:42,000
 you can certainly simulate these for your projects.

800
01:16:42,000 --> 01:16:46,000
 I won't put emphasis on the mobile manipulator case,

801
01:16:46,000 --> 01:16:50,000
 but it's an extremely important part of manipulation.

802
01:16:50,000 --> 01:16:54,000
 Sometimes I feel bad about it because I think some problems

803
01:16:54,000 --> 01:16:59,000
 are artificially hard on a robot with a rigid base.

804
01:16:59,000 --> 01:17:03,000
 Tomas Lozano-Perez likes to tease me because

805
01:17:03,000 --> 01:17:07,000
 you can easily run into failures of the kinematics.

806
01:17:07,000 --> 01:17:10,000
 Like the kinematic problem is like solving a puzzle

807
01:17:10,000 --> 01:17:12,000
 when you're a rigid robot with exactly seven links,

808
01:17:12,000 --> 01:17:15,000
 or even worse if you have six links and you're trying to manipulate something on the table

809
01:17:15,000 --> 01:17:17,000
 or reach into the kitchen sink, right?

810
01:17:17,000 --> 01:17:19,000
 That gets pretty hard.

811
01:17:19,000 --> 01:17:22,000
 And if you just put a mobile base, then there's so many more solutions

812
01:17:22,000 --> 01:17:25,000
 to the kinematics problems.

813
01:17:25,000 --> 01:17:29,000
 And he just thinks I'm working too hard on the wrong problem.

814
01:17:29,000 --> 01:17:32,000
 But on the flip side, once you can drive around,

815
01:17:32,000 --> 01:17:36,000
 then you can get into all kinds of trouble.

816
01:17:36,000 --> 01:17:41,000
 So this is the PR2, the second version of the one that made the examples

817
01:17:41,000 --> 01:17:43,000
 and got a beer out of the fridge.

818
01:17:43,000 --> 01:17:46,000
 This is the Fetch robot. This is the Toyota's HSR.

819
01:17:46,000 --> 01:17:49,000
 This is the everyday robot.

820
01:17:49,000 --> 01:17:55,000
 So Leslie and Tomas, I think, haven't truly been happy since the PR2 died.

821
01:17:55,000 --> 01:17:58,000
 They've never found a complete replacement.

822
01:17:58,000 --> 01:18:02,000
 This is a really good robot that enabled a lot of research in a lot of labs.

823
01:18:02,000 --> 01:18:05,000
 But it's extinct now, pretty much.

824
01:18:05,000 --> 01:18:10,000
 I think the last-- every spare part that could be purchased online

825
01:18:10,000 --> 01:18:12,000
 has been purchased on eBay.

826
01:18:12,000 --> 01:18:16,000
 So I think it's pretty much dead.

827
01:18:16,000 --> 01:18:19,000
 You broke a PR2? Don't brag about that.

828
01:18:19,000 --> 01:18:20,000
 [laughter]

829
01:18:20,000 --> 01:18:23,000
 It was like you just killed a species, right?

830
01:18:23,000 --> 01:18:25,000
 [laughter]

831
01:18:25,000 --> 01:18:28,000
 No, they were really good robots.

832
01:18:28,000 --> 01:18:31,000
 And then this is the video that I failed to show you last time.

833
01:18:31,000 --> 01:18:36,000
 But it's an amazing mobile manipulator.

834
01:18:36,000 --> 01:18:39,000
 My slide was hidden last time, and I only showed you the failures.

835
01:18:39,000 --> 01:18:42,000
 But it actually successfully, most of the time,

836
01:18:42,000 --> 01:18:45,000
 takes your orders and drives through the grocery store

837
01:18:45,000 --> 01:18:49,000
 and completes the orders, combining all the perception,

838
01:18:49,000 --> 01:18:51,000
 but also very useful.

839
01:18:51,000 --> 01:18:55,000
 Adding the mobile base obviously made this task possible.

840
01:18:55,000 --> 01:19:01,000
 Any high-level questions?

841
01:19:01,000 --> 01:19:05,000
 I'm going to end with my favorite robot videos of all times.

842
01:19:05,000 --> 01:19:07,000
 But before I do that, is there any other questions

843
01:19:07,000 --> 01:19:10,000
 about what we've been talking about?

844
01:19:10,000 --> 01:19:14,000
 Yes?

845
01:19:14,000 --> 01:19:24,000
 [inaudible]

846
01:19:24,000 --> 01:19:25,000
 Great question.

847
01:19:25,000 --> 01:19:27,000
 So if I say I can't simulate the gearbox,

848
01:19:27,000 --> 01:19:29,000
 but I say that there's some depth in the simulation,

849
01:19:29,000 --> 01:19:32,000
 then where is that happening?

850
01:19:32,000 --> 01:19:35,000
 So I'm relying, I'm modeling that the closed-loop dynamics

851
01:19:35,000 --> 01:19:37,000
 of the low-level feedback controller,

852
01:19:37,000 --> 01:19:41,000
 which is measuring the sensor on either side of the transmission,

853
01:19:41,000 --> 01:19:44,000
 that's providing a contract to me that I can,

854
01:19:44,000 --> 01:19:46,000
 that's what I'm modeling, is the contract,

855
01:19:46,000 --> 01:19:49,000
 saying that the closed-loop performance

856
01:19:49,000 --> 01:19:51,000
 of the feedback controller around that messy gearbox

857
01:19:51,000 --> 01:19:54,000
 makes it look like I control torque.

858
01:19:54,000 --> 01:19:58,000
 But I also model the gravity, the things that,

859
01:19:58,000 --> 01:20:01,000
 so torque is not enough, their low-level controller

860
01:20:01,000 --> 01:20:03,000
 tries to compensate for friction,

861
01:20:03,000 --> 01:20:05,000
 tries to compensate for the gravity.

862
01:20:05,000 --> 01:20:08,000
 So that's the model that we're simulating of their controller.

863
01:20:08,000 --> 01:20:11,000
 But we're not getting in there on the messiness of the gears

864
01:20:11,000 --> 01:20:13,000
 because it's hard to model.

865
01:20:13,000 --> 01:20:20,000
 [inaudible]

866
01:20:20,000 --> 01:20:22,000
 Yep. Correct.

867
01:20:22,000 --> 01:20:27,000
 Gravity, friction, and contact forces are a big one.

868
01:20:27,000 --> 01:20:30,000
 I think that the thing that makes simulating manipulation

869
01:20:30,000 --> 01:20:34,000
 much harder than previous wheeled robots or legged robots

870
01:20:34,000 --> 01:20:37,000
 is the, again, what I said about the light fingers,

871
01:20:37,000 --> 01:20:40,000
 it's even, you know, if I can pick up sort of anything,

872
01:20:40,000 --> 01:20:43,000
 I have a heavy robot and I can pick up light objects

873
01:20:43,000 --> 01:20:47,000
 and provide contact forces that can change very fast

874
01:20:47,000 --> 01:20:49,000
 with small changes in geometry.

875
01:20:49,000 --> 01:20:51,000
 This is what makes the numerics of simulation very hard.

876
01:20:51,000 --> 01:20:55,000
 So most of the effort in manipulation simulation

877
01:20:55,000 --> 01:20:59,000
 in the physics engine is about simulating the contact accurately.

878
01:20:59,000 --> 01:21:01,000
 Great.

879
01:21:01,000 --> 01:21:04,000
 Okay. Favorite robot of all time?

880
01:21:04,000 --> 01:21:05,000
 I think so.

881
01:21:05,000 --> 01:21:08,000
 I mean, it's like asking me to choose among my children.

882
01:21:08,000 --> 01:21:11,000
 But this is really awesome.

883
01:21:11,000 --> 01:21:16,000
 So this is Ishikawa Lab in Japan.

884
01:21:16,000 --> 01:21:20,000
 They basically took their electric motors

885
01:21:20,000 --> 01:21:22,000
 and took off all the safeties

886
01:21:22,000 --> 01:21:26,000
 and probably burned them, I would guess,

887
01:21:26,000 --> 01:21:28,000
 but they overclocked their motors

888
01:21:28,000 --> 01:21:32,000
 in order to make a series of just jaw-dropping high-speed video demos.

889
01:21:32,000 --> 01:21:34,000
 This is--look at the footage.

890
01:21:34,000 --> 01:21:36,000
 This is a long time ago, right?

891
01:21:36,000 --> 01:21:39,000
 So they did very high-speed tracking first for vision,

892
01:21:39,000 --> 01:21:44,000
 and then they did, you know, high-speed motions of their robot.

893
01:21:44,000 --> 01:21:49,000
 And they completely, in my mind, changed what was possible

894
01:21:49,000 --> 01:21:52,000
 in terms of manipulation in a narrow sense.

895
01:21:52,000 --> 01:21:55,000
 I don't think this is going to, like, be successful every time,

896
01:21:55,000 --> 01:22:00,000
 but you got to see what it does.

897
01:22:00,000 --> 01:22:04,000
 Okay, here's dribbling.

898
01:22:04,000 --> 01:22:06,000
 [laughter]

899
01:22:06,000 --> 01:22:10,000
 This is high-speed slowed down.

900
01:22:10,000 --> 01:22:13,000
 I mean, this is, like, in the early 2000s.

901
01:22:13,000 --> 01:22:15,000
 I think it's flipping me off.

902
01:22:15,000 --> 01:22:18,000
 [laughter]

903
01:22:18,000 --> 01:22:22,000
 Pen spinning.

904
01:22:22,000 --> 01:22:25,000
 Right?

905
01:22:25,000 --> 01:22:31,000
 [laughter]

906
01:22:31,000 --> 01:22:36,000
 So there are some good hardware out there.

907
01:22:36,000 --> 01:22:38,000
 You can throw and catch.

908
01:22:38,000 --> 01:22:47,000
 Let me just get to my favorite one.

909
01:22:47,000 --> 01:22:49,000
 Here we go.

910
01:22:49,000 --> 01:22:53,000
 All right, this is a cell phone.

911
01:22:53,000 --> 01:22:55,000
 Right?

912
01:22:55,000 --> 01:22:59,000
 What?

913
01:22:59,000 --> 01:23:03,000
 That is so good, right?

914
01:23:03,000 --> 01:23:05,000
 I met the people that worked on that,

915
01:23:05,000 --> 01:23:07,000
 and I was like, "I saw how many times did that work?"

916
01:23:07,000 --> 01:23:09,000
 It's like, "It only worked once," you know?

917
01:23:09,000 --> 01:23:14,000
 But it doesn't matter to me.

918
01:23:14,000 --> 01:23:17,000
 Okay, and by the way, you know,

919
01:23:17,000 --> 01:23:22,000
 OpenAI got so much press in 2019 for their Rubik's Cube,

920
01:23:22,000 --> 01:23:24,000
 but this was 2017, right?

921
01:23:24,000 --> 01:23:32,000
 And these guys were doing Rubik's Cube way faster, you know?

922
01:23:32,000 --> 01:23:38,000
 It's almost not fair that nobody knows about this one, you know?

923
01:23:38,000 --> 01:23:39,000
 Anyhow.

924
01:23:39,000 --> 01:23:40,000
 All right, cool.

925
01:23:40,000 --> 01:23:42,000
 So if anybody wants to come down and see the robots,

926
01:23:42,000 --> 01:23:57,000
 you know, check it out.

927
01:23:57,000 --> 01:23:59,000
 Yeah, yeah.

928
01:23:59,000 --> 01:24:11,000
 Sure.

929
01:24:11,000 --> 01:24:12,000
 Yeah, yeah.

930
01:24:12,000 --> 01:24:14,000
 You won't be able to -- oh, the fingers, for sure, yeah.

931
01:24:14,000 --> 01:24:18,000
 Yeah, go for it, yeah.

932
01:24:18,000 --> 01:24:21,000
 No, this one is actually the four-bar linkage,

933
01:24:21,000 --> 01:24:23,000
 and this one's tendons.

934
01:24:23,000 --> 01:24:27,000
 You can see the tendons.

935
01:24:27,000 --> 01:24:28,000
 They're fragile, right?

936
01:24:28,000 --> 01:24:32,000
 So, I mean, we've broken with things in the hand,

937
01:24:32,000 --> 01:24:34,000
 and they're like, "This is rock solid."

938
01:24:34,000 --> 01:24:43,000
 We dropped our humanoid on that a few times, and it was still fine.

939
01:24:43,000 --> 01:24:45,000
 Is the robot connected to anything right now?

940
01:24:45,000 --> 01:24:47,000
 Is it going to be able to move?

941
01:24:47,000 --> 01:24:49,000
 I'm going to bring it down for proper demos later,

942
01:24:49,000 --> 01:24:53,000
 but right now it's just a statue for silly reasons.

943
01:24:53,000 --> 01:24:56,000
 We brought the wrong pendant.

944
01:24:56,000 --> 01:24:58,000
 Oh, that's why we couldn't demo it today.

945
01:24:58,000 --> 01:25:02,000
 Well, I was just planning to mostly pose it,

946
01:25:02,000 --> 01:25:05,000
 but I was going to put it in a slightly more elegant position than that.

947
01:25:05,000 --> 01:25:07,000
 I see, I see.

948
01:25:07,000 --> 01:25:08,000
 How much are, like, one of these hands?

949
01:25:08,000 --> 01:25:10,000
 Yeah, they can be pretty expensive.

950
01:25:10,000 --> 01:25:11,000
 They're different.

951
01:25:11,000 --> 01:25:14,000
 Even the shunk, which is the simple one, in some sense,

952
01:25:14,000 --> 01:25:17,000
 it's the high-end simple one, it's 15K.

953
01:25:17,000 --> 01:25:18,000
 Oh, wow.

954
01:25:18,000 --> 01:25:19,000
 Yeah.

955
01:25:19,000 --> 01:25:20,000
 Wow.

956
01:25:20,000 --> 01:25:21,000
 One of these would be, like, even more than that.

957
01:25:21,000 --> 01:25:22,000
 Yeah.

958
01:25:22,000 --> 01:25:25,000
 The Allegro -- so this would be a pretty expensive one.

959
01:25:25,000 --> 01:25:29,000
 This is designed to be a low-cost dexterous hand,

960
01:25:29,000 --> 01:25:31,000
 so it's actually using Dynamixel, which are those, like, hobby servos.

961
01:25:31,000 --> 01:25:33,000
 It's the high-end hobby servos.

962
01:25:33,000 --> 01:25:34,000
 I see.

963
01:25:34,000 --> 01:25:37,000
 But its appeal is that it's low-cost.

964
01:25:37,000 --> 01:25:38,000
 Got it.

965
01:25:38,000 --> 01:25:55,000
 [Indistinct talking]

966
01:25:55,000 --> 01:25:56,000
 Right.

967
01:25:56,000 --> 01:25:59,000
 The direct drive means that you have to have a very big motor,

968
01:25:59,000 --> 01:26:01,000
 so it gets very, very heavy.

969
01:26:01,000 --> 01:26:04,000
 Yeah, it's just a matter of keeping your robot light

970
01:26:04,000 --> 01:26:07,000
 and the cost down and fitting it in the packaging.

971
01:26:07,000 --> 01:26:12,000
 Yeah, no, that's good.

972
01:26:12,000 --> 01:26:13,000
 Yeah.

973
01:26:13,000 --> 01:26:22,000
 [Indistinct talking]

974
01:26:22,000 --> 01:26:23,000
 [End of Audio]

975
01:26:24,000 --> 01:26:25,000
 [End of Audio]

976
01:26:25,000 --> 01:26:26,000
 [End of Audio]

977
01:26:27,000 --> 01:26:28,000
 [End of Audio]

978
01:26:29,000 --> 01:26:30,000
 [End of Audio]

979
01:26:31,000 --> 01:26:32,000
 [End of Audio]

980
01:26:32,000 --> 01:26:33,000
 [End of Audio]

981
01:26:33,000 --> 01:26:34,000
 [End of Audio]

982
01:26:34,000 --> 01:26:35,000
 [End of Audio]

983
01:26:35,000 --> 01:26:35,000
 [End of Audio]

984
01:26:36,000 --> 01:26:37,000
 [End of Audio]

985
01:26:37,000 --> 01:26:37,000
 [End of Audio]

986
01:26:37,000 --> 01:26:42,000
 [End of Audio]

987
01:26:42,000 --> 01:26:43,000
 [End of Audio]

988
01:26:43,000 --> 01:26:43,000
 [End of Audio]

989
01:26:44,000 --> 01:26:44,000
 [End of Audio]

990
01:26:45,000 --> 01:26:45,000
 [End of Audio]

991
01:26:46,000 --> 01:26:46,000
 [End of Audio]

992
01:26:47,000 --> 01:26:47,000
 [End of Audio]

993
01:26:48,000 --> 01:26:48,000
 [End of Audio]

994
01:26:49,000 --> 01:26:49,000
 [End of Audio]

995
01:26:50,000 --> 01:26:50,000
 [End of Audio]

996
01:26:51,000 --> 01:26:51,000
 [End of Audio]

997
01:26:52,000 --> 01:26:52,000
 [End of Audio]

998
01:26:53,000 --> 01:26:53,000
 [End of Audio]

999
01:26:54,000 --> 01:26:54,000
 [End of Audio]

1000
01:26:55,000 --> 01:26:55,000
 [End of Audio]

1001
01:26:55,000 --> 01:27:05,000
 [End of Audio]

1002
01:27:05,000 --> 01:27:25,000
 [End of Audio]

1003
01:27:25,000 --> 01:27:45,000
 [End of Audio]

1004
01:27:45,000 --> 01:28:05,000
 [End of Audio]

1005
01:28:05,000 --> 01:28:25,000
 [End of Audio]

1006
01:28:25,000 --> 01:28:45,000
 [End of Audio]

1007
01:28:45,000 --> 01:29:05,000
 [End of Audio]

1008
01:29:05,000 --> 01:29:25,000
 [End of Audio]

1009
01:29:25,000 --> 01:29:45,000
 [End of Audio]

1010
01:29:45,000 --> 01:30:05,000
 [End of Audio]

