1
00:00:00,000 --> 00:00:28,940
 th

2
00:00:28,940 --> 00:00:36,520
 th

3
00:00:36,520 --> 00:00:47,680
 th

4
00:00:47,680 --> 00:00:56,280
 th

5
00:00:56,280 --> 00:01:02,760
 th

6
00:01:02,760 --> 00:01:09,860
 th

7
00:01:09,860 --> 00:01:10,640
 th

8
00:01:10,640 --> 00:01:16,040
 th

9
00:01:16,040 --> 00:01:22,280
 th

10
00:01:22,280 --> 00:01:28,920
 th

11
00:01:28,920 --> 00:01:30,960
 th

12
00:01:30,960 --> 00:01:32,960
 th

13
00:01:32,960 --> 00:01:34,960
 th

14
00:01:34,960 --> 00:01:36,960
 th

15
00:01:36,960 --> 00:01:41,460
 th

16
00:01:41,460 --> 00:01:43,400
 th

17
00:01:43,400 --> 00:01:45,400
 th

18
00:01:45,400 --> 00:01:52,400
 th

19
00:01:52,400 --> 00:01:54,400
 th

20
00:01:54,400 --> 00:01:56,400
 th

21
00:01:56,400 --> 00:01:58,400
 th

22
00:01:58,400 --> 00:02:00,400
 th

23
00:02:00,400 --> 00:02:02,400
 th

24
00:02:02,400 --> 00:02:04,400
 th

25
00:02:04,400 --> 00:02:06,400
 th

26
00:02:06,400 --> 00:02:08,400
 th

27
00:02:08,400 --> 00:02:10,400
 th

28
00:02:10,400 --> 00:02:17,400
 th

29
00:02:17,400 --> 00:02:19,400
 th

30
00:02:19,400 --> 00:02:21,400
 th

31
00:02:21,400 --> 00:02:23,400
 th

32
00:02:23,400 --> 00:02:25,400
 th

33
00:02:25,400 --> 00:02:27,400
 th

34
00:02:27,400 --> 00:02:29,400
 th

35
00:02:29,400 --> 00:02:31,400
 th

36
00:02:31,400 --> 00:02:33,400
 th

37
00:02:33,400 --> 00:02:35,400
 th

38
00:02:35,400 --> 00:02:41,400
 th

39
00:02:41,400 --> 00:02:43,400
 th

40
00:02:43,400 --> 00:02:45,400
 th

41
00:02:45,400 --> 00:02:47,400
 th

42
00:02:47,400 --> 00:02:49,400
 th

43
00:02:49,400 --> 00:02:51,400
 th

44
00:02:51,400 --> 00:02:53,400
 th

45
00:02:53,400 --> 00:02:55,400
 th

46
00:02:55,400 --> 00:02:57,400
 th

47
00:02:57,400 --> 00:02:59,400
 th

48
00:02:59,400 --> 00:03:06,400
 th

49
00:03:06,400 --> 00:03:08,400
 th

50
00:03:08,400 --> 00:03:10,400
 th

51
00:03:10,400 --> 00:03:12,400
 th

52
00:03:12,400 --> 00:03:14,400
 th

53
00:03:14,400 --> 00:03:16,400
 th

54
00:03:16,400 --> 00:03:18,400
 th

55
00:03:18,400 --> 00:03:20,400
 th

56
00:03:20,400 --> 00:03:22,400
 th

57
00:03:22,400 --> 00:03:24,400
 th

58
00:03:24,400 --> 00:03:31,400
 th

59
00:03:31,400 --> 00:03:33,400
 th

60
00:03:33,400 --> 00:03:35,400
 th

61
00:03:35,400 --> 00:03:37,400
 th

62
00:03:37,400 --> 00:03:39,400
 th

63
00:03:39,400 --> 00:03:41,400
 th

64
00:03:41,400 --> 00:03:43,400
 th

65
00:03:43,400 --> 00:03:45,400
 th

66
00:03:45,400 --> 00:03:47,400
 th

67
00:03:47,400 --> 00:03:49,400
 th

68
00:03:49,400 --> 00:03:56,400
 th

69
00:03:56,400 --> 00:03:58,400
 th

70
00:03:58,400 --> 00:04:00,400
 th

71
00:04:00,400 --> 00:04:02,400
 th

72
00:04:02,400 --> 00:04:04,400
 th

73
00:04:04,400 --> 00:04:06,400
 th

74
00:04:06,400 --> 00:04:08,400
 th

75
00:04:08,400 --> 00:04:10,400
 th

76
00:04:10,400 --> 00:04:12,400
 th

77
00:04:12,400 --> 00:04:14,400
 th

78
00:04:14,400 --> 00:04:15,560
 in the chapter.

79
00:04:15,560 --> 00:04:20,600
 And you can and should play with it.

80
00:04:20,600 --> 00:04:22,740
 I put that into the systems framework.

81
00:04:22,740 --> 00:04:25,840
 And so just to think of it from a systems perspective,

82
00:04:25,840 --> 00:04:32,600
 we had this diff_ik system, which

83
00:04:32,600 --> 00:04:37,880
 took in a desired spatial velocity of the gripper.

84
00:04:40,760 --> 00:04:46,800
 It also had to take in the current q, the EWA positions.

85
00:04:46,800 --> 00:04:59,040
 And it output v, the joint velocities,

86
00:04:59,040 --> 00:05:03,960
 the EWA joint velocities.

87
00:05:03,960 --> 00:05:04,960
 I have to write bigger.

88
00:05:10,740 --> 00:05:13,960
 And we'd use the pseudo-inverse in the simple case,

89
00:05:13,960 --> 00:05:16,760
 or a quadratic program as the generalization,

90
00:05:16,760 --> 00:05:20,600
 in order to implement that differential inverse kinematics

91
00:05:20,600 --> 00:05:23,360
 system.

92
00:05:23,360 --> 00:05:25,920
 To wire that all up, though, if you remember,

93
00:05:25,920 --> 00:05:34,680
 we have the station here, the manipulation station,

94
00:05:34,680 --> 00:05:37,440
 which takes in desired positions.

95
00:05:37,660 --> 00:05:38,160
 Right?

96
00:05:38,160 --> 00:05:46,500
 So to make this all work, there's

97
00:05:46,500 --> 00:05:49,420
 actually one more block in the middle, which

98
00:05:49,420 --> 00:05:52,460
 is just doing an integration.

99
00:05:52,460 --> 00:05:54,780
 You give it some initial conditions,

100
00:05:54,780 --> 00:05:58,380
 and it will take these desired velocities out and integrate

101
00:05:58,380 --> 00:05:59,900
 them back into desired positions.

102
00:06:03,780 --> 00:06:15,720
 The station had an output port for the EWA position, which

103
00:06:15,720 --> 00:06:18,360
 has to get wired back up into this.

104
00:06:18,360 --> 00:06:19,160
 That's all good.

105
00:06:19,160 --> 00:06:24,920
 We have direct access to the EWA position.

106
00:06:24,920 --> 00:06:28,360
 And then in the full demonstration,

107
00:06:28,360 --> 00:06:31,300
 this came from a trajectory.

108
00:06:31,300 --> 00:06:38,660
 We had our initial pose trajectory,

109
00:06:38,660 --> 00:06:41,060
 and we took a derivative of that pose trajectory

110
00:06:41,060 --> 00:06:46,260
 to get a velocity trajectory, a spatial velocity trajectory.

111
00:06:46,260 --> 00:06:50,580
 So this took that spatial velocity,

112
00:06:50,580 --> 00:06:53,500
 and then this trajectory system just

113
00:06:53,500 --> 00:06:59,160
 plays out as a function of time, the spatial velocities, which

114
00:06:59,160 --> 00:07:01,760
 get pulled at every time into this differential IK pseudo

115
00:07:01,760 --> 00:07:02,320
 inverse.

116
00:07:02,320 --> 00:07:06,480
 And the whole thing went around, and we have a complete demo.

117
00:07:06,480 --> 00:07:07,920
 It's actually kind of interesting

118
00:07:07,920 --> 00:07:11,640
 that if you were to simulate a little too long,

119
00:07:11,640 --> 00:07:14,200
 for instance, then this thing would run out

120
00:07:14,200 --> 00:07:15,400
 of interesting things to say.

121
00:07:15,400 --> 00:07:19,800
 We've only defined a trajectory up to the final segment

122
00:07:19,800 --> 00:07:21,400
 time of our plan.

123
00:07:21,400 --> 00:07:25,160
 So your mileage may vary if you try to keep simulating,

124
00:07:25,160 --> 00:07:27,600
 because you could just define this more carefully,

125
00:07:27,600 --> 00:07:28,680
 but I didn't.

126
00:07:28,680 --> 00:07:33,920
 So you could simulate that farther and get a little off.

127
00:07:33,920 --> 00:07:38,320
 One other thing just to say about that,

128
00:07:38,320 --> 00:07:40,560
 because we're going to build on this this week,

129
00:07:40,560 --> 00:07:48,440
 but there's two multi-body plants flying around here,

130
00:07:48,440 --> 00:07:50,120
 at least two.

131
00:07:50,120 --> 00:07:51,880
 But you can imagine having more.

132
00:07:51,880 --> 00:07:59,920
 So inside here is one plant, which

133
00:07:59,920 --> 00:08:03,160
 is simulating the physics of the world.

134
00:08:03,160 --> 00:08:08,640
 Our physics engine is buried inside this station diagram.

135
00:08:08,640 --> 00:08:12,000
 But the diff IK system also needs

136
00:08:12,000 --> 00:08:16,120
 to call the kinematics methods of a plant.

137
00:08:16,120 --> 00:08:21,200
 So there's another plant that's being used inside here,

138
00:08:21,200 --> 00:08:23,760
 and they're not the same.

139
00:08:23,760 --> 00:08:25,960
 And that's OK.

140
00:08:25,960 --> 00:08:31,840
 So this plant has the robot and the red brick and the bins

141
00:08:31,840 --> 00:08:33,680
 and all the details of the world.

142
00:08:33,680 --> 00:08:40,060
 It is one mathematical model of the world,

143
00:08:40,060 --> 00:08:43,000
 and it has everything inside it.

144
00:08:43,000 --> 00:08:46,320
 Diff IK is using a more narrow view of the world.

145
00:08:46,320 --> 00:08:48,360
 It has a mathematical model of the world

146
00:08:48,360 --> 00:08:52,680
 that only thinks about the arm and ignores everything else.

147
00:08:52,680 --> 00:08:54,920
 And this is not unusual.

148
00:08:54,920 --> 00:08:56,720
 This is not an artifact of diff IK.

149
00:08:56,720 --> 00:08:59,240
 You could think, for any simulation,

150
00:08:59,240 --> 00:09:01,280
 your robot might have some internal model of what's

151
00:09:01,280 --> 00:09:04,400
 going on, and then there's what the real world is giving you.

152
00:09:04,400 --> 00:09:07,000
 So you could think about this as sort of the internal model

153
00:09:07,000 --> 00:09:08,800
 that the robot has of what's going on.

154
00:09:08,800 --> 00:09:10,280
 And in this case, it's very simple.

155
00:09:10,280 --> 00:09:13,440
 It just pretends there's nothing except for the robot arm.

156
00:09:13,440 --> 00:09:14,860
 And there's another one out there,

157
00:09:14,860 --> 00:09:19,720
 which is this is our simulation of the real world.

158
00:09:19,720 --> 00:09:22,720
 So there's cases where we see multiple different plants

159
00:09:22,720 --> 00:09:24,800
 flying around, and that's OK.

160
00:09:24,800 --> 00:09:29,360
 It's just different models that are used for different pieces.

161
00:09:29,360 --> 00:09:34,800
 Does that make sense?

162
00:09:34,800 --> 00:09:41,000
 OK, so the big thing that was the assumption last time

163
00:09:41,000 --> 00:09:46,880
 is that we assumed that somebody gave me

164
00:09:46,880 --> 00:09:49,960
 the position of the red-- the initial position

165
00:09:49,960 --> 00:09:52,480
 of the red brick.

166
00:09:52,480 --> 00:09:56,720
 And in fact, we did that before this diagram was even

167
00:09:56,720 --> 00:10:01,040
 created so that I could-- before I even make this whole system,

168
00:10:01,040 --> 00:10:03,120
 I can design this trajectory.

169
00:10:03,120 --> 00:10:04,740
 And that's just a fixed thing over time.

170
00:10:04,740 --> 00:10:05,240
 Yes?

171
00:10:05,240 --> 00:10:07,200
 AUDIENCE: So you're talking about the two

172
00:10:07,200 --> 00:10:09,480
 EWA positions are the same thing?

173
00:10:09,480 --> 00:10:11,680
 PROFESSOR: Yes, so this is the desired EWA position.

174
00:10:11,680 --> 00:10:13,800
 This is commanded.

175
00:10:13,800 --> 00:10:15,840
 I forget exactly what I called it in the diagram.

176
00:10:15,840 --> 00:10:17,360
 I'll see it in just a second.

177
00:10:17,360 --> 00:10:20,720
 This is the commanded, and this is the measured.

178
00:10:20,720 --> 00:10:27,640
 And those are joint positions of the EWA.

179
00:10:27,640 --> 00:10:28,760
 Yeah, thank you for asking.

180
00:10:29,100 --> 00:10:31,540
 [TYPING]

181
00:10:31,540 --> 00:10:41,020
 OK, so there was this very artificial assumption

182
00:10:41,020 --> 00:10:46,580
 that the robot woke up and knew exactly where the red brick

183
00:10:46,580 --> 00:10:49,260
 was, the pose of the red brick in the world.

184
00:10:49,260 --> 00:10:51,380
 And the goal of the next few lectures

185
00:10:51,380 --> 00:10:54,100
 is to remove that assumption.

186
00:10:54,100 --> 00:10:57,220
 In particular, in the manipulation station--

187
00:10:57,220 --> 00:10:58,960
 so here, I can answer your question now.

188
00:10:58,960 --> 00:11:00,940
 It was called the EWA position on the way in,

189
00:11:00,940 --> 00:11:02,820
 and it's EWA position measured on the way out.

190
00:11:02,820 --> 00:11:10,700
 And we were also using these--

191
00:11:10,700 --> 00:11:12,380
 if we wanted to write this completely,

192
00:11:12,380 --> 00:11:16,180
 we were sort of using the cheat ports on the manipulation

193
00:11:16,180 --> 00:11:16,820
 station.

194
00:11:16,820 --> 00:11:19,260
 We were saying, go ahead and tell me

195
00:11:19,260 --> 00:11:23,300
 the exact position in the world of the red brick.

196
00:11:23,300 --> 00:11:26,420
 And I put those in the manipulation station simulation

197
00:11:26,420 --> 00:11:29,660
 so that they're available, and we can write algorithms

198
00:11:29,660 --> 00:11:30,500
 against them.

199
00:11:30,500 --> 00:11:32,700
 But you don't have those in the real world.

200
00:11:32,700 --> 00:11:35,380
 So in the hardware version of the manipulation station,

201
00:11:35,380 --> 00:11:37,740
 those ports are not there.

202
00:11:37,740 --> 00:11:41,140
 Nobody's going to tell you exactly where the red brick is.

203
00:11:41,140 --> 00:11:45,460
 What you have instead are cameras as sensors.

204
00:11:45,460 --> 00:11:48,460
 And we have to now start using those cameras

205
00:11:48,460 --> 00:11:51,500
 to infer the position of the red brick,

206
00:11:51,500 --> 00:11:55,500
 and of course, much, much more down the line.

207
00:11:55,500 --> 00:12:00,980
 So the demonstration, by the time we're done,

208
00:12:00,980 --> 00:12:03,500
 is not server-- oh, there we go.

209
00:12:03,500 --> 00:12:08,380
 OK, good-- is going to look fairly similar.

210
00:12:08,380 --> 00:12:11,700
 I've upgraded from a red brick to a mustard bottle.

211
00:12:11,700 --> 00:12:12,940
 So that's good.

212
00:12:12,940 --> 00:12:14,860
 That's progress.

213
00:12:14,860 --> 00:12:18,940
 You'll also see there's a bunch of cameras around the scene.

214
00:12:18,940 --> 00:12:20,100
 That's new.

215
00:12:20,100 --> 00:12:21,980
 I had ignored them.

216
00:12:21,980 --> 00:12:27,540
 And you'll also see that there's some perception happening here.

217
00:12:27,540 --> 00:12:29,260
 So this is a point cloud that we're

218
00:12:29,260 --> 00:12:32,100
 going to talk about that is obtained from a perception

219
00:12:32,100 --> 00:12:36,460
 system that was looking at the cameras at time 0

220
00:12:36,460 --> 00:12:38,740
 and doing some algorithms to try to estimate

221
00:12:38,740 --> 00:12:43,540
 the position, the pose of the mustard bottle in the frame.

222
00:12:43,540 --> 00:12:46,140
 So the goal of today is to give you that basic algorithm,

223
00:12:46,140 --> 00:12:48,820
 and we'll do better and better as we go forward.

224
00:12:48,820 --> 00:12:50,740
 But that's our pipeline.

225
00:12:50,740 --> 00:12:53,900
 So it's going to look fairly similar,

226
00:12:53,900 --> 00:12:55,860
 but there's going to be some initial work where

227
00:12:55,860 --> 00:13:00,420
 I look at the camera outputs, extract that pose,

228
00:13:00,420 --> 00:13:03,140
 and then create the trajectory.

229
00:13:03,140 --> 00:13:05,460
 And when we get even better, we'll

230
00:13:05,460 --> 00:13:07,860
 use that in real time feedback.

231
00:13:07,860 --> 00:13:11,620
 But today, we're just going to say, look at the world once.

232
00:13:11,620 --> 00:13:13,320
 Now design our trajectory, because that's

233
00:13:13,320 --> 00:13:14,540
 the pipeline we already have.

234
00:13:14,540 --> 00:13:24,340
 [AUDIO OUT]

235
00:13:24,340 --> 00:13:28,420
 OK, so here's the thing.

236
00:13:28,420 --> 00:13:30,620
 Turns out computer vision is hard.

237
00:13:30,620 --> 00:13:33,740
 So looking at your cameras, it's hard.

238
00:13:33,740 --> 00:13:35,260
 It's a hard problem.

239
00:13:35,260 --> 00:13:38,420
 It's gotten a lot easier now that we've had our machine

240
00:13:38,420 --> 00:13:39,980
 learning revolution.

241
00:13:39,980 --> 00:13:42,060
 But it's still a hard problem, and you

242
00:13:42,060 --> 00:13:44,060
 should understand maybe why computer vision

243
00:13:44,060 --> 00:13:44,780
 is a hard problem.

244
00:13:44,780 --> 00:13:52,660
 I think it's fairly intuitive, but to say it in a word or two,

245
00:13:52,660 --> 00:13:57,100
 why is computer vision hard is if you're

246
00:13:57,100 --> 00:14:01,100
 given an image, the red, green, blue values, the RGB values

247
00:14:01,100 --> 00:14:06,660
 at a bunch of pixels, then a very small change in the RGB

248
00:14:06,660 --> 00:14:09,980
 values can mean a very different--

249
00:14:09,980 --> 00:14:12,620
 can have a very different effect on what you're

250
00:14:12,620 --> 00:14:14,860
 trying to infer from the scene.

251
00:14:14,860 --> 00:14:19,380
 And the flip side is that a very small change in the world

252
00:14:19,380 --> 00:14:22,900
 can lead to a very large change in the RGB values.

253
00:14:22,900 --> 00:14:29,500
 So the mapping from RGB image to, for instance,

254
00:14:29,500 --> 00:14:35,220
 the pose of the red brick, this is a very complicated mapping.

255
00:14:35,220 --> 00:14:38,540
 A small change here can lead to a dramatic change here,

256
00:14:38,540 --> 00:14:40,460
 and vice versa.

257
00:14:40,460 --> 00:14:41,980
 Discontinuous changes, right?

258
00:14:41,980 --> 00:14:44,340
 If I have two objects that were to occlude each other,

259
00:14:44,340 --> 00:14:48,740
 for instance, it might be a very discontinuous change

260
00:14:48,740 --> 00:14:54,060
 in my ability to estimate this or know this and the colors

261
00:14:54,060 --> 00:14:55,380
 and color values that come out.

262
00:14:55,380 --> 00:14:57,260
 If I change the lighting conditions,

263
00:14:57,260 --> 00:14:59,760
 this can change dramatically, even though this changes not

264
00:14:59,760 --> 00:15:00,740
 at all.

265
00:15:00,740 --> 00:15:03,780
 So this map has traditionally been very, very hard

266
00:15:03,780 --> 00:15:07,820
 to reason about, and now we're doing a lot better than that

267
00:15:07,820 --> 00:15:11,420
 by trying to learn that map with data-driven methods

268
00:15:11,420 --> 00:15:13,500
 in deep learning.

269
00:15:13,500 --> 00:15:16,900
 But before that, I would say that we

270
00:15:16,900 --> 00:15:19,480
 have had another revolution, not just the machine learning,

271
00:15:19,480 --> 00:15:20,520
 deep learning revolution.

272
00:15:20,520 --> 00:15:21,440
 Oh, sorry, go ahead.

273
00:15:21,440 --> 00:15:21,940
 [INAUDIBLE]

274
00:15:21,940 --> 00:15:31,020
 That's a great question, yeah.

275
00:15:31,020 --> 00:15:36,140
 And the survey questions, which I totally read,

276
00:15:36,140 --> 00:15:37,940
 asked me to repeat the questions better.

277
00:15:37,940 --> 00:15:40,740
 So the question is, yeah, has there

278
00:15:40,740 --> 00:15:43,300
 worked beyond camera sensors?

279
00:15:43,300 --> 00:15:46,180
 It happens, not as much as I would like.

280
00:15:46,180 --> 00:15:48,060
 So absolutely, the other big sensors--

281
00:15:48,060 --> 00:15:49,940
 so we talk about our joint sensors a lot.

282
00:15:49,940 --> 00:15:53,700
 We talk about inertial sensors, maybe an IMU in the robot,

283
00:15:53,700 --> 00:15:56,140
 especially if it's a mobile robot.

284
00:15:56,140 --> 00:16:00,140
 The other obvious one for manipulation is tactile sensing.

285
00:16:00,140 --> 00:16:01,660
 And we are going to talk about that,

286
00:16:01,660 --> 00:16:04,300
 but that has been much slower to evolve

287
00:16:04,300 --> 00:16:07,420
 than camera-based sensing, partly just because the computer

288
00:16:07,420 --> 00:16:09,680
 vision world is enormous, and there's

289
00:16:09,680 --> 00:16:12,860
 massive data sets online for computer vision research,

290
00:16:12,860 --> 00:16:14,900
 and there's not the same availability of research

291
00:16:14,900 --> 00:16:15,940
 for tactile.

292
00:16:15,940 --> 00:16:18,220
 So that field is growing more slowly.

293
00:16:18,220 --> 00:16:21,340
 But it's an obviously important signal.

294
00:16:21,340 --> 00:16:23,260
 Now, you could go beyond that, right?

295
00:16:23,260 --> 00:16:27,060
 So I think we use smell.

296
00:16:27,060 --> 00:16:29,220
 I think we use sound.

297
00:16:29,220 --> 00:16:31,660
 I mean, you can hear things collide and stuff like this.

298
00:16:31,660 --> 00:16:32,860
 I was talking to--

299
00:16:32,860 --> 00:16:36,220
 I visited the Culinary Institute of America.

300
00:16:36,220 --> 00:16:39,060
 They have a very good group of researchers, and they do a lot

301
00:16:39,060 --> 00:16:42,420
 of research on the world of smell.

302
00:16:42,420 --> 00:16:44,540
 And they have a very good team of researchers.

303
00:16:44,540 --> 00:16:47,260
 And they have a very good team of scientists, and they have a

304
00:16:47,260 --> 00:16:48,940
 very good team of scientists.

305
00:16:48,940 --> 00:16:50,940
 And they have a very good team of scientists.

306
00:16:50,940 --> 00:16:53,060
 And they have a very good team of scientists.

307
00:16:53,060 --> 00:16:55,140
 And they have a very good team of scientists.

308
00:16:55,140 --> 00:16:57,100
 And they have a very good team of scientists.

309
00:16:57,100 --> 00:16:59,060
 And they have a very good team of scientists.

310
00:16:59,060 --> 00:17:01,060
 And they have a very good team of scientists.

311
00:17:01,060 --> 00:17:03,100
 And they have a very good team of scientists.

312
00:17:03,100 --> 00:17:05,100
 And they have a very good team of scientists.

313
00:17:05,100 --> 00:17:07,100
 And they have a very good team of scientists.

314
00:17:07,100 --> 00:17:09,100
 And they have a very good team of scientists.

315
00:17:09,100 --> 00:17:11,100
 And they have a very good team of scientists.

316
00:17:11,100 --> 00:17:13,100
 And they have a very good team of scientists.

317
00:17:13,100 --> 00:17:15,100
 And they have a very good team of scientists.

318
00:17:15,100 --> 00:17:17,100
 And they have a very good team of scientists.

319
00:17:17,100 --> 00:17:19,100
 And they have a very good team of scientists.

320
00:17:19,100 --> 00:17:21,100
 And they have a very good team of scientists.

321
00:17:21,100 --> 00:17:23,100
 And they have a very good team of scientists.

322
00:17:23,100 --> 00:17:25,100
 And they have a very good team of scientists.

323
00:17:25,100 --> 00:17:27,100
 And they have a very good team of scientists.

324
00:17:27,100 --> 00:17:29,100
 And they have a very good team of scientists.

325
00:17:29,100 --> 00:17:31,100
 And they have a very good team of scientists.

326
00:17:31,100 --> 00:17:33,100
 And they have a very good team of scientists.

327
00:17:33,100 --> 00:17:35,100
 And they have a very good team of scientists.

328
00:17:35,100 --> 00:17:37,100
 And they have a very good team of scientists.

329
00:17:37,100 --> 00:17:39,100
 And they have a very good team of scientists.

330
00:17:39,100 --> 00:17:41,100
 And they have a very good team of scientists.

331
00:17:41,100 --> 00:17:43,100
 And they have a very good team of scientists.

332
00:17:43,100 --> 00:17:45,100
 And they have a very good team of scientists.

333
00:17:45,100 --> 00:17:47,100
 And they have a very good team of scientists.

334
00:17:47,100 --> 00:17:49,100
 And they have a very good team of scientists.

335
00:17:49,100 --> 00:17:51,100
 And they have a very good team of scientists.

336
00:17:51,100 --> 00:17:53,100
 And they have a very good team of scientists.

337
00:17:53,100 --> 00:17:55,100
 And they have a very good team of scientists.

338
00:17:55,100 --> 00:17:57,100
 And they have a very good team of scientists.

339
00:17:57,100 --> 00:17:59,100
 And they have a very good team of scientists.

340
00:17:59,100 --> 00:18:01,100
 And they have a very good team of scientists.

341
00:18:01,100 --> 00:18:03,100
 And they have a very good team of scientists.

342
00:18:03,100 --> 00:18:05,100
 And they have a very good team of scientists.

343
00:18:05,100 --> 00:18:07,100
 And they have a very good team of scientists.

344
00:18:07,100 --> 00:18:09,100
 And they have a very good team of scientists.

345
00:18:09,100 --> 00:18:11,100
 And they have a very good team of scientists.

346
00:18:11,100 --> 00:18:13,100
 And they have a very good team of scientists.

347
00:18:13,100 --> 00:18:15,100
 And they have a very good team of scientists.

348
00:18:15,100 --> 00:18:17,100
 And they have a very good team of scientists.

349
00:18:17,100 --> 00:18:19,100
 And they have a very good team of scientists.

350
00:18:19,100 --> 00:18:21,100
 And they have a very good team of scientists.

351
00:18:21,100 --> 00:18:23,100
 And they have a very good team of scientists.

352
00:18:23,100 --> 00:18:25,100
 And they have a very good team of scientists.

353
00:18:25,100 --> 00:18:27,100
 And they have a very good team of scientists.

354
00:18:27,100 --> 00:18:29,100
 And they have a very good team of scientists.

355
00:18:29,100 --> 00:18:31,100
 And they have a very good team of scientists.

356
00:18:31,100 --> 00:18:33,100
 And they have a very good team of scientists.

357
00:18:33,100 --> 00:18:35,100
 And they have a very good team of scientists.

358
00:18:35,100 --> 00:18:37,100
 And they have a very good team of scientists.

359
00:18:37,100 --> 00:18:39,100
 And they have a very good team of scientists.

360
00:18:39,100 --> 00:18:41,100
 And they have a very good team of scientists.

361
00:18:41,100 --> 00:18:43,100
 And they have a very good team of scientists.

362
00:18:43,100 --> 00:18:45,100
 And they have a very good team of scientists.

363
00:18:45,100 --> 00:18:47,100
 And they have a very good team of scientists.

364
00:18:47,100 --> 00:18:49,100
 And they have a very good team of scientists.

365
00:18:49,100 --> 00:18:51,100
 And they have a very good team of scientists.

366
00:18:51,100 --> 00:18:53,100
 And they have a very good team of scientists.

367
00:18:53,100 --> 00:18:55,100
 And they have a very good team of scientists.

368
00:18:55,100 --> 00:18:57,100
 And they have a very good team of scientists.

369
00:18:57,100 --> 00:18:59,100
 And they have a very good team of scientists.

370
00:18:59,100 --> 00:19:01,100
 And they have a very good team of scientists.

371
00:19:01,100 --> 00:19:03,100
 And they have a very good team of scientists.

372
00:19:03,100 --> 00:19:05,100
 And they have a very good team of scientists.

373
00:19:05,100 --> 00:19:07,100
 And they have a very good team of scientists.

374
00:19:07,100 --> 00:19:09,100
 And they have a very good team of scientists.

375
00:19:09,100 --> 00:19:11,100
 And they have a very good team of scientists.

376
00:19:11,100 --> 00:19:13,100
 And they have a very good team of scientists.

377
00:19:13,100 --> 00:19:15,100
 And they have a very good team of scientists.

378
00:19:15,100 --> 00:19:17,100
 And they have a very good team of scientists.

379
00:19:17,100 --> 00:19:19,100
 And they have a very good team of scientists.

380
00:19:19,100 --> 00:19:21,100
 And they have a very good team of scientists.

381
00:19:21,100 --> 00:19:23,100
 And they have a very good team of scientists.

382
00:19:23,100 --> 00:19:25,100
 And they have a very good team of scientists.

383
00:19:25,100 --> 00:19:27,100
 And they have a very good team of scientists.

384
00:19:27,100 --> 00:19:29,100
 And they have a very good team of scientists.

385
00:19:29,100 --> 00:19:31,100
 And they have a very good team of scientists.

386
00:19:31,100 --> 00:19:33,100
 And they have a very good team of scientists.

387
00:19:33,100 --> 00:19:35,100
 And they have a very good team of scientists.

388
00:19:35,100 --> 00:19:37,100
 And they have a very good team of scientists.

389
00:19:37,100 --> 00:19:39,100
 And they have a very good team of scientists.

390
00:19:39,100 --> 00:19:41,100
 And they have a very good team of scientists.

391
00:19:41,100 --> 00:19:43,100
 And they have a very good team of scientists.

392
00:19:43,100 --> 00:19:45,100
 And they have a very good team of scientists.

393
00:19:45,100 --> 00:19:47,100
 And they have a very good team of scientists.

394
00:19:47,100 --> 00:19:49,100
 And they have a very good team of scientists.

395
00:19:49,100 --> 00:19:51,100
 And they have a very good team of scientists.

396
00:19:51,100 --> 00:19:53,100
 And they have a very good team of scientists.

397
00:19:53,100 --> 00:19:55,100
 And they have a very good team of scientists.

398
00:19:55,100 --> 00:19:57,100
 And they have a very good team of scientists.

399
00:19:57,100 --> 00:19:59,100
 And they have a very good team of scientists.

400
00:19:59,100 --> 00:20:01,100
 And they have a very good team of scientists.

401
00:20:01,100 --> 00:20:03,100
 And they have a very good team of scientists.

402
00:20:03,100 --> 00:20:05,100
 And they have a very good team of scientists.

403
00:20:05,100 --> 00:20:07,100
 And they have a very good team of scientists.

404
00:20:07,100 --> 00:20:09,100
 And they have a very good team of scientists.

405
00:20:09,100 --> 00:20:11,100
 And they have a very good team of scientists.

406
00:20:11,100 --> 00:20:13,100
 And they have a very good team of scientists.

407
00:20:13,100 --> 00:20:15,100
 And they have a very good team of scientists.

408
00:20:15,100 --> 00:20:17,100
 And they have a very good team of scientists.

409
00:20:17,100 --> 00:20:19,100
 And they have a very good team of scientists.

410
00:20:19,100 --> 00:20:21,100
 And they have a very good team of scientists.

411
00:20:21,100 --> 00:20:23,100
 And they have a very good team of scientists.

412
00:20:23,100 --> 00:20:25,100
 And they have a very good team of scientists.

413
00:20:25,100 --> 00:20:27,100
 And they have a very good team of scientists.

414
00:20:27,100 --> 00:20:29,100
 And they have a very good team of scientists.

415
00:20:29,100 --> 00:20:31,100
 And they have a very good team of scientists.

416
00:20:31,100 --> 00:20:33,100
 And they have a very good team of scientists.

417
00:20:33,100 --> 00:20:35,100
 And they have a very good team of scientists.

418
00:20:35,100 --> 00:20:37,100
 And they have a very good team of scientists.

419
00:20:37,100 --> 00:20:39,100
 And they have a very good team of scientists.

420
00:20:39,100 --> 00:20:41,100
 And they have a very good team of scientists.

421
00:20:41,100 --> 00:20:43,100
 And they have a very good team of scientists.

422
00:20:43,100 --> 00:20:45,100
 And they have a very good team of scientists.

423
00:20:45,100 --> 00:20:47,100
 And they have a very good team of scientists.

424
00:20:47,100 --> 00:20:49,100
 And they have a very good team of scientists.

425
00:20:49,100 --> 00:20:51,100
 And they have a very good team of scientists.

426
00:20:51,100 --> 00:20:53,100
 And they have a very good team of scientists.

427
00:20:53,100 --> 00:20:55,100
 And they have a very good team of scientists.

428
00:20:55,100 --> 00:20:57,100
 And they have a very good team of scientists.

429
00:20:57,100 --> 00:20:59,100
 And they have a very good team of scientists.

430
00:20:59,100 --> 00:21:01,100
 And they have a very good team of scientists.

431
00:21:01,100 --> 00:21:03,100
 And they have a very good team of scientists.

432
00:21:03,100 --> 00:21:05,100
 And they have a very good team of scientists.

433
00:21:05,100 --> 00:21:07,100
 And they have a very good team of scientists.

434
00:21:07,100 --> 00:21:09,100
 And they have a very good team of scientists.

435
00:21:09,100 --> 00:21:11,100
 And they have a very good team of scientists.

436
00:21:11,100 --> 00:21:13,100
 And they have a very good team of scientists.

437
00:21:13,100 --> 00:21:15,100
 And they have a very good team of scientists.

438
00:21:15,100 --> 00:21:17,100
 And they have a very good team of scientists.

439
00:21:17,100 --> 00:21:19,100
 And they have a very good team of scientists.

440
00:21:19,100 --> 00:21:21,100
 And they have a very good team of scientists.

441
00:21:21,100 --> 00:21:23,100
 And they have a very good team of scientists.

442
00:21:23,100 --> 00:21:25,100
 And they have a very good team of scientists.

443
00:21:25,100 --> 00:21:27,100
 And they have a very good team of scientists.

444
00:21:27,100 --> 00:21:29,100
 And they have a very good team of scientists.

445
00:21:29,100 --> 00:21:31,100
 And they have a very good team of scientists.

446
00:21:31,100 --> 00:21:33,100
 And they have a very good team of scientists.

447
00:21:33,100 --> 00:21:35,100
 And they have a very good team of scientists.

448
00:21:35,100 --> 00:21:37,100
 And they have a very good team of scientists.

449
00:21:37,100 --> 00:21:39,100
 And they have a very good team of scientists.

450
00:21:39,100 --> 00:21:41,100
 And they have a very good team of scientists.

451
00:21:41,100 --> 00:21:43,100
 And they have a very good team of scientists.

452
00:21:43,100 --> 00:21:45,100
 And they have a very good team of scientists.

453
00:21:45,100 --> 00:21:47,100
 And they have a very good team of scientists.

454
00:21:47,100 --> 00:21:49,100
 And they have a very good team of scientists.

455
00:21:49,100 --> 00:21:51,100
 And they have a very good team of scientists.

456
00:21:51,100 --> 00:21:53,100
 And they have a very good team of scientists.

457
00:21:53,100 --> 00:21:55,100
 And they have a very good team of scientists.

458
00:21:55,100 --> 00:21:57,100
 And they have a very good team of scientists.

459
00:21:57,100 --> 00:21:59,100
 And they have a very good team of scientists.

460
00:21:59,100 --> 00:22:01,100
 And they have a very good team of scientists.

461
00:22:01,100 --> 00:22:03,100
 And they have a very good team of scientists.

462
00:22:03,100 --> 00:22:05,100
 And they have a very good team of scientists.

463
00:22:05,100 --> 00:22:07,100
 And they have a very good team of scientists.

464
00:22:07,100 --> 00:22:09,100
 And they have a very good team of scientists.

465
00:22:09,100 --> 00:22:11,100
 And they have a very good team of scientists.

466
00:22:11,100 --> 00:22:13,100
 And they have a very good team of scientists.

467
00:22:13,100 --> 00:22:15,100
 And they have a very good team of scientists.

468
00:22:15,100 --> 00:22:17,100
 And they have a very good team of scientists.

469
00:22:17,100 --> 00:22:19,100
 And they have a very good team of scientists.

470
00:22:19,100 --> 00:22:21,100
 And they have a very good team of scientists.

471
00:22:21,100 --> 00:22:23,100
 And they have a very good team of scientists.

472
00:22:23,100 --> 00:22:25,100
 And they have a very good team of scientists.

473
00:22:25,100 --> 00:22:27,100
 And they have a very good team of scientists.

474
00:22:27,100 --> 00:22:29,100
 And they have a very good team of scientists.

475
00:22:29,100 --> 00:22:31,100
 And they have a very good team of scientists.

476
00:22:31,100 --> 00:22:33,100
 And they have a very good team of scientists.

477
00:22:33,100 --> 00:22:35,100
 And they have a very good team of scientists.

478
00:22:35,100 --> 00:22:37,100
 And they have a very good team of scientists.

479
00:22:37,100 --> 00:22:39,100
 And they have a very good team of scientists.

480
00:22:39,100 --> 00:22:41,100
 And actually, this is the sensor that we're going to use for class.

481
00:22:41,100 --> 00:22:43,100
 And actually, this is the sensor that we're going to use for class.

482
00:22:43,100 --> 00:22:45,100
 And I happen to have one in my pocket.

483
00:22:45,100 --> 00:22:47,100
 Not always, just today.

484
00:22:47,100 --> 00:22:49,100
 It looks about like this.

485
00:22:49,100 --> 00:22:51,100
 And this is what you saw in the simulation

486
00:22:51,100 --> 00:22:53,100
 that was suddenly around the bins

487
00:22:53,100 --> 00:22:55,100
 in the manipulation station demo there.

488
00:22:55,100 --> 00:22:57,100
 in the manipulation station demo there.

489
00:22:57,100 --> 00:22:59,100
 It's an Intel RealSense D415.

490
00:22:59,100 --> 00:23:01,100
 This series has been discontinued.

491
00:23:01,100 --> 00:23:03,100
 There was a momentary scare where we thought Intel was cancelling the whole line.

492
00:23:03,100 --> 00:23:05,100
 There was a momentary scare where we thought Intel was cancelling the whole line.

493
00:23:05,100 --> 00:23:07,100
 But the line has continued.

494
00:23:07,100 --> 00:23:09,100
 And these,

495
00:23:09,100 --> 00:23:11,100
 the nice thing

496
00:23:11,100 --> 00:23:13,100
 about projected texture stereo

497
00:23:13,100 --> 00:23:15,100
 as opposed to some of the active

498
00:23:15,100 --> 00:23:17,100
 time of flight sensors is that you can put

499
00:23:17,100 --> 00:23:19,100
 multiple cameras in the same scene

500
00:23:19,100 --> 00:23:21,100
 multiple cameras in the same scene

501
00:23:21,100 --> 00:23:23,100
 and they don't interfere.

502
00:23:23,100 --> 00:23:25,100
 It used to be as soon as we had some of these time of flight sensors

503
00:23:25,100 --> 00:23:27,100
 we would have to really carefully

504
00:23:27,100 --> 00:23:29,100
 synchronize the frames of each camera

505
00:23:29,100 --> 00:23:31,100
 synchronize the frames of each camera

506
00:23:31,100 --> 00:23:33,100
 otherwise they would interfere with each other.

507
00:23:33,100 --> 00:23:35,100
 And these that are passive, but they're just

508
00:23:35,100 --> 00:23:37,100
 assigning some texture. Any texture is good.

509
00:23:37,100 --> 00:23:39,100
 And they don't assume anything about the

510
00:23:39,100 --> 00:23:41,100
 particular texture they're putting on.

511
00:23:41,100 --> 00:23:43,100
 These now have the ability to sort of work

512
00:23:43,100 --> 00:23:45,100
 multiple cameras at the same time.

513
00:23:45,100 --> 00:23:47,100
 Yes?

514
00:23:47,100 --> 00:23:55,100
 Yeah. Well this is the one that's most relevant

515
00:23:55,100 --> 00:23:57,100
 so I'll tell you this one.

516
00:23:57,100 --> 00:23:59,100
 So if I do the block matching stereo

517
00:23:59,100 --> 00:24:01,100
 this picture

518
00:24:01,100 --> 00:24:03,100
 this cartoon I had here

519
00:24:03,100 --> 00:24:05,100
 there's a tree in the left, there's a tree in the right

520
00:24:05,100 --> 00:24:07,100
 I'm trying to find the same image.

521
00:24:07,100 --> 00:24:09,100
 If it really does look like this where most of the image

522
00:24:09,100 --> 00:24:11,100
 is white

523
00:24:11,100 --> 00:24:13,100
 because I'm looking at a white wall or something

524
00:24:13,100 --> 00:24:15,100
 even this chalkboard probably has enough

525
00:24:15,100 --> 00:24:17,100
 texture because of my erasing

526
00:24:17,100 --> 00:24:19,100
 and stuff. But that's the problem

527
00:24:19,100 --> 00:24:21,100
 is that you won't know the depth

528
00:24:21,100 --> 00:24:23,100
 if two parts of the image look very similar.

529
00:24:23,100 --> 00:24:25,100
 So the trick there

530
00:24:25,100 --> 00:24:27,100
 is just in the infrared spectrum

531
00:24:27,100 --> 00:24:29,100
 throw some random dots

532
00:24:29,100 --> 00:24:31,100
 project texture.

533
00:24:31,100 --> 00:24:33,100
 And then, even if they're random

534
00:24:33,100 --> 00:24:35,100
 at least when I do my matching

535
00:24:35,100 --> 00:24:37,100
 this block will look different than this block

536
00:24:37,100 --> 00:24:39,100
 and it's once again able

537
00:24:39,100 --> 00:24:41,100
 to extract the depth.

538
00:24:41,100 --> 00:24:43,100
 And you see now if you're two different cameras

539
00:24:43,100 --> 00:24:45,100
 because I haven't assumed anything

540
00:24:45,100 --> 00:24:47,100
 about the specific texture that I projected

541
00:24:47,100 --> 00:24:49,100
 the two cameras won't interfere.

542
00:24:49,100 --> 00:24:51,100
 They will both just have enough texture.

543
00:24:51,100 --> 00:24:57,100
 Okay. So

544
00:24:57,100 --> 00:24:59,100
 of course we're going to be able to simulate

545
00:24:59,100 --> 00:25:01,100
 these cameras.

546
00:25:01,100 --> 00:25:05,100
 Now, let's just think about

547
00:25:05,100 --> 00:25:07,100
 what's happening here. So this is a very simple

548
00:25:07,100 --> 00:25:09,100
 diagram. I'm going to let it explode

549
00:25:09,100 --> 00:25:11,100
 because I know it's too small in this current frame.

550
00:25:11,100 --> 00:25:13,100
 But the new thing we've added here

551
00:25:13,100 --> 00:25:15,100
 is a RGBD sensor

552
00:25:15,100 --> 00:25:17,100
 system. Just

553
00:25:17,100 --> 00:25:19,100
 taxon. It listens to the scene graph

554
00:25:19,100 --> 00:25:21,100
 and it publishes

555
00:25:21,100 --> 00:25:23,100
 color images and depth images

556
00:25:23,100 --> 00:25:25,100
 which is RGB

557
00:25:25,100 --> 00:25:27,100
 red, green, blue

558
00:25:27,100 --> 00:25:29,100
 depth sensor.

559
00:25:29,100 --> 00:25:31,100
 Okay.

560
00:25:31,100 --> 00:25:33,100
 And its

561
00:25:33,100 --> 00:25:35,100
 simplicity in this diagram

562
00:25:35,100 --> 00:25:37,100
 hides the massive

563
00:25:37,100 --> 00:25:39,100
 complexity behind it, right?

564
00:25:39,100 --> 00:25:41,100
 So it's potentially a full game

565
00:25:41,100 --> 00:25:43,100
 engine renderer that's happening behind the

566
00:25:43,100 --> 00:25:45,100
 scenes there. The one we tend to use

567
00:25:45,100 --> 00:25:47,100
 in class here is just a relatively

568
00:25:47,100 --> 00:25:49,100
 simpler OpenGL renderer

569
00:25:49,100 --> 00:25:51,100
 that doesn't

570
00:25:51,100 --> 00:25:53,100
 do photorealistic but it's

571
00:25:53,100 --> 00:25:55,100
 very fast and very low computational

572
00:25:55,100 --> 00:25:57,100
 overhead and it runs fine on DeepNote and all

573
00:25:57,100 --> 00:25:59,100
 these things. But when we're

574
00:25:59,100 --> 00:26:01,100
 trying to do things like train a perception

575
00:26:01,100 --> 00:26:03,100
 system with deep learning, we will

576
00:26:03,100 --> 00:26:05,100
 have a version of that that

577
00:26:05,100 --> 00:26:07,100
 renders with photorealistic

578
00:26:07,100 --> 00:26:09,100
 rendering.

579
00:26:09,100 --> 00:26:11,100
 Okay. So then

580
00:26:11,100 --> 00:26:13,100
 what you get out of that

581
00:26:13,100 --> 00:26:15,100
 is a color image, the standard thing you'd

582
00:26:15,100 --> 00:26:17,100
 like to see.

583
00:26:17,100 --> 00:26:19,100
 In this I only put the mustard bottle in the

584
00:26:19,100 --> 00:26:21,100
 world. The background

585
00:26:21,100 --> 00:26:23,100
 is just whatever

586
00:26:23,100 --> 00:26:25,100
 zero in one coordinate

587
00:26:25,100 --> 00:26:27,100
 system mapped into the RGB space.

588
00:26:27,100 --> 00:26:29,100
 Okay. And you also

589
00:26:29,100 --> 00:26:31,100
 get this depth image.

590
00:26:31,100 --> 00:26:33,100
 So for every pixel, what these cameras

591
00:26:33,100 --> 00:26:35,100
 mostly give you, is for every pixel that

592
00:26:35,100 --> 00:26:37,100
 you have a red, green, blue value, you also have

593
00:26:37,100 --> 00:26:39,100
 an estimated depth.

594
00:26:39,100 --> 00:26:41,100
 Okay. That's the natural

595
00:26:41,100 --> 00:26:43,100
 interface that you have

596
00:26:43,100 --> 00:26:45,100
 to all these depth based sensors.

597
00:26:45,100 --> 00:26:49,100
 Okay. So the system is very

598
00:26:49,100 --> 00:26:51,100
 simple. You just go multibody plant scene graph.

599
00:26:51,100 --> 00:26:53,100
 I'm going to show you this example

600
00:26:53,100 --> 00:26:55,100
 that has both, renders the

601
00:26:55,100 --> 00:26:57,100
 ground truth

602
00:26:57,100 --> 00:26:59,100
 mustard bottle with

603
00:26:59,100 --> 00:27:01,100
 a standard meshcat visualizer.

604
00:27:01,100 --> 00:27:03,100
 And then I'm adding the RGBD sensor

605
00:27:03,100 --> 00:27:05,100
 which gives me a depth

606
00:27:05,100 --> 00:27:07,100
 image, but to

607
00:27:07,100 --> 00:27:09,100
 put it, to render it, I'm going to turn it into a

608
00:27:09,100 --> 00:27:11,100
 point cloud, which we're going to talk about,

609
00:27:11,100 --> 00:27:13,100
 and then hand it out to another visualizer.

610
00:27:13,100 --> 00:27:15,100
 And this is what it looks like.

611
00:27:15,100 --> 00:27:17,100
 [silence]

612
00:27:17,100 --> 00:27:23,100
 There it is.

613
00:27:23,100 --> 00:27:25,100
 Okay. So I have a camera right

614
00:27:25,100 --> 00:27:27,100
 here. I put my

615
00:27:27,100 --> 00:27:29,100
 frame on my camera so you could see,

616
00:27:29,100 --> 00:27:31,100
 you know, understand everything in frame

617
00:27:31,100 --> 00:27:33,100
 coordinates. Okay. And what you see

618
00:27:33,100 --> 00:27:35,100
 mostly here is the ground truth

619
00:27:35,100 --> 00:27:37,100
 mustard bottle. But if you go

620
00:27:37,100 --> 00:27:39,100
 in and you

621
00:27:39,100 --> 00:27:41,100
 turn off the ground truth,

622
00:27:41,100 --> 00:27:43,100
 you can see what

623
00:27:43,100 --> 00:27:45,100
 the camera sees, which is the rendered

624
00:27:45,100 --> 00:27:47,100
 point cloud. Okay.

625
00:27:47,100 --> 00:27:49,100
 And I think what's very

626
00:27:49,100 --> 00:27:51,100
 important to understand, just from this very simple

627
00:27:51,100 --> 00:27:53,100
 example, is that

628
00:27:53,100 --> 00:27:55,100
 the camera being where it is,

629
00:27:55,100 --> 00:27:57,100
 which I turned off,

630
00:27:57,100 --> 00:27:59,100
 yeah,

631
00:27:59,100 --> 00:28:01,100
 the camera being where it is,

632
00:28:01,100 --> 00:28:03,100
 can only see part of the mustard bottle.

633
00:28:03,100 --> 00:28:05,100
 Right? This is going to

634
00:28:05,100 --> 00:28:07,100
 have a dramatic effect on the way we think about

635
00:28:07,100 --> 00:28:09,100
 these algorithms, right? So occlusions,

636
00:28:09,100 --> 00:28:11,100
 partial views,

637
00:28:11,100 --> 00:28:13,100
 are part of the problem with perception.

638
00:28:13,100 --> 00:28:15,100
 You're only going to see parts of objects

639
00:28:15,100 --> 00:28:17,100
 in general. You're rarely going to see

640
00:28:17,100 --> 00:28:19,100
 perfect, especially you'll never see the bottom.

641
00:28:19,100 --> 00:28:21,100
 Basically, if it's on a table or something

642
00:28:21,100 --> 00:28:23,100
 like that, you'll certainly never see the bottom

643
00:28:23,100 --> 00:28:25,100
 and you'll probably put multiple cameras

644
00:28:25,100 --> 00:28:27,100
 around to get multiple views

645
00:28:27,100 --> 00:28:29,100
 when you have the luxury to

646
00:28:29,100 --> 00:28:31,100
 do that.

647
00:28:31,100 --> 00:28:33,100
 For instance,

648
00:28:33,100 --> 00:28:35,100
 when we did the dish-loading

649
00:28:35,100 --> 00:28:37,100
 example that I told you about,

650
00:28:37,100 --> 00:28:39,100
 these little D415s,

651
00:28:39,100 --> 00:28:41,100
 we just took the philosophy, alright, just put them everywhere.

652
00:28:41,100 --> 00:28:43,100
 The problem's hard enough.

653
00:28:43,100 --> 00:28:45,100
 I don't want to mess too much.

654
00:28:45,100 --> 00:28:47,100
 We still have partial views and occlusions

655
00:28:47,100 --> 00:28:49,100
 that we have to deal with. I'll define those.

656
00:28:49,100 --> 00:28:51,100
 But there's D415s

657
00:28:51,100 --> 00:28:53,100
 all over the environment.

658
00:28:53,100 --> 00:28:55,100
 This one's trying to look into the dishwasher

659
00:28:55,100 --> 00:28:57,100
 when it was there. There's two

660
00:28:57,100 --> 00:28:59,100
 on the wrist of the robot.

661
00:28:59,100 --> 00:29:01,100
 Okay?

662
00:29:01,100 --> 00:29:03,100
 So,

663
00:29:03,100 --> 00:29:05,100
 there's interesting operations

664
00:29:05,100 --> 00:29:07,100
 we'll think about, about how do you fuse all those

665
00:29:07,100 --> 00:29:09,100
 point clouds together and the like.

666
00:29:09,100 --> 00:29:11,100
 Yes?

667
00:29:11,100 --> 00:29:13,100
 [inaudible]

668
00:29:13,100 --> 00:29:15,100
 Yes.

669
00:29:15,100 --> 00:29:17,100
 This one was not a mobile robot,

670
00:29:17,100 --> 00:29:19,100
 but if you have a mobile robot, then

671
00:29:19,100 --> 00:29:21,100
 you quickly need that requirement that you've

672
00:29:21,100 --> 00:29:23,100
 actually integrated them directly into the robot.

673
00:29:23,100 --> 00:29:25,100
 So, absolutely.

674
00:29:25,100 --> 00:29:27,100
 The most common

675
00:29:27,100 --> 00:29:29,100
 place, of course, to put them is in the robot head

676
00:29:29,100 --> 00:29:31,100
 for no other reason than we like humans,

677
00:29:31,100 --> 00:29:33,100
 I guess.

678
00:29:33,100 --> 00:29:35,100
 Another natural thing you would think of is

679
00:29:35,100 --> 00:29:37,100
 you put it in the hand, and we have

680
00:29:37,100 --> 00:29:39,100
 some of the hands I brought down before had cameras

681
00:29:39,100 --> 00:29:41,100
 inside them. And those are

682
00:29:41,100 --> 00:29:43,100
 useful. I'll show you an example later of them being

683
00:29:43,100 --> 00:29:45,100
 useful. But they aren't quite

684
00:29:45,100 --> 00:29:47,100
 the tactile sensors that we were talking about a

685
00:29:47,100 --> 00:29:49,100
 minute ago, because

686
00:29:49,100 --> 00:29:51,100
 one of the problems with these types of sensors

687
00:29:51,100 --> 00:29:53,100
 is that they have a minimum

688
00:29:53,100 --> 00:29:55,100
 range in addition to a maximum range.

689
00:29:55,100 --> 00:29:57,100
 And if you get too close to an object, then

690
00:29:57,100 --> 00:29:59,100
 they will become blind again.

691
00:29:59,100 --> 00:30:01,100
 So, yes, absolutely.

692
00:30:01,100 --> 00:30:03,100
 That's an interesting question about where do you put them on the

693
00:30:03,100 --> 00:30:05,100
 robot, and the dream would be that a robot

694
00:30:05,100 --> 00:30:07,100
 is only instrumented by itself and can go into

695
00:30:07,100 --> 00:30:09,100
 any environment.

696
00:30:09,100 --> 00:30:11,100
 Yes?

697
00:30:11,100 --> 00:30:23,100
 [inaudible]

698
00:30:23,100 --> 00:30:25,100
 Yes.

699
00:30:25,100 --> 00:30:27,100
 [inaudible]

700
00:30:27,100 --> 00:30:29,100
 Okay.

701
00:30:29,100 --> 00:30:31,100
 Yeah, so we're not going to talk about psychotic.

702
00:30:31,100 --> 00:30:33,100
 The question was about psychotic

703
00:30:33,100 --> 00:30:35,100
 eye movements. I showed one example.

704
00:30:35,100 --> 00:30:37,100
 So there's

705
00:30:37,100 --> 00:30:39,100
 the example I showed you of the super fast

706
00:30:39,100 --> 00:30:41,100
 hand that was going like this and catching

707
00:30:41,100 --> 00:30:43,100
 a phone. It was actually doing a simple

708
00:30:43,100 --> 00:30:45,100
 computer vision algorithm, but it was tracking

709
00:30:45,100 --> 00:30:47,100
 really fast.

710
00:30:47,100 --> 00:30:49,100
 It didn't have the psychots that

711
00:30:49,100 --> 00:30:51,100
 a human does, but it was doing a continuous tracking.

712
00:30:51,100 --> 00:30:53,100
 And that can be good

713
00:30:53,100 --> 00:30:55,100
 in many applications.

714
00:30:55,100 --> 00:30:57,100
 The other thing that's really

715
00:30:57,100 --> 00:30:59,100
 popular now is event cameras,

716
00:30:59,100 --> 00:31:01,100
 which will try to, at super high rates,

717
00:31:01,100 --> 00:31:03,100
 just tell you the pixels that changed.

718
00:31:03,100 --> 00:31:05,100
 Maybe we'll get to that

719
00:31:05,100 --> 00:31:07,100
 later, but think

720
00:31:07,100 --> 00:31:09,100
 slow stationary cameras for today,

721
00:31:09,100 --> 00:31:11,100
 just to get us started. Yes?

722
00:31:11,100 --> 00:31:13,100
 [inaudible]

723
00:31:13,100 --> 00:31:15,100
 Oh, saccade. So it turns out if you were

724
00:31:15,100 --> 00:31:17,100
 to have me look, if you

725
00:31:17,100 --> 00:31:19,100
 were to have me track my finger

726
00:31:19,100 --> 00:31:21,100
 moving across here,

727
00:31:21,100 --> 00:31:23,100
 my eye doesn't move as smoothly as you'd like.

728
00:31:23,100 --> 00:31:25,100
 It actually jumps.

729
00:31:25,100 --> 00:31:27,100
 So you tend to have

730
00:31:27,100 --> 00:31:29,100
 a fixed gaze and quick transition

731
00:31:29,100 --> 00:31:31,100
 to another gaze.

732
00:31:31,100 --> 00:31:33,100
 So eyes, human eyes, tend to

733
00:31:33,100 --> 00:31:35,100
 jump in discrete

734
00:31:35,100 --> 00:31:37,100
 quick events. The idea

735
00:31:37,100 --> 00:31:39,100
 there is, it's even better

736
00:31:39,100 --> 00:31:41,100
 if you were to spin around, I see people moving their fingers.

737
00:31:41,100 --> 00:31:43,100
 It's even better if you were to spin yourself in a chair,

738
00:31:43,100 --> 00:31:45,100
 which I'm glad you don't have rotary chairs,

739
00:31:45,100 --> 00:31:47,100
 otherwise I would have lost a few minutes.

740
00:31:47,100 --> 00:31:49,100
 But, yeah.

741
00:31:49,100 --> 00:31:51,100
 So the idea is that

742
00:31:51,100 --> 00:31:53,100
 humans are mostly blind when their eyes are moving.

743
00:31:53,100 --> 00:31:55,100
 And so roughly

744
00:31:55,100 --> 00:31:57,100
 we do as much as we possibly can to keep our eyes

745
00:31:57,100 --> 00:31:59,100
 fixed, and then move very quickly to the next thing.

746
00:31:59,100 --> 00:32:01,100
 This is also why

747
00:32:01,100 --> 00:32:03,100
 birds, this is going away,

748
00:32:03,100 --> 00:32:05,100
 this is also why birds sort of walk like this, right?

749
00:32:05,100 --> 00:32:07,100
 Right?

750
00:32:07,100 --> 00:32:09,100
 [laughter]

751
00:32:09,100 --> 00:32:11,100
 That's a saccade.

752
00:32:11,100 --> 00:32:13,100
 That's a saccade, right? That's just,

753
00:32:13,100 --> 00:32:15,100
 they don't have the ability to move their eye in their head,

754
00:32:15,100 --> 00:32:17,100
 so they move their whole head.

755
00:32:17,100 --> 00:32:19,100
 But it's because they're blind

756
00:32:19,100 --> 00:32:21,100
 when their eyes are moving, roughly.

757
00:32:21,100 --> 00:32:23,100
 Yes, see?

758
00:32:23,100 --> 00:32:25,100
 Watch out what you ask, right?

759
00:32:25,100 --> 00:32:27,100
 Okay, good.

760
00:32:27,100 --> 00:32:29,100
 Moving on.

761
00:32:29,100 --> 00:32:31,100
 The other thing to know

762
00:32:31,100 --> 00:32:33,100
 about these is that, although I

763
00:32:33,100 --> 00:32:35,100
 do think the revolution has

764
00:32:35,100 --> 00:32:37,100
 given us beautiful sensors that we didn't

765
00:32:37,100 --> 00:32:39,100
 have before, enabling new algorithms,

766
00:32:39,100 --> 00:32:41,100
 they're not perfect sensors still, and we

767
00:32:41,100 --> 00:32:43,100
 have to think a lot about

768
00:32:43,100 --> 00:32:45,100
 the noise in these sensors.

769
00:32:45,100 --> 00:32:47,100
 We're going to talk about

770
00:32:47,100 --> 00:32:49,100
 clean sensors today, and talk about

771
00:32:49,100 --> 00:32:51,100
 noisy sensors in the next lecture.

772
00:32:51,100 --> 00:32:53,100
 But if you look at the,

773
00:32:53,100 --> 00:32:55,100
 you know, we point this in the lab to a

774
00:32:55,100 --> 00:32:57,100
 pile of interesting objects,

775
00:32:57,100 --> 00:32:59,100
 if we simulated

776
00:32:59,100 --> 00:33:01,100
 those objects, we would get, this is the

777
00:33:01,100 --> 00:33:03,100
 depth image I would love to get out of my sensor.

778
00:33:03,100 --> 00:33:05,100
 The one you really get looks

779
00:33:05,100 --> 00:33:07,100
 more like this. And it's

780
00:33:07,100 --> 00:33:09,100
 accurate, it's very accurate

781
00:33:09,100 --> 00:33:11,100
 in some places, and it's very inaccurate

782
00:33:11,100 --> 00:33:13,100
 in other places. And it depends exactly,

783
00:33:13,100 --> 00:33:15,100
 the properties of that

784
00:33:15,100 --> 00:33:17,100
 error depends on which technology

785
00:33:17,100 --> 00:33:19,100
 you're using, but it's very common

786
00:33:19,100 --> 00:33:21,100
 when you see things that are at

787
00:33:21,100 --> 00:33:23,100
 sharp angles to the camera,

788
00:33:23,100 --> 00:33:25,100
 that your projected texture doesn't do so well.

789
00:33:25,100 --> 00:33:27,100
 For instance, and you'll

790
00:33:27,100 --> 00:33:29,100
 get, like, the sides of objects tend

791
00:33:29,100 --> 00:33:31,100
 to be, have dropouts. These black

792
00:33:31,100 --> 00:33:33,100
 frames were the places where it didn't

793
00:33:33,100 --> 00:33:35,100
 get a depth return, was unable to estimate.

794
00:33:35,100 --> 00:33:37,100
 So it just said, I don't know, there's nothing there.

795
00:33:37,100 --> 00:33:39,100
 Right? And that happens a lot on the side

796
00:33:39,100 --> 00:33:41,100
 of objects. Also, shiny

797
00:33:41,100 --> 00:33:43,100
 objects tend to be defeating

798
00:33:43,100 --> 00:33:45,100
 for this, or transparent objects aren't so

799
00:33:45,100 --> 00:33:47,100
 good for stereo.

800
00:33:47,100 --> 00:33:49,100
 So, a lot of those things

801
00:33:49,100 --> 00:33:51,100
 are still challenges with these

802
00:33:51,100 --> 00:33:53,100
 sensors. Now, the NERF

803
00:33:53,100 --> 00:33:55,100
 type technology, when we get

804
00:33:55,100 --> 00:33:57,100
 to it, but some of the

805
00:33:57,100 --> 00:33:59,100
 only RGB based technology

806
00:33:59,100 --> 00:34:01,100
 can do better in

807
00:34:01,100 --> 00:34:03,100
 many of those situations, and that's one of the things

808
00:34:03,100 --> 00:34:05,100
 that's exciting about it. But

809
00:34:05,100 --> 00:34:07,100
 these sensors, still

810
00:34:07,100 --> 00:34:09,100
 very common in robotics,

811
00:34:09,100 --> 00:34:11,100
 have artifacts that we have to think about.

812
00:34:11,100 --> 00:34:13,100
 This is

813
00:34:13,100 --> 00:34:15,100
 the particular sensor that we have here, the D415.

814
00:34:15,100 --> 00:34:17,100
 Everybody who talks about it

815
00:34:17,100 --> 00:34:19,100
 says it's an awesome sensor,

816
00:34:19,100 --> 00:34:21,100
 but it's a little lumpy.

817
00:34:21,100 --> 00:34:23,100
 Right?

818
00:34:23,100 --> 00:34:25,100
 This is just somebody

819
00:34:25,100 --> 00:34:27,100
 having some interesting objects on their desk,

820
00:34:27,100 --> 00:34:29,100
 and if you look at it, and you zoom in,

821
00:34:29,100 --> 00:34:31,100
 or whatever, it has

822
00:34:31,100 --> 00:34:33,100
 consistent artifacts in its

823
00:34:33,100 --> 00:34:35,100
 depth estimation. It kind of looks like

824
00:34:35,100 --> 00:34:37,100
 there's a little bit more of a wavy field

825
00:34:37,100 --> 00:34:39,100
 than you'd expect.

826
00:34:39,100 --> 00:34:41,100
 It's interesting that

827
00:34:41,100 --> 00:34:43,100
 there's a science of

828
00:34:43,100 --> 00:34:45,100
 simulating the noise

829
00:34:45,100 --> 00:34:47,100
 that you get from a depth sensor,

830
00:34:47,100 --> 00:34:49,100
 and I think

831
00:34:49,100 --> 00:34:51,100
 autonomous driving companies are doing that

832
00:34:51,100 --> 00:34:53,100
 exceptionally well, even trying to simulate

833
00:34:53,100 --> 00:34:55,100
 what happens with the plume

834
00:34:55,100 --> 00:34:57,100
 of exhaust coming off a car, how does that

835
00:34:57,100 --> 00:34:59,100
 mess up with my sensors?

836
00:34:59,100 --> 00:35:01,100
 We haven't done that level of modeling

837
00:35:01,100 --> 00:35:03,100
 in Drake yet,

838
00:35:03,100 --> 00:35:05,100
 but I think that

839
00:35:05,100 --> 00:35:07,100
 field is advancing.

840
00:35:07,100 --> 00:35:09,100
 Okay, so

841
00:35:09,100 --> 00:35:11,100
 from there,

842
00:35:11,100 --> 00:35:13,100
 let me stop that,

843
00:35:13,100 --> 00:35:15,100
 okay, from there now

844
00:35:15,100 --> 00:35:17,100
 we have a particular

845
00:35:17,100 --> 00:35:19,100
 depth image coming out

846
00:35:19,100 --> 00:35:21,100
 of the camera, and we need

847
00:35:21,100 --> 00:35:23,100
 to think about how we're going to work

848
00:35:23,100 --> 00:35:25,100
 with it. And there's various,

849
00:35:25,100 --> 00:35:27,100
 a bit

850
00:35:27,100 --> 00:35:29,100
 analogous to how there were many

851
00:35:29,100 --> 00:35:31,100
 different representations for orientation,

852
00:35:31,100 --> 00:35:33,100
 there are many different

853
00:35:33,100 --> 00:35:35,100
 representations for geometry.

854
00:35:35,100 --> 00:35:37,100
 So,

855
00:35:37,100 --> 00:35:39,100
 the

856
00:35:39,100 --> 00:35:53,100
 RGBD

857
00:35:53,100 --> 00:35:55,100
 image, depth image,

858
00:35:55,100 --> 00:35:59,100
 is one,

859
00:35:59,100 --> 00:36:01,100
 it's the one that comes out of this camera.

860
00:36:01,100 --> 00:36:03,100
 We're going to talk about

861
00:36:03,100 --> 00:36:05,100
 converting that to point clouds

862
00:36:05,100 --> 00:36:07,100
 in just a minute.

863
00:36:07,100 --> 00:36:09,100
 That's what

864
00:36:09,100 --> 00:36:11,100
 I drew in the visualizer.

865
00:36:11,100 --> 00:36:13,100
 But these are just two

866
00:36:13,100 --> 00:36:15,100
 examples, and there's many more.

867
00:36:15,100 --> 00:36:17,100
 If you've ever used a CAD program,

868
00:36:17,100 --> 00:36:19,100
 you've probably thought about

869
00:36:19,100 --> 00:36:21,100
 using triangular meshes,

870
00:36:21,100 --> 00:36:23,100
 which tend to represent

871
00:36:23,100 --> 00:36:25,100
 the surface of objects with triangles,

872
00:36:25,100 --> 00:36:27,100
 right? Or you might,

873
00:36:27,100 --> 00:36:29,100
 if you've done more complicated

874
00:36:29,100 --> 00:36:31,100
 things, you might have used a tet mesh,

875
00:36:31,100 --> 00:36:33,100
 a tetrahedral mesh,

876
00:36:33,100 --> 00:36:35,100
 for volume,

877
00:36:35,100 --> 00:36:39,100
 which would represent

878
00:36:39,100 --> 00:36:41,100
 the entire, you know, you can imagine

879
00:36:41,100 --> 00:36:43,100
 triangles for the surface, but if you want to

880
00:36:43,100 --> 00:36:45,100
 have the whole volume represented,

881
00:36:45,100 --> 00:36:47,100
 you'd use four points

882
00:36:47,100 --> 00:36:49,100
 for each piece,

883
00:36:49,100 --> 00:36:51,100
 a tetrahedron.

884
00:36:51,100 --> 00:36:53,100
 There are

885
00:36:53,100 --> 00:36:55,100
 other representations, like signed

886
00:36:55,100 --> 00:36:57,100
 distance functions.

887
00:36:57,100 --> 00:36:59,100
 So,

888
00:36:59,100 --> 00:37:01,100
 this is

889
00:37:01,100 --> 00:37:03,100
 a

890
00:37:03,100 --> 00:37:05,100
 simplified

891
00:37:05,100 --> 00:37:07,100
 representation of

892
00:37:07,100 --> 00:37:09,100
 a tetrahedral mesh.

893
00:37:09,100 --> 00:37:11,100
 This is

894
00:37:11,100 --> 00:37:13,100
 an implicit

895
00:37:13,100 --> 00:37:15,100
 representation. We'll get to it, we'll cover it more

896
00:37:15,100 --> 00:37:17,100
 soon, and it's the stuff

897
00:37:17,100 --> 00:37:19,100
 of deep SDF and

898
00:37:19,100 --> 00:37:21,100
 SDF

899
00:37:21,100 --> 00:37:23,100
 for short.

900
00:37:23,100 --> 00:37:25,100
 And NERF is

901
00:37:25,100 --> 00:37:27,100
 grids

902
00:37:27,100 --> 00:37:29,100
 or occupancy

903
00:37:29,100 --> 00:37:31,100
 maps.

904
00:37:31,100 --> 00:37:41,100
 Right, so I might

905
00:37:41,100 --> 00:37:43,100
 actually represent

906
00:37:43,100 --> 00:37:45,100
 geometry by just saying, I'm going to put a bunch

907
00:37:45,100 --> 00:37:47,100
 of cubes in space, and I'm going to put

908
00:37:47,100 --> 00:37:49,100
 a one everywhere that there's, I think,

909
00:37:49,100 --> 00:37:51,100
 space is filled, and a zero everywhere else.

910
00:37:51,100 --> 00:37:53,100
 Right, that would be a voxelized

911
00:37:53,100 --> 00:37:55,100
 grid, and it's actually a pretty

912
00:37:55,100 --> 00:37:57,100
 common representation.

913
00:37:57,100 --> 00:37:59,100
 And there's more, too.

914
00:37:59,100 --> 00:38:01,100
 Okay.

915
00:38:01,100 --> 00:38:03,100
 And again, a bit analogous

916
00:38:03,100 --> 00:38:05,100
 to the rotations,

917
00:38:05,100 --> 00:38:07,100
 each of these is going to be useful for

918
00:38:07,100 --> 00:38:09,100
 different types of computations.

919
00:38:09,100 --> 00:38:11,100
 And for the most part,

920
00:38:11,100 --> 00:38:13,100
 you should be, I think,

921
00:38:13,100 --> 00:38:15,100
 relatively optimistic of being able to

922
00:38:15,100 --> 00:38:17,100
 convert back and forth between them.

923
00:38:17,100 --> 00:38:19,100
 There's some cases where

924
00:38:19,100 --> 00:38:21,100
 that conversion is lossy,

925
00:38:21,100 --> 00:38:23,100
 and you might not be happy

926
00:38:23,100 --> 00:38:25,100
 going here and then coming back,

927
00:38:25,100 --> 00:38:27,100
 for instance. You might not get the

928
00:38:27,100 --> 00:38:29,100
 perfect reconstruction.

929
00:38:29,100 --> 00:38:31,100
 But

930
00:38:31,100 --> 00:38:33,100
 we get our data in

931
00:38:33,100 --> 00:38:35,100
 one particular format, a depth image,

932
00:38:35,100 --> 00:38:37,100
 and it makes sense to convert

933
00:38:37,100 --> 00:38:39,100
 it into many different formats to make

934
00:38:39,100 --> 00:38:41,100
 different algorithms efficient.

935
00:38:41,100 --> 00:38:47,100
 Okay.

936
00:38:47,100 --> 00:38:49,100
 Let's dive in and actually do a little bit of

937
00:38:49,100 --> 00:38:51,100
 perception work.

938
00:38:51,100 --> 00:38:55,100
 It's not a coincidence that

939
00:38:55,100 --> 00:38:57,100
 we talked about kinematics last

940
00:38:57,100 --> 00:38:59,100
 lecture

941
00:38:59,100 --> 00:39:01,100
 and differential kinematics and the like,

942
00:39:01,100 --> 00:39:03,100
 because

943
00:39:03,100 --> 00:39:05,100
 the first step of

944
00:39:05,100 --> 00:39:07,100
 perception, really, I think, is thinking about perception

945
00:39:07,100 --> 00:39:09,100
 as an inverse kinematics

946
00:39:09,100 --> 00:39:11,100
 problem. Okay?

947
00:39:11,100 --> 00:39:27,100
 [writing on board]

948
00:39:27,100 --> 00:39:29,100
 The way this is going to go, I'm going to make some

949
00:39:29,100 --> 00:39:31,100
 silly, simple

950
00:39:31,100 --> 00:39:33,100
 objects in 2D

951
00:39:33,100 --> 00:39:35,100
 on the board that are supposed to be

952
00:39:35,100 --> 00:39:37,100
 visibly asymmetric.

953
00:39:37,100 --> 00:39:39,100
 No symmetries to worry

954
00:39:39,100 --> 00:39:41,100
 about first. Okay?

955
00:39:41,100 --> 00:39:43,100
 So let's say I have an object O.

956
00:39:43,100 --> 00:39:45,100
 Okay?

957
00:39:45,100 --> 00:39:47,100
 This is my object.

958
00:39:47,100 --> 00:39:49,100
 This is a

959
00:39:49,100 --> 00:39:51,100
 known object.

960
00:39:51,100 --> 00:39:53,100
 The things we're going to talk about first are going to be

961
00:39:53,100 --> 00:39:55,100
 are going to work

962
00:39:55,100 --> 00:39:57,100
 best if you know, have a model

963
00:39:57,100 --> 00:39:59,100
 of the object to start with.

964
00:39:59,100 --> 00:40:01,100
 A known object O.

965
00:40:01,100 --> 00:40:03,100
 So maybe I've got a

966
00:40:03,100 --> 00:40:05,100
 CAD file that somebody gave me,

967
00:40:05,100 --> 00:40:07,100
 and I'm going to try to find the object

968
00:40:07,100 --> 00:40:09,100
 in the scene, like a mustard bottle

969
00:40:09,100 --> 00:40:11,100
 for instance.

970
00:40:11,100 --> 00:40:13,100
 Maybe that CAD

971
00:40:13,100 --> 00:40:15,100
 file has a triangular mesh.

972
00:40:15,100 --> 00:40:17,100
 Okay? But I'm going to

973
00:40:17,100 --> 00:40:19,100
 convert it from that format into

974
00:40:19,100 --> 00:40:21,100
 a point cloud format

975
00:40:21,100 --> 00:40:23,100
 to make the first algorithm work.

976
00:40:23,100 --> 00:40:25,100
 So imagine I've chosen

977
00:40:25,100 --> 00:40:27,100
 as my representation for this geometry

978
00:40:27,100 --> 00:40:29,100
 to be a series of

979
00:40:29,100 --> 00:40:31,100
 points on the

980
00:40:31,100 --> 00:40:33,100
 surface of the object.

981
00:40:35,100 --> 00:40:37,100
 They don't necessarily

982
00:40:37,100 --> 00:40:39,100
 need to be beautifully sampled,

983
00:40:39,100 --> 00:40:41,100
 evenly sampled.

984
00:40:41,100 --> 00:40:43,100
 It's rare that you get that, have that luxury, but

985
00:40:43,100 --> 00:40:45,100
 we're going to represent

986
00:40:45,100 --> 00:40:47,100
 our object

987
00:40:47,100 --> 00:40:49,100
 with just a bunch of points

988
00:40:49,100 --> 00:40:51,100
 that are at some position

989
00:40:51,100 --> 00:40:53,100
 in space.

990
00:40:53,100 --> 00:40:55,100
 We'll call them the model points

991
00:40:55,100 --> 00:40:57,100
 in an object

992
00:40:57,100 --> 00:40:59,100
 frame. Okay? So this is the

993
00:41:03,100 --> 00:41:05,100
 model point

994
00:41:05,100 --> 00:41:09,100
 and this is the i-th model point.

995
00:41:09,100 --> 00:41:13,100
 And I'm going to write it, I'm going to

996
00:41:13,100 --> 00:41:15,100
 denote its position in the

997
00:41:15,100 --> 00:41:17,100
 object frame with my standard

998
00:41:17,100 --> 00:41:19,100
 you know, mi

999
00:41:19,100 --> 00:41:21,100
 is the position in that frame.

1000
00:41:21,100 --> 00:41:27,100
 My depth camera

1001
00:41:27,100 --> 00:41:29,100
 gives me

1002
00:41:29,100 --> 00:41:37,100
 something different, right?

1003
00:41:37,100 --> 00:41:39,100
 It gives me roughly

1004
00:41:39,100 --> 00:41:43,100
 what I'll call

1005
00:41:43,100 --> 00:41:47,100
 scene points.

1006
00:41:47,100 --> 00:41:51,100
 This is the i-th

1007
00:41:51,100 --> 00:41:53,100
 scene point in the camera.

1008
00:41:53,100 --> 00:41:55,100
 And I'm going to call it

1009
00:41:55,100 --> 00:41:57,100
 the i-th scene point in the camera frame.

1010
00:41:57,100 --> 00:42:13,100
 To go from the depth image

1011
00:42:13,100 --> 00:42:15,100
 to the 3D location

1012
00:42:15,100 --> 00:42:17,100
 of the points, even in the camera frame,

1013
00:42:17,100 --> 00:42:19,100
 you do have to go through

1014
00:42:19,100 --> 00:42:21,100
 the geometry

1015
00:42:21,100 --> 00:42:23,100
 of the camera. There's some perspective

1016
00:42:23,100 --> 00:42:25,100
 geometry that

1017
00:42:25,100 --> 00:42:27,100
 you know, the lens for instance

1018
00:42:27,100 --> 00:42:29,100
 like this, that will help you convert

1019
00:42:29,100 --> 00:42:31,100
 from the image, the depth

1020
00:42:31,100 --> 00:42:33,100
 image, into a

1021
00:42:33,100 --> 00:42:35,100
 bunch of 3D points.

1022
00:42:35,100 --> 00:42:37,100
 And this, you know, we won't

1023
00:42:37,100 --> 00:42:39,100
 use points, if the depth camera said the

1024
00:42:39,100 --> 00:42:41,100
 depth was infinite or the depth was zero,

1025
00:42:41,100 --> 00:42:43,100
 all those black regions we saw there,

1026
00:42:43,100 --> 00:42:45,100
 we won't include those in the scene points, we'll just discard

1027
00:42:45,100 --> 00:42:47,100
 them. But there's a relatively

1028
00:42:47,100 --> 00:42:49,100
 simple operation that goes from a

1029
00:42:49,100 --> 00:42:51,100
 depth image into this, which is

1030
00:42:51,100 --> 00:42:53,100
 what we're calling our point cloud representation.

1031
00:42:53,100 --> 00:43:03,100
 The list of these points, the point cloud

1032
00:43:03,100 --> 00:43:05,100
 can have its own, can live in whatever frame.

1033
00:43:05,100 --> 00:43:11,100
 So these scene points might

1034
00:43:11,100 --> 00:43:13,100
 hopefully look sort of

1035
00:43:13,100 --> 00:43:15,100
 as if they were roughly generated

1036
00:43:15,100 --> 00:43:17,100
 from that shape.

1037
00:43:17,100 --> 00:43:19,100
 Okay?

1038
00:43:19,100 --> 00:43:21,100
 Maybe I put it like that.

1039
00:43:21,100 --> 00:43:27,100
 And there's going to be some points here.

1040
00:43:27,100 --> 00:43:29,100
 Right? Maybe if I'm

1041
00:43:29,100 --> 00:43:31,100
 looking at it from this angle, I only have points on

1042
00:43:31,100 --> 00:43:33,100
 one side, but for now I'll just say I've got points

1043
00:43:33,100 --> 00:43:35,100
 roughly everywhere around

1044
00:43:35,100 --> 00:43:37,100
 the object. Okay?

1045
00:43:37,100 --> 00:43:39,100
 And the next lecture we'll talk a lot more about

1046
00:43:39,100 --> 00:43:41,100
 partial occlusion, partial views and occlusions.

1047
00:43:41,100 --> 00:43:45,100
 And I'm going to assume that I

1048
00:43:45,100 --> 00:43:47,100
 know

1049
00:43:47,100 --> 00:43:55,100
 I know where the camera is.

1050
00:43:55,100 --> 00:43:57,100
 So I'll assume I know where

1051
00:43:57,100 --> 00:43:59,100
 the camera is in the world.

1052
00:43:59,100 --> 00:44:05,100
 If it's the camera mounted to the hand,

1053
00:44:05,100 --> 00:44:07,100
 that's just done through forward

1054
00:44:07,100 --> 00:44:09,100
 kinematics, right?

1055
00:44:09,100 --> 00:44:11,100
 If it's a camera bolted to the world,

1056
00:44:11,100 --> 00:44:13,100
 it's just a fixed, constant value.

1057
00:44:13,100 --> 00:44:15,100
 And my task

1058
00:44:15,100 --> 00:44:21,100
 is to estimate

1059
00:44:21,100 --> 00:44:31,100
 the object's pose in the world.

1060
00:44:31,100 --> 00:44:33,100
 Yes?

1061
00:44:33,100 --> 00:44:37,100
 Yes, so if

1062
00:44:37,100 --> 00:44:39,100
 it could be a function of

1063
00:44:39,100 --> 00:44:41,100
 the joint angles, if you like.

1064
00:44:41,100 --> 00:44:43,100
 Yeah? And then absolutely

1065
00:44:43,100 --> 00:44:45,100
 that would be the result of a forward kinematics computation.

1066
00:44:45,100 --> 00:44:47,100
 But even

1067
00:44:47,100 --> 00:44:49,100
 in my simple example, they were fixed, and that's

1068
00:44:49,100 --> 00:44:51,100
 that's fine.

1069
00:44:51,100 --> 00:44:55,100
 I will in general

1070
00:44:55,100 --> 00:44:57,100
 throughout the class, when we're talking about estimation,

1071
00:44:57,100 --> 00:44:59,100
 I will use this hat

1072
00:44:59,100 --> 00:45:01,100
 notation.

1073
00:45:01,100 --> 00:45:03,100
 Put a hat over it, okay?

1074
00:45:03,100 --> 00:45:05,100
 To denote the estimate.

1075
00:45:05,100 --> 00:45:07,100
 Okay, so x hat is the estimate of x.

1076
00:45:07,100 --> 00:45:25,100
 Okay, so how do we do it?

1077
00:45:25,100 --> 00:45:27,100
 It turns out, like I mean, you can tell I'm already

1078
00:45:27,100 --> 00:45:29,100
 using the language of kinematics

1079
00:45:29,100 --> 00:45:31,100
 and frames and the like.

1080
00:45:33,100 --> 00:45:35,100
 So finding the missing transform

1081
00:45:35,100 --> 00:45:37,100
 is just

1082
00:45:37,100 --> 00:45:39,100
 a kinematics problem.

1083
00:45:39,100 --> 00:45:43,100
 Right, if I line up my

1084
00:45:43,100 --> 00:45:49,100
 if I line up my different

1085
00:45:49,100 --> 00:45:51,100
 transforms, then it

1086
00:45:51,100 --> 00:45:53,100
 becomes a simple, a relatively simple

1087
00:45:53,100 --> 00:45:55,100
 task with one

1088
00:45:55,100 --> 00:45:57,100
 big assumption.

1089
00:45:57,100 --> 00:45:59,100
 [writing on board]

1090
00:45:59,100 --> 00:46:07,100
 I'm going to assume

1091
00:46:07,100 --> 00:46:09,100
 that

1092
00:46:09,100 --> 00:46:11,100
 model point mi

1093
00:46:11,100 --> 00:46:13,100
 corresponds

1094
00:46:13,100 --> 00:46:15,100
 [writing on board]

1095
00:46:15,100 --> 00:46:17,100
 to scene

1096
00:46:17,100 --> 00:46:19,100
 point

1097
00:46:19,100 --> 00:46:21,100
 i.

1098
00:46:21,100 --> 00:46:25,100
 We're going to remove that assumption in just

1099
00:46:25,100 --> 00:46:27,100
 a few minutes, but to start,

1100
00:46:27,100 --> 00:46:29,100
 let's just say that, you could

1101
00:46:29,100 --> 00:46:31,100
 imagine if I looked through my camera, if for instance

1102
00:46:31,100 --> 00:46:33,100
 like every point that I

1103
00:46:33,100 --> 00:46:35,100
 found had a completely unique and

1104
00:46:35,100 --> 00:46:37,100
 reliable color, for instance.

1105
00:46:37,100 --> 00:46:39,100
 So I had no doubt that when I looked at this

1106
00:46:39,100 --> 00:46:41,100
 that this

1107
00:46:41,100 --> 00:46:43,100
 point here absolutely goes

1108
00:46:43,100 --> 00:46:45,100
 with this point over here.

1109
00:46:45,100 --> 00:46:47,100
 That's a

1110
00:46:47,100 --> 00:46:49,100
 too strong of an assumption for reality,

1111
00:46:49,100 --> 00:46:51,100
 but it's going to be the first step of our algorithm, right?

1112
00:46:51,100 --> 00:46:53,100
 Is to assume that for every one of these

1113
00:46:53,100 --> 00:46:55,100
 points here, I know

1114
00:46:55,100 --> 00:46:57,100
 which of the points in my model

1115
00:46:57,100 --> 00:46:59,100
 it corresponds to.

1116
00:46:59,100 --> 00:47:01,100
 And that

1117
00:47:01,100 --> 00:47:03,100
 correspondence is actually

1118
00:47:03,100 --> 00:47:05,100
 in general

1119
00:47:05,100 --> 00:47:07,100
 is one way. I'd like to be able to correspond

1120
00:47:07,100 --> 00:47:09,100
 every point in my scene

1121
00:47:09,100 --> 00:47:11,100
 to some point in my

1122
00:47:11,100 --> 00:47:13,100
 model. But it could be that

1123
00:47:13,100 --> 00:47:15,100
 many points go to one point,

1124
00:47:15,100 --> 00:47:17,100
 and it could be that not all model points

1125
00:47:17,100 --> 00:47:19,100
 have a corresponding scene point, but

1126
00:47:19,100 --> 00:47:21,100
 I want that all scene points

1127
00:47:21,100 --> 00:47:23,100
 correspond to some model point.

1128
00:47:23,100 --> 00:47:25,100
 And to begin with, we're just going to assume that

1129
00:47:25,100 --> 00:47:27,100
 there's a one-to-one mapping, just to

1130
00:47:27,100 --> 00:47:29,100
 make it very simple, to just avoid

1131
00:47:29,100 --> 00:47:31,100
 extra notation.

1132
00:47:31,100 --> 00:47:35,100
 If I do that,

1133
00:47:35,100 --> 00:47:39,100
 then the problem

1134
00:47:39,100 --> 00:47:41,100
 is really

1135
00:47:41,100 --> 00:47:43,100
 just a kinematics problem.

1136
00:47:43,100 --> 00:47:45,100
 I know that the

1137
00:47:45,100 --> 00:47:47,100
 position of the

1138
00:47:47,100 --> 00:47:49,100
 model points in the world should

1139
00:47:49,100 --> 00:47:51,100
 just be the world to the

1140
00:47:51,100 --> 00:47:53,100
 object.

1141
00:47:53,100 --> 00:47:55,100
 I have this.

1142
00:47:55,100 --> 00:47:57,100
 This is something I've

1143
00:47:57,100 --> 00:47:59,100
 been given, right?

1144
00:47:59,100 --> 00:48:01,100
 And it also had better equal

1145
00:48:01,100 --> 00:48:03,100
 the

1146
00:48:03,100 --> 00:48:05,100
 position of the camera

1147
00:48:05,100 --> 00:48:11,100
 for all i.

1148
00:48:11,100 --> 00:48:15,100
 This is two

1149
00:48:15,100 --> 00:48:17,100
 different ways to put the

1150
00:48:17,100 --> 00:48:19,100
 same point into the

1151
00:48:19,100 --> 00:48:21,100
 world coordinates.

1152
00:48:21,100 --> 00:48:25,100
 Now, this is

1153
00:48:25,100 --> 00:48:27,100
 known.

1154
00:48:27,100 --> 00:48:31,100
 This is unknown.

1155
00:48:31,100 --> 00:48:33,100
 We need to

1156
00:48:33,100 --> 00:48:35,100
 estimate this, right?

1157
00:48:35,100 --> 00:48:41,100
 And we said both of these are

1158
00:48:41,100 --> 00:48:43,100
 known, right?

1159
00:48:43,100 --> 00:48:45,100
 This is

1160
00:48:45,100 --> 00:48:47,100
 measured, and this is known.

1161
00:48:47,100 --> 00:48:51,100
 So I've got an equation here

1162
00:48:51,100 --> 00:48:53,100
 where I just need to back out

1163
00:48:53,100 --> 00:48:55,100
 what is this transform,

1164
00:48:55,100 --> 00:48:57,100
 given that.

1165
00:48:57,100 --> 00:49:01,100
 Now just think about, a little bit about

1166
00:49:01,100 --> 00:49:03,100
 the

1167
00:49:03,100 --> 00:49:05,100
 properties of this.

1168
00:49:05,100 --> 00:49:11,100
 For instance,

1169
00:49:11,100 --> 00:49:13,100
 let's just say that there's no noise whatsoever.

1170
00:49:13,100 --> 00:49:15,100
 This

1171
00:49:15,100 --> 00:49:17,100
 is going to have a unique

1172
00:49:17,100 --> 00:49:19,100
 solution, assuming

1173
00:49:19,100 --> 00:49:21,100
 I have enough points, right?

1174
00:49:21,100 --> 00:49:23,100
 If I had just exactly one point,

1175
00:49:23,100 --> 00:49:25,100
 then there's going to be

1176
00:49:25,100 --> 00:49:27,100
 multiple solutions to this.

1177
00:49:27,100 --> 00:49:29,100
 There's some for

1178
00:49:29,100 --> 00:49:31,100
 a 2D estimation,

1179
00:49:31,100 --> 00:49:33,100
 there's some number of points required.

1180
00:49:33,100 --> 00:49:35,100
 For 3D, there's some number of points

1181
00:49:35,100 --> 00:49:37,100
 required. As long as they're unique points,

1182
00:49:37,100 --> 00:49:39,100
 whatever, there's very simple conditions.

1183
00:49:39,100 --> 00:49:41,100
 Basically two points, and then at least

1184
00:49:41,100 --> 00:49:43,100
 three non-

1185
00:49:43,100 --> 00:49:45,100
 collinear points, right?

1186
00:49:45,100 --> 00:49:47,100
 That will mean that this matrix has a unique solution,

1187
00:49:47,100 --> 00:49:49,100
 given I know these

1188
00:49:49,100 --> 00:49:51,100
 correspondences.

1189
00:49:51,100 --> 00:49:53,100
 But,

1190
00:49:53,100 --> 00:49:55,100
 because this system has noise and other things,

1191
00:49:55,100 --> 00:49:57,100
 this, I would prefer

1192
00:49:57,100 --> 00:49:59,100
 to write this not as a "solve

1193
00:49:59,100 --> 00:50:01,100
 some linear equations perfectly,"

1194
00:50:01,100 --> 00:50:03,100
 but try to solve this in a

1195
00:50:03,100 --> 00:50:05,100
 least square sense, just like we did with the

1196
00:50:05,100 --> 00:50:09,100
 with the differential IK last time.

1197
00:50:09,100 --> 00:50:11,100
 So it's going to be,

1198
00:50:11,100 --> 00:50:13,100
 you know, solve this

1199
00:50:13,100 --> 00:50:17,100
 in a least squares sense.

1200
00:50:17,100 --> 00:50:29,100
 This, I would say, is an inverse kinematics

1201
00:50:29,100 --> 00:50:31,100
 problem. Not differential inverse kinematics,

1202
00:50:31,100 --> 00:50:33,100
 but inverse kinematics,

1203
00:50:33,100 --> 00:50:35,100
 right? There's no Jacobians involved here.

1204
00:50:35,100 --> 00:50:37,100
 This is actually trying to estimate

1205
00:50:37,100 --> 00:50:39,100
 the transform.

1206
00:50:39,100 --> 00:50:43,100
 So it's a natural question. We talked a lot about

1207
00:50:43,100 --> 00:50:45,100
 differential inverse kinematics last time.

1208
00:50:45,100 --> 00:50:47,100
 Why are we doing inverse kinematics this time?

1209
00:50:47,100 --> 00:50:49,100
 What's different?

1210
00:50:49,100 --> 00:50:53,100
 Does anybody

1211
00:50:53,100 --> 00:50:55,100
 have an immediate sort of idea

1212
00:50:55,100 --> 00:50:57,100
 for why we should jump right to

1213
00:50:57,100 --> 00:50:59,100
 inverse kinematics this time?

1214
00:50:59,100 --> 00:51:01,100
 Why aren't we using Jacobians?

1215
00:51:01,100 --> 00:51:03,100
 Yes?

1216
00:51:05,100 --> 00:51:07,100
 Perfect. Perfect.

1217
00:51:07,100 --> 00:51:09,100
 So he says that you don't have an initial ground truth, right?

1218
00:51:09,100 --> 00:51:11,100
 So in the case of driving

1219
00:51:11,100 --> 00:51:13,100
 the robot around, I knew what

1220
00:51:13,100 --> 00:51:15,100
 the initial joint angles were,

1221
00:51:15,100 --> 00:51:17,100
 so it made sense to ask the question,

1222
00:51:17,100 --> 00:51:19,100
 "If I made a small change, what happens

1223
00:51:19,100 --> 00:51:21,100
 to the end effector?"

1224
00:51:21,100 --> 00:51:23,100
 So the Jacobian, the differential kinematics

1225
00:51:23,100 --> 00:51:25,100
 and the differential inverse kinematics

1226
00:51:25,100 --> 00:51:27,100
 became the right object,

1227
00:51:27,100 --> 00:51:29,100
 or a natural object.

1228
00:51:29,100 --> 00:51:31,100
 This is a different problem. This is the robot woke up

1229
00:51:31,100 --> 00:51:33,100
 and it has to find, with no good initial

1230
00:51:33,100 --> 00:51:35,100
 guess, where the object is.

1231
00:51:35,100 --> 00:51:37,100
 So we have to solve the harder problem

1232
00:51:37,100 --> 00:51:39,100
 of solving the complete

1233
00:51:39,100 --> 00:51:41,100
 inverse kinematics problem. We have to find that entire

1234
00:51:41,100 --> 00:51:43,100
 transform. This is still

1235
00:51:43,100 --> 00:51:45,100
 of course easier than when we have joints

1236
00:51:45,100 --> 00:51:47,100
 in a big robot. This is the one object

1237
00:51:47,100 --> 00:51:49,100
 case, but this is our first

1238
00:51:49,100 --> 00:51:51,100
 example of solving the real inverse kinematics

1239
00:51:51,100 --> 00:51:53,100
 problem.

1240
00:51:53,100 --> 00:51:57,100
 Kinematics was going from

1241
00:51:57,100 --> 00:51:59,100
 positions, the

1242
00:51:59,100 --> 00:52:01,100
 generalized positions, to

1243
00:52:01,100 --> 00:52:03,100
 poses.

1244
00:52:03,100 --> 00:52:05,100
 And inverse kinematics is going from poses

1245
00:52:05,100 --> 00:52:07,100
 back to positions.

1246
00:52:07,100 --> 00:52:09,100
 I understand it's a little weird the way I've

1247
00:52:09,100 --> 00:52:11,100
 written here, but I'm trying to back out the positions

1248
00:52:11,100 --> 00:52:13,100
 of the represented here

1249
00:52:13,100 --> 00:52:15,100
 as a pose, I admit.

1250
00:52:15,100 --> 00:52:17,100
 I'm trying to find the

1251
00:52:17,100 --> 00:52:19,100
 positions description, the generalized positions

1252
00:52:19,100 --> 00:52:21,100
 of that object

1253
00:52:21,100 --> 00:52:23,100
 from a series of these chains.

1254
00:52:23,100 --> 00:52:33,100
 [inaudible]

1255
00:52:33,100 --> 00:52:35,100
 Yeah, but I would probably address it

1256
00:52:35,100 --> 00:52:37,100
 before or after. Thank you.

1257
00:52:37,100 --> 00:52:45,100
 That was probably my one chance.

1258
00:52:45,100 --> 00:52:47,100
 [laughter]

1259
00:52:47,100 --> 00:52:49,100
 Right, I probably should have just said

1260
00:52:49,100 --> 00:52:51,100
 I'll stop everything, let's fix this.

1261
00:52:51,100 --> 00:52:55,100
 I've tried so hard to get their attention.

1262
00:52:55,100 --> 00:53:05,100
 So let's write it as an optimization.

1263
00:53:05,100 --> 00:53:07,100
 So, instead of just saying

1264
00:53:07,100 --> 00:53:09,100
 I want those to match with equality,

1265
00:53:09,100 --> 00:53:11,100
 what if I said I want them to match in a least

1266
00:53:11,100 --> 00:53:13,100
 square sense? So, if I

1267
00:53:13,100 --> 00:53:15,100
 said that x

1268
00:53:15,100 --> 00:53:17,100
 w o, whoops,

1269
00:53:17,100 --> 00:53:19,100
 w o times

1270
00:53:19,100 --> 00:53:21,100
 p,

1271
00:53:21,100 --> 00:53:23,100
 I can't even see my own writing up there,

1272
00:53:23,100 --> 00:53:25,100
 minus

1273
00:53:25,100 --> 00:53:27,100
 x w c

1274
00:53:27,100 --> 00:53:29,100
 s i,

1275
00:53:29,100 --> 00:53:31,100
 I'm going to do the

1276
00:53:31,100 --> 00:53:33,100
 sum of this over all i,

1277
00:53:33,100 --> 00:53:35,100
 and I'd like to minimize this

1278
00:53:35,100 --> 00:53:37,100
 over my decision variable,

1279
00:53:37,100 --> 00:53:39,100
 which was the object

1280
00:53:39,100 --> 00:53:41,100
 position of the world.

1281
00:53:41,100 --> 00:53:43,100
 Okay?

1282
00:53:43,100 --> 00:53:45,100
 And just to remember,

1283
00:53:45,100 --> 00:53:47,100
 to be explicit, that

1284
00:53:47,100 --> 00:53:49,100
 this thing is

1285
00:53:49,100 --> 00:53:51,100
 a particular

1286
00:53:51,100 --> 00:53:53,100
 mathematical object that represents

1287
00:53:53,100 --> 00:53:55,100
 a pose, let me write this down

1288
00:53:55,100 --> 00:53:57,100
 as saying I'm going to look for this

1289
00:53:57,100 --> 00:53:59,100
 inside

1290
00:53:59,100 --> 00:54:01,100
 S E 3,

1291
00:54:01,100 --> 00:54:03,100
 okay, which is the special

1292
00:54:03,100 --> 00:54:05,100
 Euclidean group.

1293
00:54:05,100 --> 00:54:09,100
 It's a fancy way to say a pose, basically.

1294
00:54:09,100 --> 00:54:15,100
 In three dimensions, okay?

1295
00:54:15,100 --> 00:54:17,100
 A valid

1296
00:54:17,100 --> 00:54:19,100
 rigid transform.

1297
00:54:19,100 --> 00:54:29,100
 Okay, so this is a

1298
00:54:29,100 --> 00:54:31,100
 sort of a robust way to try to estimate

1299
00:54:31,100 --> 00:54:33,100
 that pose.

1300
00:54:33,100 --> 00:54:35,100
 This thing, since both of them are known,

1301
00:54:35,100 --> 00:54:37,100
 I'll start

1302
00:54:37,100 --> 00:54:39,100
 just writing p w

1303
00:54:39,100 --> 00:54:41,100
 s i, or even just p s i,

1304
00:54:41,100 --> 00:54:43,100
 since the w is implied.

1305
00:54:43,100 --> 00:54:45,100
 Save me a little bit of writing.

1306
00:54:45,100 --> 00:54:47,100
 And this

1307
00:54:47,100 --> 00:54:49,100
 thing we know

1308
00:54:49,100 --> 00:54:51,100
 from our spatial algebra,

1309
00:54:51,100 --> 00:54:53,100
 I can write this as

1310
00:54:53,100 --> 00:54:55,100
 p of O in the world

1311
00:54:55,100 --> 00:54:57,100
 plus the rotations of

1312
00:54:57,100 --> 00:54:59,100
 the O in the world times

1313
00:54:59,100 --> 00:55:01,100
 m i.

1314
00:55:01,100 --> 00:55:03,100
 Okay?

1315
00:55:03,100 --> 00:55:15,100
 So I can write this

1316
00:55:15,100 --> 00:55:17,100
 alternatively as I'm going to minimize

1317
00:55:17,100 --> 00:55:19,100
 over p O

1318
00:55:19,100 --> 00:55:21,100
 and r O,

1319
00:55:21,100 --> 00:55:23,100
 where this is some

1320
00:55:23,100 --> 00:55:25,100
 potentially abstract

1321
00:55:25,100 --> 00:55:27,100
 representation of orientation,

1322
00:55:27,100 --> 00:55:29,100
 but it had better live in

1323
00:55:29,100 --> 00:55:31,100
 the special orthogonal group, okay,

1324
00:55:31,100 --> 00:55:33,100
 which is just another way to say

1325
00:55:33,100 --> 00:55:35,100
 it's a valid rotation matrix.

1326
00:55:35,100 --> 00:55:39,100
 A valid rotation.

1327
00:55:39,100 --> 00:55:45,100
 Okay, so this is the problem we want to solve,

1328
00:55:45,100 --> 00:55:47,100
 and we want to think about the

1329
00:55:47,100 --> 00:55:49,100
 sort of the geometry of that problem

1330
00:55:49,100 --> 00:55:51,100
 and how we solve it

1331
00:55:51,100 --> 00:55:53,100
 robustly.

1332
00:55:53,100 --> 00:55:55,100
 Does that make sense?

1333
00:55:55,100 --> 00:55:57,100
 Questions about that? Yes?

1334
00:55:59,100 --> 00:56:01,100
 Okay.

1335
00:56:01,100 --> 00:56:13,100
 Yes. So in the case

1336
00:56:13,100 --> 00:56:15,100
 where we have enough points

1337
00:56:15,100 --> 00:56:17,100
 and that there's no noise

1338
00:56:17,100 --> 00:56:19,100
 and there's perfect

1339
00:56:19,100 --> 00:56:21,100
 correspondences, you could try to

1340
00:56:21,100 --> 00:56:23,100
 solve that as a bunch of

1341
00:56:23,100 --> 00:56:25,100
 equalities and find the exact solution.

1342
00:56:25,100 --> 00:56:27,100
 But even, if you think about,

1343
00:56:27,100 --> 00:56:29,100
 if you count how many numbers here, for instance,

1344
00:56:29,100 --> 00:56:31,100
 right,

1345
00:56:31,100 --> 00:56:33,100
 if I'm going to search for, let's say this is

1346
00:56:33,100 --> 00:56:35,100
 a rotation matrix, so I have nine

1347
00:56:35,100 --> 00:56:37,100
 numbers here, a three by three rotation matrix,

1348
00:56:37,100 --> 00:56:39,100
 and I have three more numbers here, so I have

1349
00:56:39,100 --> 00:56:41,100
 12 numbers I'm trying to solve for

1350
00:56:41,100 --> 00:56:43,100
 in general.

1351
00:56:43,100 --> 00:56:45,100
 And let's say I have

1352
00:56:45,100 --> 00:56:47,100
 50 points in my

1353
00:56:47,100 --> 00:56:49,100
 model, then I've got an

1354
00:56:49,100 --> 00:56:51,100
 over-constrained, you know, they should,

1355
00:56:51,100 --> 00:56:53,100
 if there's no noise, there should be

1356
00:56:53,100 --> 00:56:55,100
 a solution, but I still sort of

1357
00:56:55,100 --> 00:56:57,100
 don't like the idea of

1358
00:56:57,100 --> 00:56:59,100
 solving a system of

1359
00:56:59,100 --> 00:57:01,100
 equations that could be, you know,

1360
00:57:01,100 --> 00:57:03,100
 that is defined

1361
00:57:03,100 --> 00:57:05,100
 based on some transformation where I have

1362
00:57:05,100 --> 00:57:07,100
 like 50 equations to solve

1363
00:57:07,100 --> 00:57:09,100
 for 12 unknowns. That seems

1364
00:57:09,100 --> 00:57:11,100
 fraught with, like, numerical problems

1365
00:57:11,100 --> 00:57:13,100
 and stuff like that. So you

1366
00:57:13,100 --> 00:57:15,100
 could, you know, the no noise case

1367
00:57:15,100 --> 00:57:17,100
 you could just pick your favorite 12 and,

1368
00:57:17,100 --> 00:57:19,100
 you know, as long as they were, and do that. But

1369
00:57:19,100 --> 00:57:21,100
 we're going to just move ahead to the case that's

1370
00:57:21,100 --> 00:57:23,100
 going to go the distance for us, which is as soon as you have

1371
00:57:23,100 --> 00:57:25,100
 a noise or whatever, we're going to say

1372
00:57:25,100 --> 00:57:27,100
 find me the best possible match

1373
00:57:27,100 --> 00:57:29,100
 that describes this data.

1374
00:57:29,100 --> 00:57:31,100
 Good question.

1375
00:57:31,100 --> 00:57:35,100
 Okay.

1376
00:57:35,100 --> 00:57:37,100
 So let's work with, let's chew on this a little bit.

1377
00:57:37,100 --> 00:57:41,100
 I need to pick now some

1378
00:57:41,100 --> 00:57:43,100
 representation for R

1379
00:57:43,100 --> 00:57:45,100
 to turn this into a mathematical

1380
00:57:45,100 --> 00:57:47,100
 program.

1381
00:57:47,100 --> 00:57:49,100
 The state-of-the-art methods

1382
00:57:49,100 --> 00:57:51,100
 in this world will tend to

1383
00:57:51,100 --> 00:57:53,100
 either rotation matrix

1384
00:57:53,100 --> 00:57:55,100
 representation for this or

1385
00:57:55,100 --> 00:57:57,100
 quaternion representation for this.

1386
00:57:57,100 --> 00:57:59,100
 Okay. I'll do the

1387
00:57:59,100 --> 00:58:01,100
 rotation matrix representation.

1388
00:58:01,100 --> 00:58:11,100
 Yeah.

1389
00:58:19,100 --> 00:58:21,100
 So it's a, the, so RANSAC

1390
00:58:21,100 --> 00:58:23,100
 would be a good way to handle

1391
00:58:23,100 --> 00:58:25,100
 outliers, for instance, if you have

1392
00:58:25,100 --> 00:58:27,100
 random points that don't correspond with your

1393
00:58:27,100 --> 00:58:29,100
 object, then RANSAC is a very natural way to

1394
00:58:29,100 --> 00:58:31,100
 handle that.

1395
00:58:31,100 --> 00:58:33,100
 Yeah? Yeah, for sure, we're going to get to that.

1396
00:58:33,100 --> 00:58:37,100
 Okay. So let's choose R as a rotation

1397
00:58:37,100 --> 00:58:39,100
 matrix, and I'll write exactly the same thing,

1398
00:58:39,100 --> 00:58:41,100
 but instead of this

1399
00:58:41,100 --> 00:58:43,100
 relatively abstract saying that my

1400
00:58:43,100 --> 00:58:45,100
 decision variables live in some special

1401
00:58:45,100 --> 00:58:47,100
 group, you know, valid rotation,

1402
00:58:47,100 --> 00:58:49,100
 valid rotations, now I can

1403
00:58:49,100 --> 00:58:51,100
 write exactly the properties of a rotation

1404
00:58:51,100 --> 00:58:53,100
 matrix, which are constraints on

1405
00:58:53,100 --> 00:58:55,100
 the variables in my

1406
00:58:55,100 --> 00:58:57,100
 decision, right? So now I can say

1407
00:58:57,100 --> 00:58:59,100
 I'm going to minimize over

1408
00:58:59,100 --> 00:59:01,100
 P

1409
00:59:01,100 --> 00:59:03,100
 and R,

1410
00:59:03,100 --> 00:59:05,100
 now a rotation matrix, okay?

1411
00:59:05,100 --> 00:59:11,100
 I'll just call that R here.

1412
00:59:11,100 --> 00:59:13,100
 O, M, I

1413
00:59:13,100 --> 00:59:15,100
 minus

1414
00:59:15,100 --> 00:59:17,100
 P, S, I, same thing

1415
00:59:17,100 --> 00:59:19,100
 squared, okay?

1416
00:59:19,100 --> 00:59:21,100
 But if I represent this

1417
00:59:21,100 --> 00:59:23,100
 by 3 by 3 numbers,

1418
00:59:23,100 --> 00:59:25,100
 then

1419
00:59:25,100 --> 00:59:27,100
 I need to add constraints

1420
00:59:27,100 --> 00:59:29,100
 to make it a valid rotation matrix.

1421
00:59:29,100 --> 00:59:31,100
 So the

1422
00:59:31,100 --> 00:59:33,100
 important properties

1423
00:59:33,100 --> 00:59:35,100
 of the rotation matrix is

1424
00:59:35,100 --> 00:59:37,100
 the most important one is that it's an orthonormal

1425
00:59:37,100 --> 00:59:39,100
 matrix, right?

1426
00:59:39,100 --> 00:59:41,100
 So the columns are unit length,

1427
00:59:41,100 --> 00:59:43,100
 and the

1428
00:59:43,100 --> 00:59:45,100
 transpose is the identity.

1429
00:59:45,100 --> 00:59:47,100
 This is an orthonormal

1430
00:59:47,100 --> 00:59:49,100
 matrix, and the simplest way to

1431
00:59:49,100 --> 00:59:51,100
 write that would be to say that R, R

1432
00:59:51,100 --> 00:59:53,100
 transpose is the

1433
00:59:53,100 --> 00:59:55,100
 identity matrix.

1434
00:59:55,100 --> 01:00:07,100
 And that's most of what we need.

1435
01:00:07,100 --> 01:00:09,100
 It turns out there's one more that

1436
01:00:09,100 --> 01:00:11,100
 you need to be a valid rotation,

1437
01:00:11,100 --> 01:00:13,100
 is you need the determinant of R

1438
01:00:13,100 --> 01:00:17,100
 to be a positive

1439
01:00:17,100 --> 01:00:19,100
 1, okay?

1440
01:00:19,100 --> 01:00:21,100
 If you allow,

1441
01:00:21,100 --> 01:00:23,100
 so given this condition,

1442
01:00:23,100 --> 01:00:25,100
 the determinant will only be positive

1443
01:00:25,100 --> 01:00:27,100
 1 or negative 1,

1444
01:00:27,100 --> 01:00:29,100
 but if you don't add

1445
01:00:29,100 --> 01:00:31,100
 this constraint, then it's possible you could get

1446
01:00:31,100 --> 01:00:33,100
 something that's a rotation plus a reflection.

1447
01:00:33,100 --> 01:00:35,100
 It would still be an

1448
01:00:35,100 --> 01:00:37,100
 orthonormal matrix, okay?

1449
01:00:37,100 --> 01:00:39,100
 So, I just

1450
01:00:39,100 --> 01:00:41,100
 meant to make, I was trying to emphasize that,

1451
01:00:41,100 --> 01:00:43,100
 and I realized it looked like plus or minus.

1452
01:00:43,100 --> 01:00:45,100
 Okay, so,

1453
01:00:45,100 --> 01:00:51,100
 if you have a determinant

1454
01:00:51,100 --> 01:00:53,100
 negative 1,

1455
01:00:53,100 --> 01:00:55,100
 then that would be

1456
01:00:55,100 --> 01:00:57,100
 called an improper rotation.

1457
01:00:57,100 --> 01:00:59,100
 And we want to be, I guess, proper

1458
01:00:59,100 --> 01:01:01,100
 here, so.

1459
01:01:01,100 --> 01:01:03,100
 Okay, so

1460
01:01:03,100 --> 01:01:05,100
 this is interesting now.

1461
01:01:05,100 --> 01:01:07,100
 This is

1462
01:01:07,100 --> 01:01:09,100
 almost like the optimization

1463
01:01:09,100 --> 01:01:11,100
 we wrote last time, where we have,

1464
01:01:11,100 --> 01:01:13,100
 we still, I see this,

1465
01:01:13,100 --> 01:01:15,100
 and I see a quadratic objective.

1466
01:01:15,100 --> 01:01:17,100
 Do you see a quadratic

1467
01:01:17,100 --> 01:01:19,100
 objective yet? I mean,

1468
01:01:19,100 --> 01:01:21,100
 the decision variables are here,

1469
01:01:21,100 --> 01:01:23,100
 right?

1470
01:01:23,100 --> 01:01:25,100
 In this inside of the equation,

1471
01:01:25,100 --> 01:01:27,100
 all of the decision variables

1472
01:01:27,100 --> 01:01:29,100
 enter linearly,

1473
01:01:29,100 --> 01:01:31,100
 okay?

1474
01:01:31,100 --> 01:01:33,100
 Because this is known, this is

1475
01:01:35,100 --> 01:01:37,100
 known.

1476
01:01:37,100 --> 01:01:39,100
 So the decision variables

1477
01:01:39,100 --> 01:01:41,100
 enter linearly,

1478
01:01:41,100 --> 01:01:43,100
 and when I square it,

1479
01:01:43,100 --> 01:01:45,100
 I will get at most

1480
01:01:45,100 --> 01:01:47,100
 a quadratic term in the decision variables.

1481
01:01:47,100 --> 01:01:49,100
 And it's going to be,

1482
01:01:49,100 --> 01:01:51,100
 because it's this nice, you know,

1483
01:01:51,100 --> 01:01:53,100
 some quantity squared, that means

1484
01:01:53,100 --> 01:01:55,100
 my objective is still some nice

1485
01:01:55,100 --> 01:01:57,100
 quadratic form

1486
01:01:57,100 --> 01:01:59,100
 in my P and R.

1487
01:01:59,100 --> 01:02:01,100
 That's good.

1488
01:02:01,100 --> 01:02:03,100
 We're in the land of

1489
01:02:03,100 --> 01:02:05,100
 quadratic optimization.

1490
01:02:05,100 --> 01:02:07,100
 This one, however,

1491
01:02:07,100 --> 01:02:09,100
 is also quadratic,

1492
01:02:09,100 --> 01:02:11,100
 right? If I take the

1493
01:02:11,100 --> 01:02:13,100
 two terms here and multiply

1494
01:02:13,100 --> 01:02:15,100
 the coefficients of the matrix

1495
01:02:15,100 --> 01:02:17,100
 together, then I'm going to get terms that are

1496
01:02:17,100 --> 01:02:19,100
 quadratic in the elements

1497
01:02:19,100 --> 01:02:21,100
 of R. And I'll do the two-by-two case in just a second.

1498
01:02:21,100 --> 01:02:23,100
 But this is now

1499
01:02:23,100 --> 01:02:25,100
 also a quadratic constraint.

1500
01:02:25,100 --> 01:02:43,100
 So last time we talked about quadratic objectives with linear constraints, and we said there's beautiful solutions. That's the quadratic program.

1501
01:02:43,100 --> 01:02:47,100
 Quadratic objectives with quadratic constraints are not quite as nice.

1502
01:02:47,100 --> 01:02:49,100
 These are called

1503
01:02:49,100 --> 01:02:51,100
 QCQPs,

1504
01:02:51,100 --> 01:02:53,100
 quadratically constrained quadratic

1505
01:02:53,100 --> 01:02:55,100
 programs.

1506
01:02:55,100 --> 01:02:57,100
 And they don't

1507
01:02:57,100 --> 01:02:59,100
 admit, in some cases they admit

1508
01:02:59,100 --> 01:03:01,100
 solutions beautifully, but in general

1509
01:03:01,100 --> 01:03:03,100
 don't admit the same

1510
01:03:03,100 --> 01:03:05,100
 natural solution techniques.

1511
01:03:05,100 --> 01:03:07,100
 Okay?

1512
01:03:07,100 --> 01:03:09,100
 And then this one

1513
01:03:09,100 --> 01:03:11,100
 is actually a cubic.

1514
01:03:11,100 --> 01:03:13,100
 Oh no, so it depends on

1515
01:03:13,100 --> 01:03:15,100
 the thing. At worst it could be a cubic

1516
01:03:15,100 --> 01:03:17,100
 constraint.

1517
01:03:17,100 --> 01:03:19,100
 So we're going to tend to,

1518
01:03:19,100 --> 01:03:21,100
 I'm going to just, full disclosure, we're going to

1519
01:03:21,100 --> 01:03:23,100
 tend to ignore this.

1520
01:03:23,100 --> 01:03:25,100
 And I'll justify that

1521
01:03:25,100 --> 01:03:27,100
 in a little bit.

1522
01:03:27,100 --> 01:03:35,100
 So let me just do this in a, since that was

1523
01:03:35,100 --> 01:03:37,100
 a little bit abstract, I can make

1524
01:03:37,100 --> 01:03:39,100
 it very clear

1525
01:03:39,100 --> 01:03:41,100
 I think in the two-by-two case.

1526
01:03:41,100 --> 01:03:43,100
 In a 2D

1527
01:03:43,100 --> 01:03:45,100
 optimization.

1528
01:03:45,100 --> 01:03:53,100
 So rotation matrix

1529
01:03:53,100 --> 01:03:55,100
 in 2D

1530
01:03:55,100 --> 01:03:59,100
 you probably think of

1531
01:03:59,100 --> 01:04:01,100
 for instance writing

1532
01:04:01,100 --> 01:04:03,100
 cosine of theta,

1533
01:04:03,100 --> 01:04:05,100
 negative sine of theta,

1534
01:04:05,100 --> 01:04:07,100
 sine theta,

1535
01:04:07,100 --> 01:04:09,100
 cosine theta.

1536
01:04:09,100 --> 01:04:11,100
 That's the sort of,

1537
01:04:11,100 --> 01:04:13,100
 when you think 2D rotation matrix

1538
01:04:13,100 --> 01:04:15,100
 maybe you think about this.

1539
01:04:15,100 --> 01:04:17,100
 That is the map that goes from

1540
01:04:17,100 --> 01:04:19,100
 theta to a rotation matrix.

1541
01:04:19,100 --> 01:04:21,100
 I'm going to here,

1542
01:04:21,100 --> 01:04:23,100
 I want to avoid

1543
01:04:23,100 --> 01:04:25,100
 this non-linearity of cosine

1544
01:04:25,100 --> 01:04:27,100
 and sine, so I'm just going to

1545
01:04:27,100 --> 01:04:29,100
 over-parameterize it here. I'm going to call

1546
01:04:29,100 --> 01:04:31,100
 that AB, negative

1547
01:04:31,100 --> 01:04:33,100
 BA.

1548
01:04:33,100 --> 01:04:35,100
 Like this.

1549
01:04:35,100 --> 01:04:37,100
 So after I solve for A and B

1550
01:04:37,100 --> 01:04:39,100
 I can back out what theta is.

1551
01:04:39,100 --> 01:04:41,100
 If I want. But I'm going to parameterize it

1552
01:04:41,100 --> 01:04:43,100
 like this. And I'm going to take advantage

1553
01:04:43,100 --> 01:04:45,100
 of the fact that I know that

1554
01:04:45,100 --> 01:04:47,100
 I could use four numbers

1555
01:04:47,100 --> 01:04:49,100
 to do it, but I don't have to because

1556
01:04:49,100 --> 01:04:51,100
 I know that proper

1557
01:04:51,100 --> 01:04:53,100
 rotation matrices

1558
01:04:53,100 --> 01:04:55,100
 have this structure.

1559
01:04:55,100 --> 01:04:57,100
 In 2D.

1560
01:04:57,100 --> 01:05:01,100
 So if I then write

1561
01:05:01,100 --> 01:05:03,100
 what is the

1562
01:05:03,100 --> 01:05:05,100
 RR transpose

1563
01:05:05,100 --> 01:05:07,100
 equals I constraint.

1564
01:05:07,100 --> 01:05:09,100
 If I just multiply

1565
01:05:09,100 --> 01:05:11,100
 this times the transpose of this

1566
01:05:11,100 --> 01:05:13,100
 then I get two constraints

1567
01:05:13,100 --> 01:05:15,100
 basically. The four elements

1568
01:05:15,100 --> 01:05:17,100
 all give me

1569
01:05:17,100 --> 01:05:19,100
 being one or being zero.

1570
01:05:19,100 --> 01:05:21,100
 This constraint

1571
01:05:21,100 --> 01:05:23,100
 converts into just A squared

1572
01:05:23,100 --> 01:05:25,100
 plus B squared equals

1573
01:05:25,100 --> 01:05:27,100
 one and

1574
01:05:27,100 --> 01:05:29,100
 AB minus BA

1575
01:05:29,100 --> 01:05:31,100
 equals zero.

1576
01:05:31,100 --> 01:05:37,100
 So when I say this is quadratically constrained

1577
01:05:37,100 --> 01:05:39,100
 that's exactly, you can see it

1578
01:05:39,100 --> 01:05:41,100
 multiplied out here.

1579
01:05:41,100 --> 01:05:47,100
 If I did choose to parameterize

1580
01:05:47,100 --> 01:05:49,100
 with theta, I

1581
01:05:49,100 --> 01:05:51,100
 can do that. People do do that. We will

1582
01:05:51,100 --> 01:05:53,100
 find examples where we do that.

1583
01:05:53,100 --> 01:05:55,100
 It's still potentially a

1584
01:05:55,100 --> 01:05:57,100
 reasonable problem, but it becomes a non-linear

1585
01:05:57,100 --> 01:05:59,100
 optimization problem.

1586
01:05:59,100 --> 01:06:01,100
 And the language of sort of

1587
01:06:01,100 --> 01:06:03,100
 unique minima describing

1588
01:06:03,100 --> 01:06:05,100
 the solution is no longer valid

1589
01:06:05,100 --> 01:06:07,100
 for us. So that's why

1590
01:06:07,100 --> 01:06:09,100
 we go from this representation to this representation.

1591
01:06:09,100 --> 01:06:11,100
 To be linear in our decision

1592
01:06:11,100 --> 01:06:13,100
 variables.

1593
01:06:13,100 --> 01:06:15,100
 And then quadratic in our decision variables.

1594
01:06:15,100 --> 01:06:19,100
 Okay.

1595
01:06:19,100 --> 01:06:21,100
 So let me consider for a moment

1596
01:06:21,100 --> 01:06:23,100
 since we've written now this thing

1597
01:06:23,100 --> 01:06:25,100
 with only two parameters

1598
01:06:25,100 --> 01:06:27,100
 A and B.

1599
01:06:27,100 --> 01:06:29,100
 Let's pretend I want to solve the optimization

1600
01:06:29,100 --> 01:06:31,100
 and I just won't worry about

1601
01:06:31,100 --> 01:06:33,100
 the positions and I'll just solve for rotations.

1602
01:06:33,100 --> 01:06:35,100
 What does that

1603
01:06:35,100 --> 01:06:37,100
 optimization landscape

1604
01:06:37,100 --> 01:06:39,100
 look like?

1605
01:06:39,100 --> 01:06:41,100
 Right?

1606
01:06:41,100 --> 01:06:43,100
 I have a quadratic objective

1607
01:06:43,100 --> 01:06:45,100
 and I have

1608
01:06:45,100 --> 01:06:47,100
 this constraint.

1609
01:06:47,100 --> 01:06:51,100
 I made a plot.

1610
01:06:51,100 --> 01:06:55,100
 Here we go.

1611
01:06:55,100 --> 01:06:57,100
 This is what it looks like.

1612
01:06:57,100 --> 01:07:01,100
 Okay? I'm going to, as I move

1613
01:07:01,100 --> 01:07:03,100
 the true rotation

1614
01:07:03,100 --> 01:07:05,100
 around, this is, on the left

1615
01:07:05,100 --> 01:07:07,100
 is the math

1616
01:07:07,100 --> 01:07:09,100
 that takes a handful of points

1617
01:07:09,100 --> 01:07:11,100
 and computes that objective.

1618
01:07:11,100 --> 01:07:13,100
 The green is the objective

1619
01:07:13,100 --> 01:07:15,100
 function.

1620
01:07:15,100 --> 01:07:17,100
 And the red is the constraint.

1621
01:07:17,100 --> 01:07:19,100
 Okay?

1622
01:07:19,100 --> 01:07:21,100
 This is A, this is B.

1623
01:07:21,100 --> 01:07:23,100
 For instance.

1624
01:07:23,100 --> 01:07:25,100
 A and positive B

1625
01:07:25,100 --> 01:07:27,100
 over here.

1626
01:07:27,100 --> 01:07:29,100
 As I move the desired

1627
01:07:29,100 --> 01:07:31,100
 formula around

1628
01:07:31,100 --> 01:07:33,100
 then the objective

1629
01:07:33,100 --> 01:07:35,100
 moves around.

1630
01:07:35,100 --> 01:07:39,100
 Okay?

1631
01:07:39,100 --> 01:07:41,100
 And beautifully, in this setting

1632
01:07:41,100 --> 01:07:43,100
 actually the minimum

1633
01:07:43,100 --> 01:07:45,100
 always lands on the unit circle.

1634
01:07:45,100 --> 01:07:47,100
 Okay?

1635
01:07:47,100 --> 01:07:49,100
 That's because I have no noise.

1636
01:07:49,100 --> 01:07:51,100
 In that case, it turns out

1637
01:07:51,100 --> 01:07:53,100
 if I ignored the

1638
01:07:53,100 --> 01:07:55,100
 constraint completely,

1639
01:07:55,100 --> 01:07:57,100
 I would get a valid rotation.

1640
01:07:57,100 --> 01:07:59,100
 That makes sense, right? Because if I

1641
01:07:59,100 --> 01:08:01,100
 wanted to minimize

1642
01:08:01,100 --> 01:08:03,100
 this cost

1643
01:08:03,100 --> 01:08:05,100
 and the true cost

1644
01:08:05,100 --> 01:08:07,100
 is a valid rotation, right?

1645
01:08:07,100 --> 01:08:09,100
 Then the thing I get back out should be a valid rotation also.

1646
01:08:09,100 --> 01:08:11,100
 As soon as you have

1647
01:08:11,100 --> 01:08:13,100
 noise though, this objective

1648
01:08:13,100 --> 01:08:15,100
 of trying to reconstruct the points,

1649
01:08:15,100 --> 01:08:17,100
 if you will, can move away

1650
01:08:17,100 --> 01:08:19,100
 from the unit circle and having

1651
01:08:19,100 --> 01:08:21,100
 this constraint that it better, find the best

1652
01:08:21,100 --> 01:08:23,100
 true rotation matrix

1653
01:08:23,100 --> 01:08:25,100
 that satisfies the constraints

1654
01:08:25,100 --> 01:08:27,100
 can be visualized in the optimization

1655
01:08:27,100 --> 01:08:29,100
 landscape as pulling you back in 2D

1656
01:08:29,100 --> 01:08:31,100
 just to the unit circle.

1657
01:08:31,100 --> 01:08:33,100
 Does that picture make sense?

1658
01:08:33,100 --> 01:08:35,100
 Okay.

1659
01:08:35,100 --> 01:08:41,100
 Now that's just

1660
01:08:41,100 --> 01:08:43,100
 for the rotation only case.

1661
01:08:43,100 --> 01:08:45,100
 But it turns out

1662
01:08:45,100 --> 01:08:47,100
 the rotation only case is

1663
01:08:47,100 --> 01:08:49,100
 all we actually need.

1664
01:08:49,100 --> 01:08:53,100
 There's a very clever trick.

1665
01:08:53,100 --> 01:08:55,100
 Actually, so

1666
01:08:55,100 --> 01:08:57,100
 Tom, do you remember

1667
01:08:57,100 --> 01:08:59,100
 a couple of lectures ago you asked me why

1668
01:08:59,100 --> 01:09:01,100
 I can go from

1669
01:09:01,100 --> 01:09:03,100
 we talked about spatial transforms, right?

1670
01:09:03,100 --> 01:09:05,100
 In our

1671
01:09:05,100 --> 01:09:07,100
 spatial transforms, we said

1672
01:09:07,100 --> 01:09:09,100
 BA

1673
01:09:09,100 --> 01:09:11,100
 expressed in, let me actually

1674
01:09:11,100 --> 01:09:13,100
 use the same letters I used before.

1675
01:09:13,100 --> 01:09:21,100
 If I want to change

1676
01:09:21,100 --> 01:09:23,100
 from PAB expressed in F

1677
01:09:23,100 --> 01:09:25,100
 to PAB expressed in G,

1678
01:09:25,100 --> 01:09:27,100
 I claimed I only needed the rotations.

1679
01:09:27,100 --> 01:09:29,100
 And you asked, "Why don't I have

1680
01:09:29,100 --> 01:09:31,100
 a position and a rotation?" And I said,

1681
01:09:31,100 --> 01:09:33,100
 "It's an exercise for the reader, but

1682
01:09:33,100 --> 01:09:35,100
 you only need rotations."

1683
01:09:35,100 --> 01:09:37,100
 It's not that hard to see.

1684
01:09:37,100 --> 01:09:39,100
 This is the relative

1685
01:09:39,100 --> 01:09:41,100
 distance, the relative position

1686
01:09:41,100 --> 01:09:43,100
 between two points.

1687
01:09:43,100 --> 01:09:45,100
 So if I move a frame in translation,

1688
01:09:45,100 --> 01:09:47,100
 the relative position

1689
01:09:47,100 --> 01:09:49,100
 between two points doesn't change.

1690
01:09:49,100 --> 01:09:51,100
 It's only when I

1691
01:09:51,100 --> 01:09:53,100
 rotate the frame that the relative position

1692
01:09:53,100 --> 01:09:55,100
 changes.

1693
01:09:55,100 --> 01:09:57,100
 It turns out

1694
01:09:57,100 --> 01:09:59,100
 we can exploit this trick

1695
01:09:59,100 --> 01:10:01,100
 to simplify that

1696
01:10:01,100 --> 01:10:03,100
 optimization problem. If instead

1697
01:10:03,100 --> 01:10:05,100
 of trying to write everything relative to

1698
01:10:05,100 --> 01:10:07,100
 the world frame, we

1699
01:10:07,100 --> 01:10:09,100
 do it relative to another point

1700
01:10:09,100 --> 01:10:11,100
 in the same frame,

1701
01:10:11,100 --> 01:10:13,100
 then the positions

1702
01:10:13,100 --> 01:10:15,100
 drop, and

1703
01:10:15,100 --> 01:10:17,100
 I can only optimize for rotation.

1704
01:10:17,100 --> 01:10:19,100
 Okay?

1705
01:10:19,100 --> 01:10:23,100
 The relative position

1706
01:10:23,100 --> 01:10:29,100
 only depends

1707
01:10:29,100 --> 01:10:33,100
 on rotation.

1708
01:10:33,100 --> 01:10:37,100
 So the

1709
01:10:37,100 --> 01:10:39,100
 way that that manifests itself in this

1710
01:10:39,100 --> 01:10:41,100
 equation is you just

1711
01:10:41,100 --> 01:10:43,100
 basically pick some canonical point

1712
01:10:43,100 --> 01:10:45,100
 in the point cloud.

1713
01:10:45,100 --> 01:10:47,100
 Typically people pick the centroid

1714
01:10:47,100 --> 01:10:49,100
 of the point cloud.

1715
01:10:49,100 --> 01:10:51,100
 And you write all of the model points

1716
01:10:51,100 --> 01:10:53,100
 relative to the centroid.

1717
01:10:53,100 --> 01:10:55,100
 And if

1718
01:10:55,100 --> 01:10:57,100
 you do the algebra, this term

1719
01:10:57,100 --> 01:10:59,100
 disappears.

1720
01:10:59,100 --> 01:11:01,100
 And then you can always back it out

1721
01:11:01,100 --> 01:11:03,100
 later after you've estimated the rotation.

1722
01:11:03,100 --> 01:11:07,100
 So once I get to this relatively simpler

1723
01:11:07,100 --> 01:11:09,100
 optimization, the same one

1724
01:11:09,100 --> 01:11:11,100
 I was working on here,

1725
01:11:11,100 --> 01:11:13,100
 this one

1726
01:11:13,100 --> 01:11:15,100
 actually has a nice solution.

1727
01:11:15,100 --> 01:11:17,100
 Although QC, QPs in general don't

1728
01:11:17,100 --> 01:11:19,100
 have a great solution, this is a

1729
01:11:19,100 --> 01:11:21,100
 special case, and it has

1730
01:11:21,100 --> 01:11:23,100
 an excellent solution. And it's

1731
01:11:23,100 --> 01:11:25,100
 obtained by just calling SVD.

1732
01:11:25,100 --> 01:11:27,100
 Okay? This is one of the magic

1733
01:11:27,100 --> 01:11:29,100
 cases where SVD just

1734
01:11:29,100 --> 01:11:31,100
 solves the problem.

1735
01:11:41,100 --> 01:11:43,100
 So the problem of minimizing

1736
01:11:43,100 --> 01:11:47,100
 over R,

1737
01:11:47,100 --> 01:11:49,100
 the sum over I,

1738
01:11:49,100 --> 01:11:53,100
 R P0

1739
01:11:53,100 --> 01:11:55,100
 Mi minus P0

1740
01:11:55,100 --> 01:11:57,100
 Si squared,

1741
01:11:57,100 --> 01:12:01,100
 subject to R

1742
01:12:01,100 --> 01:12:03,100
 transpose equals I,

1743
01:12:03,100 --> 01:12:07,100
 has a closed form solution.

1744
01:12:07,100 --> 01:12:09,100
 with the singular value decomposition.

1745
01:12:09,100 --> 01:12:25,100
 That's amazing, right?

1746
01:12:25,100 --> 01:12:27,100
 And this becomes a staple

1747
01:12:27,100 --> 01:12:29,100
 of our perception algorithms.

1748
01:12:29,100 --> 01:12:31,100
 So what does that mean in practice?

1749
01:12:31,100 --> 01:12:33,100
 I can do things like this.

1750
01:12:35,100 --> 01:12:37,100
 I have a

1751
01:12:37,100 --> 01:12:39,100
 model

1752
01:12:39,100 --> 01:12:41,100
 and a scene.

1753
01:12:41,100 --> 01:12:43,100
 Let me make sure I get the right ones

1754
01:12:43,100 --> 01:12:45,100
 correct. I'm going to move my model

1755
01:12:45,100 --> 01:12:47,100
 into my scene, okay?

1756
01:12:47,100 --> 01:12:49,100
 Given this transform.

1757
01:12:49,100 --> 01:12:51,100
 So the scene is my

1758
01:12:51,100 --> 01:12:53,100
 salmon color, I think, when I picked it.

1759
01:12:53,100 --> 01:12:55,100
 And the light blue

1760
01:12:55,100 --> 01:12:57,100
 is the model.

1761
01:12:57,100 --> 01:12:59,100
 Let me just say this one thing.

1762
01:12:59,100 --> 01:13:01,100
 And then I'm going to, I assumed,

1763
01:13:01,100 --> 01:13:03,100
 I made a huge assumption,

1764
01:13:03,100 --> 01:13:05,100
 that we knew which point in the scene

1765
01:13:05,100 --> 01:13:07,100
 corresponded to which point in the model.

1766
01:13:07,100 --> 01:13:09,100
 That's what these lines indicate.

1767
01:13:09,100 --> 01:13:11,100
 For every one of those

1768
01:13:11,100 --> 01:13:13,100
 I knew which point it should correspond to.

1769
01:13:13,100 --> 01:13:15,100
 And I did it in this example

1770
01:13:15,100 --> 01:13:17,100
 by just perfectly causing a rotation on that.

1771
01:13:17,100 --> 01:13:21,100
 And it turns out, in that setting

1772
01:13:21,100 --> 01:13:23,100
 where I have the known correspondences,

1773
01:13:23,100 --> 01:13:25,100
 and I only have to

1774
01:13:25,100 --> 01:13:27,100
 estimate translation

1775
01:13:27,100 --> 01:13:29,100
 and rotation,

1776
01:13:29,100 --> 01:13:31,100
 there's effectively a closed form solution

1777
01:13:31,100 --> 01:13:33,100
 that will snap and find the rotations.

1778
01:13:33,100 --> 01:13:35,100
 Yes?

1779
01:13:35,100 --> 01:13:37,100
 [inaudible]

1780
01:13:37,100 --> 01:13:47,100
 Oh, over here.

1781
01:13:47,100 --> 01:13:49,100
 So

1782
01:13:49,100 --> 01:13:51,100
 what I did here was I

1783
01:13:51,100 --> 01:13:53,100
 moved the

1784
01:13:53,100 --> 01:13:55,100
 two point clouds,

1785
01:13:55,100 --> 01:13:57,100
 the scene, salmon colored scene,

1786
01:13:57,100 --> 01:13:59,100
 and the blue colored model

1787
01:13:59,100 --> 01:14:01,100
 to be in the same world frame,

1788
01:14:01,100 --> 01:14:03,100
 or the same frame.

1789
01:14:03,100 --> 01:14:05,100
 So the fact that it's this brown thing,

1790
01:14:05,100 --> 01:14:07,100
 that's salmon plus blue.

1791
01:14:07,100 --> 01:14:11,100
 [inaudible]

1792
01:14:11,100 --> 01:14:21,100
 I could have moved them

1793
01:14:21,100 --> 01:14:23,100
 both into

1794
01:14:23,100 --> 01:14:25,100
 a world frame.

1795
01:14:25,100 --> 01:14:27,100
 I plotted it, what did I do? I guess

1796
01:14:27,100 --> 01:14:29,100
 I think I moved the

1797
01:14:29,100 --> 01:14:31,100
 model into

1798
01:14:31,100 --> 01:14:33,100
 the scene in this case.

1799
01:14:33,100 --> 01:14:35,100
 I'm consistent.

1800
01:14:35,100 --> 01:14:37,100
 The scene I estimated in the world frame.

1801
01:14:37,100 --> 01:14:39,100
 That's what the salmon is.

1802
01:14:39,100 --> 01:14:41,100
 I solved for the

1803
01:14:41,100 --> 01:14:43,100
 rotation and translation that would move

1804
01:14:43,100 --> 01:14:45,100
 the model into the scene.

1805
01:14:45,100 --> 01:14:47,100
 And then I applied that

1806
01:14:47,100 --> 01:14:49,100
 to the blue color.

1807
01:14:49,100 --> 01:14:51,100
 And the result was that points landed

1808
01:14:51,100 --> 01:14:53,100
 right on top of each other.

1809
01:14:53,100 --> 01:14:55,100
 And I got a lovely mud brown

1810
01:14:55,100 --> 01:14:57,100
 for the geometry.

1811
01:14:57,100 --> 01:14:59,100
 [inaudible]

1812
01:14:59,100 --> 01:15:07,100
 So the, um,

1813
01:15:07,100 --> 01:15:09,100
 I have to remember to repeat the questions.

1814
01:15:09,100 --> 01:15:11,100
 What is the scene and what is the model?

1815
01:15:11,100 --> 01:15:13,100
 This is too perfect to get from a real

1816
01:15:13,100 --> 01:15:15,100
 depth sensor, but the scene is what you get

1817
01:15:15,100 --> 01:15:17,100
 from your camera.

1818
01:15:17,100 --> 01:15:19,100
 And right now I've assumed it's perfect and everything.

1819
01:15:19,100 --> 01:15:21,100
 We're going to remove those assumptions.

1820
01:15:21,100 --> 01:15:23,100
 The model is the, for the mustard bottle,

1821
01:15:23,100 --> 01:15:25,100
 I'm going to make a perfect

1822
01:15:25,100 --> 01:15:27,100
 model in CAD

1823
01:15:27,100 --> 01:15:29,100
 or something of a mustard bottle.

1824
01:15:29,100 --> 01:15:31,100
 And I'm going to go through the world, through my

1825
01:15:31,100 --> 01:15:33,100
 cameras, trying to find that model in the scene.

1826
01:15:33,100 --> 01:15:35,100
 Right?

1827
01:15:35,100 --> 01:15:37,100
 And I chose to represent that, instead of

1828
01:15:37,100 --> 01:15:39,100
 using a mesh, I'm going to represent it

1829
01:15:39,100 --> 01:15:41,100
 as a point cloud and just do,

1830
01:15:41,100 --> 01:15:43,100
 this is called point set registration

1831
01:15:43,100 --> 01:15:45,100
 or point cloud registration, what we're doing here.

1832
01:15:45,100 --> 01:15:47,100
 Take this point cloud and this point

1833
01:15:47,100 --> 01:15:49,100
 cloud, find the relative transform so that they

1834
01:15:49,100 --> 01:15:51,100
 become the same.

1835
01:15:51,100 --> 01:15:53,100
 (Question from audience)

1836
01:15:53,100 --> 01:15:55,100
 (Question from audience)

1837
01:15:55,100 --> 01:15:57,100
 The

1838
01:15:57,100 --> 01:15:59,100
 result of the brown thing is complete

1839
01:15:59,100 --> 01:16:01,100
 success. We've dominated this

1840
01:16:01,100 --> 01:16:03,100
 problem and the result

1841
01:16:03,100 --> 01:16:05,100
 was mud brown.

1842
01:16:05,100 --> 01:16:07,100
 It's the same mud brown that's here, yeah?

1843
01:16:07,100 --> 01:16:09,100
 (Question from audience)

1844
01:16:09,100 --> 01:16:11,100
 (Question from audience)

1845
01:16:11,100 --> 01:16:13,100
 Good.

1846
01:16:13,100 --> 01:16:15,100
 (Question from audience)

1847
01:16:15,100 --> 01:16:17,100
 (Question from audience)

1848
01:16:17,100 --> 01:16:19,100
 So,

1849
01:16:19,100 --> 01:16:21,100
 let me instead of,

1850
01:16:21,100 --> 01:16:23,100
 well, let me foreshadow

1851
01:16:23,100 --> 01:16:25,100
 what's going to happen next time.

1852
01:16:25,100 --> 01:16:27,100
 Which is that

1853
01:16:27,100 --> 01:16:29,100
 if you no

1854
01:16:29,100 --> 01:16:31,100
 longer know the correspondences, and you

1855
01:16:31,100 --> 01:16:33,100
 have to estimate the correspondences,

1856
01:16:33,100 --> 01:16:35,100
 then there's a relatively simple algorithm

1857
01:16:35,100 --> 01:16:37,100
 that I'll do at the beginning of next time, that

1858
01:16:37,100 --> 01:16:39,100
 will do this for you, and the results look

1859
01:16:39,100 --> 01:16:41,100
 something like this. It becomes an

1860
01:16:41,100 --> 01:16:43,100
 iterative algorithm, where you try to guess

1861
01:16:43,100 --> 01:16:45,100
 the correspondences,

1862
01:16:45,100 --> 01:16:47,100
 and then you apply this magic

1863
01:16:47,100 --> 01:16:49,100
 SVD solution,

1864
01:16:49,100 --> 01:16:51,100
 right? You apply the correspondences,

1865
01:16:51,100 --> 01:16:53,100
 you apply the magic SVD solution,

1866
01:16:53,100 --> 01:16:55,100
 and in the good cases,

1867
01:16:55,100 --> 01:16:57,100
 this works beautifully and can solve the harder

1868
01:16:57,100 --> 01:16:59,100
 problem. I will also

1869
01:16:59,100 --> 01:17:01,100
 show you outtakes next time, when it doesn't solve that

1870
01:17:01,100 --> 01:17:03,100
 perfectly. Right? And that's on

1871
01:17:03,100 --> 01:17:05,100
 a loop, which is why it's

1872
01:17:05,100 --> 01:17:07,100
 it gets bad again. It looks like it gets bad again.

1873
01:17:07,100 --> 01:17:09,100
 Okay?

1874
01:17:09,100 --> 01:17:11,100
 So, let me just ask a few questions

1875
01:17:11,100 --> 01:17:13,100
 about

1876
01:17:13,100 --> 01:17:15,100
 the version we already have here. So,

1877
01:17:15,100 --> 01:17:17,100
 what happens

1878
01:17:17,100 --> 01:17:19,100
 if the objects

1879
01:17:19,100 --> 01:17:21,100
 are perfectly symmetric?

1880
01:17:21,100 --> 01:17:23,100
 Remember my little...my shapes here were

1881
01:17:23,100 --> 01:17:25,100
 chosen to be intentionally asymmetric.

1882
01:17:25,100 --> 01:17:27,100
 So if I just go back to the simpler

1883
01:17:27,100 --> 01:17:29,100
 case here,

1884
01:17:29,100 --> 01:17:31,100
 what happens

1885
01:17:31,100 --> 01:17:33,100
 if the object is perfectly symmetric?

1886
01:17:33,100 --> 01:17:37,100
 If I just did a square,

1887
01:17:37,100 --> 01:17:39,100
 or something like that. What changes in this optimization?

1888
01:17:39,100 --> 01:17:41,100
 [inaudible]

1889
01:17:41,100 --> 01:17:43,100
 Right. That's the

1890
01:17:43,100 --> 01:17:45,100
 right question. It says, "Do we still have those

1891
01:17:45,100 --> 01:17:47,100
 correct correspondences?" If the shape of the

1892
01:17:47,100 --> 01:17:49,100
 object was symmetric, in this part

1893
01:17:49,100 --> 01:17:51,100
 of the problem, that is irrelevant.

1894
01:17:51,100 --> 01:17:53,100
 Because I've already given you perfect

1895
01:17:53,100 --> 01:17:55,100
 correspondences, so there is no problem

1896
01:17:55,100 --> 01:17:57,100
 with symmetry.

1897
01:17:57,100 --> 01:17:59,100
 The next part of the problem, where we have to find

1898
01:17:59,100 --> 01:18:01,100
 the correspondences, will be susceptible

1899
01:18:01,100 --> 01:18:03,100
 to symmetries.

1900
01:18:03,100 --> 01:18:05,100
 Great. Okay. What happens

1901
01:18:05,100 --> 01:18:07,100
 if I don't have enough data

1902
01:18:07,100 --> 01:18:09,100
 points?

1903
01:18:09,100 --> 01:18:11,100
 That's kind of an interesting question. What if I

1904
01:18:11,100 --> 01:18:13,100
 had...if I'm trying to estimate this and I only

1905
01:18:13,100 --> 01:18:15,100
 have one data point, for instance?

1906
01:18:15,100 --> 01:18:17,100
 What's gonna happen?

1907
01:18:17,100 --> 01:18:19,100
 [inaudible]

1908
01:18:19,100 --> 01:18:21,100
 There'll be an infinite number of solutions.

1909
01:18:21,100 --> 01:18:23,100
 And, in practice,

1910
01:18:23,100 --> 01:18:25,100
 since I'm solving this in this sort of quadratic

1911
01:18:25,100 --> 01:18:27,100
 form, the solver

1912
01:18:27,100 --> 01:18:29,100
 will probably find the one that's closest to zero

1913
01:18:29,100 --> 01:18:31,100
 in these parameters.

1914
01:18:31,100 --> 01:18:33,100
 Okay? SVD would even do that, I think.

1915
01:18:33,100 --> 01:18:35,100
 Okay?

1916
01:18:35,100 --> 01:18:37,100
 So it's not...it

1917
01:18:37,100 --> 01:18:39,100
 will pick something, but it will be one of the

1918
01:18:39,100 --> 01:18:41,100
 infinite number of solutions.

1919
01:18:41,100 --> 01:18:43,100
 [inaudible]

1920
01:18:43,100 --> 01:18:45,100
 Good.

1921
01:18:45,100 --> 01:18:47,100
 Let me stop there, and we'll

1922
01:18:47,100 --> 01:18:49,100
 not try to jam the next

1923
01:18:49,100 --> 01:18:51,100
 thing into the next five minutes.

1924
01:18:51,100 --> 01:18:53,100
 I will see you Tuesday.

1925
01:18:53,100 --> 01:18:55,100
 [inaudible]

1926
01:18:55,100 --> 01:18:57,100
 [inaudible]

1927
01:18:57,100 --> 01:18:59,100
 [inaudible]

1928
01:18:59,100 --> 01:19:01,100
 [inaudible]

1929
01:19:01,100 --> 01:19:03,100
 [inaudible]

1930
01:19:03,100 --> 01:19:05,100
 [inaudible]

1931
01:19:05,100 --> 01:19:07,100
 [inaudible]

1932
01:19:07,100 --> 01:19:09,100
 [inaudible]

1933
01:19:09,100 --> 01:19:11,100
 How's it going?

1934
01:19:11,100 --> 01:19:13,100
 [inaudible]

1935
01:19:13,100 --> 01:19:15,100
 [inaudible]

1936
01:19:15,100 --> 01:19:17,100
 [inaudible]

1937
01:19:17,100 --> 01:19:19,100
 [inaudible]

1938
01:19:19,100 --> 01:19:21,100
 [inaudible]

